{"version":3,"sources":["assets/scss/vari.module.scss","redux/constants/authConstant.js","redux/api/apiClient.js","redux/services/authService.js","redux/actions/authAction.js","redux/constants/customerConstant.js","redux/services/customerService.js","redux/actions/customerAction.js","helpers.js","components/Guest/HeaderBar/index.js","components/share/Button01/index.js","components/Guest/Footer/index.js","components/Guest/HeaderSlider/Arrow.js","components/Guest/HeaderSlider/index.js","components/Guest/HomeCategory/item.js","components/Guest/HomeCategory/index.js","components/share/BreakSpace/index.js","components/Guest/ProductItemsSlider/Arrow.js","components/share/StarRated/index.js","redux/constants/cartConstant.js","redux/services/cartService.js","redux/actions/cartAction.js","components/share/ProductItem/index.js","components/Guest/ProductItemsSlider/index.js","redux/constants/productConstant.js","redux/services/productService.js","redux/actions/productAction.js","components/Guest/ProductItemsHorizontal/index.js","components/Guest/ProductNewList/index.js","components/share/TitleSection/index.js","components/Guest/HomeBanner/index.js","components/share/PragranceTypeItem/index.js","components/share/PragranceTypeSlider/index.js","redux/constants/fragranceConstant.js","redux/services/fragranceService.js","redux/actions/fragranceAction.js","components/Guest/HomePragrances/index.js","pages/Guest/Home/index.js","components/share/LogResBgPage/index.js","pages/Guest/Login/index.js","components/share/HeaderImage/index.js","pages/Guest/About/index.js","components/share/BlogBox/index.js","pages/Guest/Blog/index.js","pages/Guest/Contact/index.js","components/share/SelectAddress/index.js","pages/Guest/Register/index.js","redux/constants/categoryConstant.js","redux/services/categoryService.js","redux/actions/categoryAction.js","pages/Guest/Sale/index.js","redux/constants/manufactureConstant.js","pages/Admin/Product/EditProduct/EditProduct.jsx","redux/constants/employeeConstant.js","redux/constants/roleConstant.js","redux/constants/importNoteConstant.js","pages/Admin/ImportNote/EditImportNote/EditImportNote.jsx","pages/Admin/ImportNote/AddImportNote/AddImportNote.jsx","redux/constants/orderConstant.js","redux/services/orderService.js","redux/actions/orderAction.js","components/share/ProductItemBuy/index.js","pages/Admin/Report/ReportChoose/index.js","pages/Admin/Routes.jsx","components/share/ProductDetailImageSlider/index.js","pages/Guest/DetailProduct/index.js","components/share/ProductItemCart/index.js","pages/Guest/Cart/index.js","pages/Guest/Buy/paypal.js","pages/Guest/Buy/index.js","pages/Guest/Order/GuestOrders/index.js","pages/Guest/Order/GuestOrderDetail/GuestOrderDetail.jsx","App.js","reportWebVitals.js","redux/reducers/authReducer.js","redux/reducers/cartReducer.js","redux/reducers/categoryReducer.js","redux/reducers/customerReducer.js","redux/reducers/employeeReducer.js","redux/reducers/fragranceReducer.js","redux/reducers/importNoteReducer.js","redux/reducers/manufactureReducer.js","redux/reducers/orderReducer.js","redux/reducers/productReducer.js","redux/reducers/roleReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","AUTH_LOGIN","AUTH_LOGOUT","AUTH_CHECK_LOGIN_RELOAD","AUTH_REGISTER","AUTH_GET_CURRENT_USER","AUTH_SET_TOKEN","apiClient","axios","create","headers","Cookies","get","baseURL","process","responseType","AuthService","email","logout","type","actionTypes","payload","token","roles","loginCheckLocalAsync","dispatch","a","decoded","jwt_decode","sub","response","status","curr","data","role","name","ok","console","log","error","toast","CUSTOMER_GET_LIST","CUSTOMER_CREATE_NEW","CUSTOMER_DELETE_BY_ID","CUSTOMER_GET_SINGLE","CUSTOMER_EDIT_BY_ID","CUSTOMER_EDIT_ROLE_BY_ID","CUSTOMER_GET_BY_EMAIL","CustomerService","getCustomerByEmail","customerSingle","actionStypes","returnUrl","link","HeaderBar","isLogin","useSelector","state","auth","userCurrent","currentUser","useDispatch","useEffect","history","useHistory","handleOrdersOfUser","customerId","id","getCustomerByEmailAsyncB","then","res","push","className","src","alt","to","onClick","remove","window","location","href","image","Button01","children","width","height","isRadios","linkTo","style","Footer","placeholder","ArrowNext","props","ArrowPrev","settings","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","fade","nextArrow","prevArrow","HeaderSlider","Item","HomeCategory","BreakSpace","h","StarRated","rated","int_part","Math","trunc","float_part","Number","toFixed","Array","map","start","i","ratingValue","vari","starRated","starRatingUnfilled","CART_GET_CART","CART_ADD_PRODUCT","CART_DELETE_PRODUCT","CART_EDIT_NUMBER_PRODUCT","CartService","post","productid","delete","getCartAsync","cart","catch","deleteProductCartAsync","success","ProductItem","isHorizontal","price","handleOpenDetailProduct","idP","handleAddCartQuick","number","addProductCartAsync","value","displayType","thousandSeparator","ProductItemsSlider","isLoading","productList","product_list_ex","useState","productListRender","isLoadingRender","setIsLoadingRender","length","item","index","PRODUCT_GET_LIST","PRODUCT_GET_LIST_B","PRODUCT_CREATE_NEW","PRODUCT_DELETE_BY_ID","PRODUCT_GET_SINGLE","PRODUCT_EDIT_BY_ID","PRODUCT_GET_IMAGES","PRODUCT_GET_LIST_BY_MANUFACTURE_ID","PRODUCT_GET_LIST_BY_CATEGORY","ProductService","getListProductsAsync","reverse","getListProductsBAsync","getSingleProductAsync","productSingle","ProductItemsHorizontal","ProductNewList","products","listProductEx","filter","splice","TitleSection","title","HomeBanner","backgroundImage","PragranceTypeItem","img","desc","dots","PragranceTypeSlider","listP","pragrance_list_ex","pragranceListRender","setPragranceListRender","customPaging","dotsClass","FRAGRANCE_GET_LIST","FRAGRANCE_CREATE_NEW","FRAGRANCE_DELETE_BY_ID","FRAGRANCE_GET_SINGLE","FRAGRANCE_EDIT_BY_ID","FragranceService","getListFragrancesAsync","fragrancesList","HomePragrances","fragrances","fragranceList","listFragrance","Home","productListB","LogResBgPage","Login","password","formData","setFormData","handleChange","key","evt","target","onSubmit","preventDefault","required","onChange","HeaderImage","About","BlogBox","Blog","Contact","border","allowfullscreen","loading","customStylesSelect","option","provided","backgroundColor","isDisabled","undefined","isSelected","selectItemChoosed","isFocused","selectItemHover","singleValue","opacity","transition","fontSize","SelectAddress","getAddressChoose","eng","cityList","setCityList","districtList","setDistrictList","wardList","setWardList","cityChoose","setCityChoose","districtChoose","setDistrictChoose","wardChoose","setWardChoose","fetch","json","cities","label","districts","wards","city","district","ward","options","defaultValue","menuColor","styles","handleChangeCity","handleChangeDistrict","handleChangeWard","Register","genderOptions","gender_items","phone","gender","addressNo","cdw","formValidError","setFomValidError","isValidForm","setIsValidForm","handleChangeFormData","formD","err","test","checkValidateInput","CATEGORY_GET_LIST","CATEGORY_CREATE_NEW","CATEGORY_DELETE_BY_ID","CATEGORY_GET_SINGLE","CATEGORY_EDIT_BY_ID","CategoryService","getListCategoriesAsync","categoryList","categoryListEx","Sale","categories","MANUFACTURE_GET_LIST","MANUFACTURE_CREATE_NEW","MANUFACTURE_DELETE_BY_ID","MANUFACTURE_GET_SINGLE","MANUFACTURE_EDIT_BY_ID","EditProduct","EMPLOYEE_GET_LIST","EMPLOYEE_CREATE_NEW","EMPLOYEE_DELETE_BY_ID","EMPLOYEE_GET_SINGLE","EMPLOYEE_EDIT_BY_ID","EMPLOYEE_EDIT_ROLE_BY_ID","ROLE_GET_LIST","ROLE_CREATE_NEW","ROLE_DELETE_BY_ID","ROLE_GET_SINGLE","ROLE_EDIT_BY_ID","IMPORT_NOTE_GET_LIST","IMPORT_NOTE_CREATE_NEW","IMPORT_NOTE_GET_SINGLE","IMPORT_NOTE_GET_SINGLE_DETAIL","IMPORT_NOTE_UPDATE_STATUS_SUCCESS","IMPORT_NOTE_UPDATE_STATUS_DELETE","AddImportNote","ORDER_GET_LIST","ORDER_CREATE_NEW","ORDER_GET_SINGLE","ORDER_UPDATE_STATUS","ORDER_GET_BY_ID_CUSTOMER","OrderService","put","createOrderAsync","getSingleOrderAsync","orderSingle","updateOrderStatusAsync","ProductItemBuy","quantity","priceTotal","capacity","require","Routes","ProductDetailImageSlider","listImage","imageListRender","setImageListRender","productEx","DetailProduct","isOpenDesc","setOpenDesc","numberUserChoosed","setNumberUserChoosed","useParams","images","manufacture","description","ProductItemCart","productCart","handleDeleteProductCart","handleAddNumberProductCart","quantityProductCart","setQuantityProductCart","product","path","Cart","listProductCart","cartCustomer","calcTotalPriceCart","totalPriceCart","setTotalPriceCart","list","t","handleAddNumberProductCartt","newnumber","editNumberProductCartAsync","PayPal","loaded","setLoaded","payPalRef","useRef","script","document","createElement","addEventListener","body","appendChild","setTimeout","paypal","Buttons","createOrder","actions","order","purchase_units","amount","total","onApprove","capture","deposit","d","render","ref","v","Buy","totalPriceBill","setTotalPriceBill","showPaypal","setShowPaypal","customers","address","note","handleDatHangOnline","nameCustomer","phoneNumber","ispaid","GuestOrders","handleEdit","ordersOfUser","orders","ordersList","getOrdersCustomerAsync","idorder","createdate","totalprice","OrdersGustItem","GuestOrderDetail","importId","createday","nameEmployee","setStartStep","setStatusNow","nameManufacture","statusNow","steps","in","validator","wrapperClass","buttonWrapperClass","nextBtnName","startingStep","readonly","listimages","productName","App","basename","exact","component","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","errorMessage","authReducers","action","cartReducers","categorySingle","categoryReducers","customerList","customerReducers","employeeList","employeeSingle","employeeReducers","fragranceSingle","fragranceReducers","importNoteList","importNoteSingle","importNoteSingleDetail","importNoteReducers","manufactureList","manufactureSingle","manufactureReducers","orderList","orderReducers","productFilterByCategory","productReducers","roleList","roleSingle","roleReducers","rootReducer","combineReducers","manufactures","employees","importNote","middleware","thunk","store","createStore","applyMiddleware","ReactDOM","StrictMode","CookiesProvider","getElementById"],"mappings":"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","file":"static/js/main.a481a247.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"starRatingFilled\":\"#ffc107\",\"starRatingUnfilled\":\"#e4e5e9\",\"starRated\":\"#555\",\"selectItemHover\":\"#e4e2e2\",\"selectItemChoosed\":\"#949393\"};","export const AUTH_LOGIN = \"AUTH_LOGIN\"\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"\r\nexport const AUTH_CHECK_LOGIN_RELOAD = \"AUTH_CHECK_LOGIN_RELOAD\"\r\nexport const AUTH_REGISTER = \"AUTH_REGISTER\"\r\n\r\nexport const AUTH_GET_CURRENT_USER = \"AUTH_GET_CURRENT_USER\"\r\nexport const AUTH_SET_TOKEN = \"AUTH_SET_TOKEN\"","import axios from \"axios\"\r\nimport Cookies from 'js-cookie';\r\nconst apiClient = () => {\r\n    //const [AccessToken, setAccessToken] = useCookies(['X-Auth-Token']);\r\n    //const t = AccessToken[\"X-Auth-Token\"]\r\n    //const t = Cookies.get(\"X-Auth-Token\") ? Cookies.get(\"X-Auth-Token\") : \"\"\r\n    const axiosInstance = axios.create({\r\n        headers: {\r\n            // 'Access-Control-Allow-Origin': 'http://localhost:8090/',\r\n            // 'Access-Control-Allow-Credentials': 'true',\r\n            //'Authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJoYW9iaDEyM0BnbWFpbC5jb20iLCJleHAiOjE2Mzc1NzAwNjh9.cVTYevWJRrExI2cE0tARGYNTxxPd_q-I-TVthJ1mZrA'\r\n            'Authorization': Cookies.get('X-Auth-Token')\r\n        },\r\n        baseURL: process.env.REACT_APP_API_URL,\r\n        responseType: \"json\", \r\n            \r\n    });\r\n\r\n    return axiosInstance;\r\n};\r\n\r\nexport default apiClient;","import apiClient from \"../api/apiClient\";\r\n\r\nexport const AuthService = {\r\n    login:  ({ email, password }) => apiClient().post(\"api/auth/login\", { email, password }),\r\n    register:  (data) => apiClient().post(\"api/auth/register\", data),\r\n    findAccountByEmal: (email) => apiClient().get(`api/auth/email=${email}`)\r\n}\r\n\r\n","import * as actionTypes from '../constants/authConstant';\r\nimport  { AuthService } from '../services/authService';\r\nimport { toast } from 'react-toastify';\r\nimport Cookies from 'js-cookie';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst login = (userCurrent) => ({\r\n    type: actionTypes.AUTH_LOGIN,\r\n    payload: userCurrent,\r\n\r\n})\r\n\r\nexport function actSetToken(token) {\r\n    return {\r\n      type: actionTypes.AUTH_SET_TOKEN,\r\n      payload: token\r\n    }\r\n  }\r\n\r\nexport const loginAsync = (data) => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await AuthService.login(data) );\r\n\r\n\r\n            if(response.status === 200){\r\n                dispatch(login(response.data));\r\n                dispatch(actSetToken(response.data.token))\r\n                toast.success(\"Đăng nhập thành công!\");\r\n                // localStorage.setItem(\"userCurrentId\",response.data.data.id)\r\n                // localStorage.setItem(\"isLogin\",true)\r\n                // if(response.data.data.cart){\r\n                //     localStorage.setItem(\"cart\",response.data.data.cart)\r\n                // }else{\r\n                //     localStorage.setItem(\"cart\",JSON.stringify([]))\r\n                // }\r\n                \r\n                return {\r\n                    ok: true,\r\n                    currentUser: response.data\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n\r\n                // toast.success(response.error);\r\n            } \r\n        }catch(error){\r\n            console.log(\"error.response: \", error);\r\n            // const errorList = Object.values(error.response.data.message);\r\n            // if(errorList.length > 0){\r\n            //     errorList.map((item) => {\r\n            //         toast.error(item);\r\n            //     })\r\n            // }\r\n            toast.error(\"Sai thông tin đăng nhập!\");\r\n            //console.log(\"status aciton \", error.response); //404..\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//register (create customer)\r\nconst register = () => ({\r\n    type: actionTypes.AUTH_REGISTER,\r\n})\r\n\r\nexport const registerAsync = (data) => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await AuthService.register(data) );\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(register());\r\n                //dispatch(getListEmployeesAsync());\r\n                toast.success(\"REGISTER SUCCESS\");\r\n                return {\r\n                    ok: true\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n                console.log(\"response.eror: \", response.error);\r\n                \r\n            } \r\n        }catch(error){\r\n\r\n            toast.error(error.response.data)\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//log out\r\n// export const logout = () => ( {\r\n//     type: actionTypes.AUTH_LOGOUT,\r\n//     payload: {\r\n//         name: \" \",\r\n//         image: \" \",\r\n//         id: \" \"    \r\n//     },\r\n\r\n// })\r\n\r\nexport const logout = () => ( {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n    payload: {\r\n        token: Cookies.get('X-Auth-Token'),\r\n        type: \"Bearer\",\r\n        email: \" \",\r\n        roles: []   \r\n    },\r\n\r\n})\r\n\r\n\r\n\r\n//\r\nconst loginCheckLocal = (userCurrent) => ({\r\n    type: actionTypes.AUTH_CHECK_LOGIN_RELOAD,\r\n    payload: userCurrent,\r\n\r\n})\r\n\r\nexport const loginCheckLocalAsync = () => {\r\n    return async function(dispatch) { \r\n        const decoded = jwt_decode(Cookies.get('X-Auth-Token'));    \r\n        try{\r\n            let response = (await AuthService.findAccountByEmal(decoded.sub));\r\n            //dispatch(loginCheckLocal())\r\n\r\n\r\n            if(response.status === 200){\r\n                const curr = {\r\n                    token: Cookies.get('X-Auth-Token'),\r\n                    type: \"Bearer\",\r\n                    email: response.data.email,\r\n                    roles: [response.data.role.name]\r\n                }\r\n                dispatch(loginCheckLocal(curr));\r\n                //toast.success(\"Đăng nhập thành công!\");\r\n                return {\r\n                    ok: true,\r\n                    //userCurrent: response.data.data\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n                console.log(\"response.eror: xx\", response.error);\r\n                // toast.success(response.error);\r\n            } \r\n        }catch(error){\r\n\r\n            // const errorList = Object.values(error.response.data.message);\r\n            // if(errorList.length > 0){\r\n            //     errorList.map((item) => {\r\n            //         toast.error(item);\r\n            //     })\r\n            // }\r\n            toast.error(\"Oh có chút vấn đề! Bạn vui lòng đăng nhập lại nhé\");\r\n           // console.log(\"status aciton \", error.response.status); //404..\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// const loginCheckLocal = (userCurrent) => ({\r\n//     type: actionTypes.AUTH_CHECK_LOGIN_RELOAD,\r\n//     payload: userCurrent,\r\n\r\n// })\r\n\r\n// export const loginCheckLocalAsync = (token) => {\r\n//     return async function(dispatch) {     \r\n//         try{\r\n//             let response = (await UserService.getSingleUser(idInLocal));\r\n//             console.log(\"respon Login : xx\",response)\r\n//             console.log(\"response.data.data Login : xx\",response.data.data)\r\n//             if(response.data.success == true || response.status === 200 || response.status === 201){\r\n//                 dispatch(loginCheckLocal(response.data.data));\r\n//                 //toast.success(\"Đăng nhập thành công!\");\r\n//                 localStorage.setItem(\"userCurrentId\",response.data.data.id)\r\n//                 localStorage.setItem(\"isLogin\",true)\r\n//                 // localStorage.setItem(\"cart\",JSON.stringify(response.data.data.cart))\r\n//                 return {\r\n//                     ok: true,\r\n//                     userCurrent: response.data.data\r\n//                 }\r\n//             }\r\n//             else{//call api not success not run in here\r\n//                 console.log(\"response.eror: xx\", response.error);\r\n//                 // toast.success(response.error);\r\n//             } \r\n//         }catch(error){\r\n//             console.log(\"error.response: xx\", error.response);\r\n//             // const errorList = Object.values(error.response.data.message);\r\n//             // if(errorList.length > 0){\r\n//             //     errorList.map((item) => {\r\n//             //         toast.error(item);\r\n//             //     })\r\n//             // }\r\n//             toast.error(\"Oh có chút vấn đề! Bạn vui lòng đăng nhập lại nhé\");\r\n//            // console.log(\"status aciton \", error.response.status); //404..\r\n//             return{\r\n//                 ok: false\r\n//             }\r\n//         }\r\n//     }\r\n// }","export const CUSTOMER_GET_LIST = \"CUSTOMER_GET_LIST\"\r\nexport const CUSTOMER_GET_LIST_NAME = \"CUSTOMER_GET_LIST_NAME\"\r\nexport const CUSTOMER_CREATE_NEW = \"CUSTOMER_CREATE_NEW\"\r\nexport const CUSTOMER_DELETE_BY_ID = \"CUSTOMER_DELETE_BY_ID\"\r\nexport const CUSTOMER_GET_SINGLE = \"CUSTOMER_GET_SINGLE\"\r\nexport const CUSTOMER_EDIT_BY_ID = \"CUSTOMER_EDIT_BY_ID\"\r\nexport const CUSTOMER_EDIT_ROLE_BY_ID = \"CUSTOMER_EDIT_ROLE_BY_ID\"\r\nexport const CUSTOMER_GET_BY_EMAIL = \"CUSTOMER_GET_BY_EMAIL\"","import apiClient from \"../api/apiClient\";\r\n\r\n  \r\nexport const CustomerService = {\r\n    \r\n     getAllCustomers: () => apiClient().get(\"/api/customer/all\"),\r\n     getSingleCustomer: (email) => apiClient().get(`/api/customer/get-by-email?email=${email}`),\r\n    // createCustomer: (data) => apiClient().post(\"employee/register\", data),\r\n    // //deleteCustomer: (employeeId) => apiClient().delete(`/employee/${employeeId}`),\r\n    // getSingleCustomer: (id) => apiClient().get(`/employee/${id}`),\r\n    // editCustomer: (data) => apiClient().put(`/employee/update`, data),\r\n    // editRoleCustomer: (data) => apiClient().put(`/api/auth/account`, data),\r\n}","import * as actionStypes from '../constants/customerConstant';\r\nimport { CustomerService } from '../services/customerService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst getListCustomers = (customersList) => ({\r\n    type: actionStypes.CUSTOMER_GET_LIST,\r\n    payload: customersList,\r\n\r\n})\r\n\r\nexport const getListCustomersAsync = () => (dispatch) => {\r\n        CustomerService.getAllCustomers()\r\n        .then(response => {\r\n\r\n            dispatch(getListCustomers(response.data.reverse()));\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\n//get by email\r\nconst getCustomerByEmail = (customerSingle) => ({\r\n    type: actionStypes.CUSTOMER_GET_BY_EMAIL,\r\n    payload: customerSingle,\r\n\r\n})\r\n\r\nexport const getCustomerByEmailAsync = (email) => (dispatch) => {\r\n        CustomerService.getSingleCustomer(email)\r\n        .then(response => {\r\n            //console.log(\"response: \", response);\r\n            //console.log(\"response dt: \", response.data);\r\n            dispatch(getCustomerByEmail(response.data));\r\n            \r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\nexport const getCustomerByEmailAsyncB = (email)  => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await CustomerService.getSingleCustomer(email));\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(getCustomerByEmail(response.data));\r\n                //toast.success(\"UPDATE SUCCESS\");\r\n                return {\r\n                    ok: true,\r\n                    customerId: response.data.id\r\n                    //status: response.data.status\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n                console.log(\"response.eror: \", response.error);\r\n                \r\n            } \r\n        }catch(error){\r\n            //console.log(\"error.response: \", error.response);\r\n            //toast.error(\"UPDATE FAIL\")\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// //create \r\n// const createCustomer = () => ({\r\n//     type: actionStypes.CUSTOMER_CREATE_NEW,\r\n// })\r\n\r\n// export const createCustomerAsync = (data) => {\r\n//     return async function(dispatch) {     \r\n//         try{\r\n//             let response = (await CustomerService.createCustomer(data) );\r\n//             console.log(\"resposeeeeeeeeee: \",response);\r\n//             // eslint-disable-next-line\r\n//             if(response.status == 200){\r\n//                 dispatch(createCustomer());\r\n//                 dispatch(getListCustomersAsync());\r\n//                 toast.success(\"CREATE SUCCESS\");\r\n//                 return {\r\n//                     ok: true\r\n//                 }\r\n//             }\r\n//             else{//call api not success not run in here\r\n//                 console.log(\"response.eror: \", response.error);\r\n                \r\n//             } \r\n//         }catch(error){\r\n//             console.log(\"error.response: \", error.response);\r\n//             toast.error(error.response.data)\r\n//             return{\r\n//                 ok: false\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\n// //get single \r\n// const getSingleCustomer = (customerSingle) => ({\r\n//     type: actionStypes.CUSTOMER_GET_SINGLE,\r\n//     payload: customerSingle,\r\n\r\n// })\r\n\r\n// export const getSingleCustomerAsync = (id) => (dispatch) => {\r\n//         CustomerService.getSingleCustomer(id)\r\n//         .then(response => {\r\n//             //console.log(\"response: \", response);\r\n//             //console.log(\"response dt: \", response.data);\r\n//             dispatch(getSingleCustomer(response.data));\r\n            \r\n//         })\r\n//         .catch((error) => {\r\n//             console.log(\"error: \",error);\r\n//         });\r\n// }\r\n\r\n\r\n\r\n// //delete \r\n// // const deleteCustomer = () => ({\r\n// //     type: actionStypes.CUSTOMER_DELETE_BY_ID,\r\n// // })\r\n\r\n// // export const deleteCustomerAsync = (customerId) => (dispatch) => {\r\n// //         CustomerService.deleteCustomer(customerId)\r\n// //         .then(response => {\r\n// //             console.log(\"response: \", response);\r\n// //             dispatch(deleteCustomer());\r\n// //             dispatch(getListCustomersAsync());\r\n// //             toast.success(\"DELETE SUCCESS\");\r\n// //         })\r\n// //         .catch((error) => {\r\n// //             console.log(\"error.response: \", error.response);\r\n// //             // const errorList = Object.values(error.response.data.message);\r\n// //             // errorList.map((item) => {\r\n// //             //     toast.error(item);\r\n// //             // })\r\n// //             toast.error(error.response.data)\r\n// //         });\r\n// // }\r\n\r\n\r\n// //edit \r\n// const editCustomer = () => ({\r\n//     type: actionStypes.CUSTOMER_EDIT_BY_ID,\r\n// })\r\n\r\n// export const editCustomerAsync = (data)  => {\r\n//     return async function(dispatch) {     \r\n//         try{\r\n//             let response = (await CustomerService.editCustomer(data) );\r\n//             console.log(\"resposeeeeeeeeee: \",response);\r\n//             // eslint-disable-next-line\r\n//             if(response.status == 200){\r\n//                 dispatch(editCustomer());\r\n//                 dispatch(getListCustomersAsync());\r\n//                 toast.success(\"EDIT SUCCESS\");\r\n//                 return {\r\n//                     ok: true\r\n//                 }\r\n//             }\r\n//             else{//call api not success not run in here\r\n//                 console.log(\"response.eror: \", response.error);\r\n                \r\n//             } \r\n//         }catch(error){\r\n//             console.log(\"error.response: \", error.response);\r\n//             toast.error(error.response.data)\r\n//             return{\r\n//                 ok: false\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\n// //edit  role\r\n// const editRoleCustomer = () => ({\r\n//     type: actionStypes.CUSTOMER_EDIT_ROLE_BY_ID,\r\n// })\r\n\r\n// export const editRoleCustomerAsync = (data)  => {\r\n//     return async function(dispatch) {     \r\n//         try{\r\n//             let response = (await CustomerService.editRoleCustomer(data) );\r\n//             console.log(\"resposeeeeeeeeee: \",response);\r\n//             // eslint-disable-next-line\r\n//             if(response.status == 200){\r\n//                 dispatch(editCustomer());\r\n//                 dispatch(editRoleCustomer());\r\n//                 toast.success(\"EDIT SUCCESS\");\r\n//                 return {\r\n//                     ok: true\r\n//                 }\r\n//             }\r\n//             else{//call api not success not run in here\r\n//                 console.log(\"response.eror: \", response.error);\r\n                \r\n//             } \r\n//         }catch(error){\r\n//             console.log(\"error.response: \", error.response);\r\n//             toast.error(error.response.data)\r\n//             return{\r\n//                 ok: false\r\n//             }\r\n//         }\r\n//     }\r\n      \r\n// }","export const returnUrl = (link) => {\r\n    return `${process.env.PUBLIC_URL}${link}`\r\n}\r\n\r\n","import './style.scss'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Cookies from 'js-cookie';\r\nimport { useEffect } from 'react';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { loginCheckLocalAsync, logout } from '../../../redux/actions/authAction';\r\nimport { getCustomerByEmailAsyncB } from '../../../redux/actions/customerAction';\r\nimport { returnUrl } from '../../../helpers';\r\n\r\nexport default function HeaderBar(){\r\n    const isLogin = useSelector((state) => state.auth.isLogin);\r\n    const userCurrent = useSelector(state => state.auth.currentUser); \r\n    \r\n    // const userCurrent = {\r\n    //     name: \"Oggy\",\r\n    //     id: 1,\r\n    //     image: \" \"\r\n    // };\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    // //kt render\r\n    // useEffect(()=>{\r\n    //     if(localStorage.getItem(\"isLogin\") === \"true\"){\r\n    //         dispatch(loginCheckLocalAsync(localStorage.getItem(\"userCurrentId\")))\r\n    //     }\r\n    // },[])\r\n\r\n     //get tt\r\n    useEffect(()=>{   \r\n        if(Cookies.get('X-Auth-Token')){\r\n            const decoded = jwt_decode(Cookies.get('X-Auth-Token'));\r\n            dispatch(loginCheckLocalAsync())\r\n            //dispatch(loginCheckLocalAsync(localStorage.getItem(\"userCurrentId\")))\r\n        }\r\n    },[])\r\n\r\n    let history = useHistory();\r\n    const handleOrdersOfUser = (email) => {\r\n        dispatch(getCustomerByEmailAsyncB(email))\r\n        .then(res =>{\r\n            if(res.ok == true){\r\n                history.push(`/orders/${res.customerId}`);\r\n                \r\n            }\r\n        }\r\n        )\r\n        \r\n    }\r\n\r\n    const handleLogOut = () => {\r\n        Cookies.remove('X-Auth-Token')\r\n        //dispatch(saveCartAsync({id: userCurrent.id,cart: localStorage.getItem(\"cart\")}))\r\n        dispatch(logout());\r\n        window.location.href = \"/\"\r\n        \r\n        // localStorage.removeItem(\"userCurrentId\", userCurrent.id);\r\n        // localStorage.setItem(\"isLogin\",false)\r\n        // localStorage.removeItem(\"cart\");\r\n        //history.push(\"/\")\r\n    }     \r\n\r\n    return(\r\n        <div className=\"header-bar row-hh\">\r\n            <div className=\"col-4 logo-page\">\r\n                <span><img src={returnUrl(\"/assets/images/logoshop.png\")}  alt=\"\"></img></span>\r\n            </div>\r\n\r\n            <div className=\"col-4 list-page\">\r\n                <ul>\r\n                    <li><Link to=\"/\">Home</Link></li>\r\n                    <li><Link to=\"/sale\">Sale</Link></li>\r\n                    <li><Link to=\"/blog\">Blog</Link></li>\r\n                    <li><Link to=\"/about\">About</Link></li>\r\n                    <li><Link to=\"/contact\">Contact</Link></li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"col-4 icon-tool-page\">\r\n                {\r\n                    isLogin &&  <Link to=\"/cart\"><span className=\"icon-cart-2\"><i className='bx bx-shopping-bag icon-2'></i></span></Link> \r\n                }\r\n               \r\n\r\n                {\r\n                    isLogin && userCurrent ?\r\n                        <span className=\"icon-cart-2\" onClick={()=>handleOrdersOfUser(userCurrent.email)}><i className='bx bx-detail icon-2'></i></span>\r\n                    : ''\r\n                }\r\n\r\n                {\r\n                    isLogin && userCurrent ?\r\n                        <div className=\"info-user-current\"> \r\n                            <span className=\"icon-logout-2\" onClick={()=>handleLogOut()}><i className='bx bx-log-out-circle icon-2' ></i></span>  \r\n                            {\r\n                                userCurrent.image && !(userCurrent.image===\" \") ? <img alt=\"\" src = {process.env.REACT_APP_API_IMG + userCurrent.image}></img> :\r\n                                <img alt=\"\" src = \"/assets/images/cat.png\"></img>\r\n                            }  \r\n                             <span className=\"iuc-name\">{userCurrent.email}</span>\r\n                        </div> \r\n                    : <Link to=\"/login\"><span className=\"icon-login-2\"><i className='bx bx-log-in-circle icon-2' ></i></span></Link>\r\n                } \r\n\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\n","import './style.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Button01({\r\n    children,\r\n    width = \"180px\",\r\n    height = \"46px\",\r\n    isRadios = false,\r\n    linkTo=\"/\",\r\n    \r\n}){\r\n    if(isRadios){\r\n        return(\r\n           <Link to={linkTo}><div className=\"my-button radios\" style={{\"width\":`${width}`, \"height\": `${height}`, \"lineHeight\": `${height}`}}>{children}</div></Link>\r\n        ) \r\n    }\r\n    return(\r\n        <Link to={linkTo}><div className=\"my-button\" style={{\"width\":`${width}`, \"height\": `${height}`, \"lineHeight\": `${height}`}}>{children}</div></Link>\r\n    )\r\n}","import { Link } from 'react-router-dom';\r\nimport Button01 from '../../share/Button01';\r\nimport './style.scss';\r\n\r\nexport default function Footer(){\r\n\r\n    return(\r\n        <div className=\"footer-container\">\r\n            <div className=\"container\">\r\n                <div className=\"row-hh f-content\">\r\n                    <div className=\"col-5 f-local\">\r\n                        <div className=\"f-item-title\">COSMOS</div>\r\n                        <div className=\"f-item-content\">\r\n                            <span><i className='bx bx-map'></i> 97 Man Thien, Hiep Phu, Quan 9</span>\r\n                            <span><i className='bx bx-envelope' ></i> cosmos@gmail.com</span>\r\n                            <span><i className='bx bx-phone'></i> 0314159265</span>\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"col-4 f-link\">\r\n                        <div className=\"f-item-title\">Useful Links</div>\r\n                        <div className=\"f-item-content row-hh\">\r\n                            <div className=\"col-6\">\r\n                                <span><Link to=\"/\">Home</Link></span>\r\n                                <span><Link to=\"/\">Sale</Link></span>\r\n                                <span><Link to=\"/\">Blog</Link></span>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <span><Link to=\"/\">About</Link></span>\r\n                                <span><Link to=\"/\">Contact</Link></span>\r\n                                <span><a href=\"https://www.google.com\">Google</a></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-3 f-subcribe\">\r\n                        <div className=\"f-item-title\">Subcribe</div>\r\n                        <div className=\"f-item-content\">\r\n                            <input id=\"email-customer\" placeholder=\"exam@gmail.com\"></input>\r\n                            <div className=\"f-btn-sb\"><Button01 isRadios={true}>Subcribe</Button01></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"f-last\">\r\n                <span className=\"fl-icon\"><i className='bx bx-crown'></i></span>\r\n                <span className=\"fl-icon\"><i className='bx bx-rocket'></i></span>\r\n                <span className=\"fl-icon\"><i className='bx bx-planet'></i></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './Arrow.scss'\r\n\r\nexport function ArrowNext(props){\r\n    return (\r\n        <span className=\"arrow nextArrow\" onClick={props.onClick}>\r\n            <i className='bx bx-chevron-right next-arrow-icon'></i>\r\n\r\n            {/* <ChevronForwardOutline\r\n              color={'#f0f0f0'} \r\n              title={\"next-arrow\"}\r\n              height=\"20px\"\r\n              width=\"20px\"\r\n          /> */}\r\n        </span>\r\n    );\r\n}\r\n\r\nexport function ArrowPrev(props){\r\n    return (\r\n        <span className=\"arrow prevArrow\" onClick={props.onClick}>\r\n            <i className='bx bx-chevron-left prev-arrow-icon' ></i>\r\n          {/* <ChevronBackOutline\r\n            color={'#f0f0f0'} \r\n            title={\"prev-arrow\"}\r\n            height=\"20px\"\r\n            width=\"20px\"\r\n          /> */}\r\n        </span>\r\n    );\r\n}\r\n","import Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './style.scss'\r\nimport 'animate.css'\r\nimport { ArrowNext, ArrowPrev } from './Arrow'\r\nimport { returnUrl } from \"../../../helpers\";\r\n\r\nconst settings = {\r\n    // dots: true,\r\n    infinite: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    speed: 1000,\r\n    autoplaySpeed: 3000,\r\n    fade: true,\r\n    // cssEase: \"linear\",\r\n    nextArrow: <ArrowNext />,\r\n    prevArrow: <ArrowPrev />\r\n}\r\n\r\n\r\n\r\nexport default function HeaderSlider() {\r\n  return (\r\n    <div className=\"header-slider\">\r\n      <Slider {...settings}>\r\n        <div>\r\n          <div className=\"img-header-slider\">\r\n            <img src={returnUrl(\"/assets/images/headerSlide04.png\")} alt=\"\"></img>\r\n          </div>\r\n          <div className=\"content-header-slider\">\r\n            <p className=\"first-chs\">New Arrivals Everyday</p>\r\n            <p className=\"second-chs\">WELCOME</p>\r\n            <p className=\"third-chs\">Choose you, Choose your Style</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"img-header-slider\">\r\n            <img src={returnUrl(\"/assets/images/headerSlide05.png\")} alt=\"\"></img>\r\n          </div>\r\n          <div className=\"content-header-slider\">\r\n            <p className=\"first-chs\">New Arrivals Everyday</p>\r\n            <p className=\"second-chs\">WELCOME</p>\r\n            <p className=\"third-chs\">Choose you, Choose your Style</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"img-header-slider\">\r\n            <img src={returnUrl(\"/assets/images/headerSlide03.jpg\")} alt=\"\"></img>\r\n          </div>\r\n          <div className=\"content-header-slider\">\r\n            <p className=\"first-chs\">New Arrivals Everyday</p>\r\n            <p className=\"second-chs\">WELCOME</p>\r\n            <p className=\"third-chs\">Choose you, Choose your Style</p>\r\n          </div>\r\n        </div>\r\n      </Slider>\r\n    </div>\r\n  );\r\n}","import './item.scss'\r\nimport Button01 from '../../share/Button01'\r\nimport { returnUrl } from '../../../helpers'\r\n\r\n\r\nexport default function Item({\r\n    children,\r\n    image,\r\n    name,\r\n    isRadios=false,\r\n    width = \"180px\",\r\n    height = \"46px\",\r\n    linkTo=\"/sale\"\r\n}){\r\n    return(\r\n        <div className=\"type-product\">\r\n            <div className=\"product-image\"><img src={returnUrl(image)} alt=\"\"></img></div>\r\n            <div className=\"info\">{children}</div>\r\n            <div className=\"product-name\"><Button01 isRadios={isRadios} linkTo={linkTo} width={width} height={height}> {name} </Button01></div>         \r\n        </div>\r\n    )\r\n}","import './style.scss';\r\nimport Item from \"./item\";\r\n\r\nexport default function HomeCategory(){\r\n\r\n    return(\r\n        <div className=\"home-category-container container\">\r\n            <div className=\"row-hh\">\r\n                <div className=\"col-4\">\r\n                   <div className=\"row-hh row-long\">\r\n                        <Item \r\n                            name = \"Body Mist\"\r\n                            image = \"/assets/images/HomeCategory01.png\"\r\n                        />\r\n                   </div>\r\n                   <div className=\"row-hh row-short\">\r\n                        <Item \r\n                            name = \"Oil Mist\"\r\n                            image = \"/assets/images/HomeCategory02.png\"\r\n                        />\r\n                   </div>\r\n                </div>\r\n\r\n                <div className=\"col-4\">\r\n                   <div className=\"row-hh row-short\">\r\n                        <Item \r\n                            name = \"Perfume Oil\"\r\n                            image = \"/assets/images/HomeCategory03.png\"\r\n                        />\r\n                   </div>\r\n                   <div className=\"row-hh row-long\">\r\n                        <Item \r\n                            name = \"Perfumes\"\r\n                            image = \"/assets/images/HomeCategory04.png\"\r\n                        />\r\n                   </div>\r\n                </div>\r\n\r\n                <div className=\"col-4\">\r\n                   <div className=\"row-hh row-long\">\r\n                        <Item \r\n                            name = \"Aromatherapy\"\r\n                            image = \"/assets/images/HomeCategory05.png\"\r\n                        />\r\n                   </div>\r\n                   <div className=\"row-hh row-short\">\r\n                        <Item \r\n                            name = \"Body Spray\"\r\n                             //image = \"/assets/images/HomeCategory06.png\"\r\n                            image = \"/assets/images/HomeCategory06B.png\"\r\n                        />\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nexport default function BreakSpace({h}){\r\n    return(\r\n        <div style={{\"height\": `${h}`}}></div>\r\n    )\r\n}","import './Arrow.scss'\r\n\r\nexport function ArrowNext(props){\r\n    return (\r\n        <span className=\"arrow nextArrow\" onClick={props.onClick}>\r\n            <i className='bx bx-chevron-right next-arrow-icon'></i>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport function ArrowPrev(props){\r\n    return (\r\n        <span className=\"arrow prevArrow\" onClick={props.onClick}>\r\n            <i className='bx bx-chevron-left prev-arrow-icon' ></i>\r\n        </span>\r\n    );\r\n}\r\n","import './style.scss'\r\nimport vari from '../../../assets/scss/vari.module.scss';\r\nimport React from 'react';\r\n\r\nexport default function StarRated({rated}){\r\n    const int_part = Math.trunc(rated); \r\n    const float_part = Number((rated-int_part).toFixed(2));\r\n\r\n    return(\r\n        <div className=\"star-rated-container\">\r\n            {\r\n                [...Array(5)].map((start,i) => {\r\n                    const ratingValue = i + 1;\r\n                    return(\r\n                        <span key={i}>\r\n                            {\r\n                                float_part > 0 && ratingValue === (int_part + 1) ? \r\n                                <i className='bx bxs-star-half star-icon' style={{\"color\": `${vari.starRated}`}}></i> :\r\n                                ratingValue <= rated ? \r\n                                <i className='bx bxs-star star-icon' style={{\"color\": `${vari.starRated}`}}></i> :\r\n                                <i className='bx bxs-star star-icon' style={{\"color\": `${vari.starRatingUnfilled}`}}></i>\r\n                            }  \r\n                        </span>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","export const CART_GET_CART = \"CART_GET_CART\"\r\nexport const CART_ADD_PRODUCT = \"CART_ADD_PRODUCT\"\r\nexport const CART_DELETE_PRODUCT = \"CART_DELETE_PRODUCT\"\r\nexport const CART_EDIT_NUMBER_PRODUCT = \"CART_EDIT_NUMBER_PRODUCT\"\r\n","import apiClient from \"../api/apiClient\";\r\n\r\n  \r\nexport const CartService = {\r\n    \r\n    getCartCustomer: () => apiClient().get(\"/api/cart/all\"),\r\n    addProductCart: (data) => apiClient().post(\"/api/cart/add\", data), //{productid, number}\r\n    deleteProductCart: (productid) => apiClient().delete(`/api/cart/delete?productid=${productid}`),\r\n    editNumberProductCart: (data) => apiClient().put(`/api/cart/edit-number`, data),//{product, newnumber}\r\n    // editRoleCustomer: (data) => apiClient().put(`/api/auth/account`, data),\r\n}","import * as actionStypes from '../constants/cartConstant'\r\nimport { CartService } from '../services/cartService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst getCart = (cart) => ({\r\n    type: actionStypes.CART_GET_CART,\r\n    payload: cart,\r\n\r\n})\r\n\r\nexport const getCartAsync = () => (dispatch) => {\r\n    CartService.getCartCustomer()\r\n        .then(response => {\r\n\r\n            dispatch(getCart(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\n//add product, update number product cart\r\nconst addProductCart = () => ({\r\n    type: actionStypes.CART_ADD_PRODUCT,\r\n})\r\n\r\nexport const addProductCartAsync = ({ productid, number }) => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await CartService.addProductCart({ productid, number }) );\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(addProductCart());\r\n                dispatch(getCartAsync());\r\n                toast.success(\"ADD CART SUCCESS\");\r\n                return {\r\n                    ok: true\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n                console.log(\"response.eror: \", response.error);\r\n                toast.error(\"PLEASE LOGIN\")\r\n            } \r\n        }catch(error){\r\n\r\n            toast.error(error?.response?.data??\"\")\r\n            toast.error(\"PLEASE LOGIN\")\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//delete product\r\nconst deleteProductCart = () => ({\r\n    type: actionStypes.CART_DELETE_PRODUCT,\r\n})\r\n\r\nexport const deleteProductCartAsync = (productid) => (dispatch) => {\r\n        CartService.deleteProductCart(productid)\r\n        .then(response => {\r\n\r\n            dispatch(deleteProductCart());\r\n            dispatch(getCartAsync());\r\n            toast.success(\"DELETE SUCCESS\");\r\n        })\r\n        .catch((error) => {\r\n\r\n            // const errorList = Object.values(error.response.data.message);\r\n            // errorList.map((item) => {\r\n            //     toast.error(item);\r\n            // })\r\n            toast.error(error?.response?.data??\"\")\r\n        });\r\n}\r\n\r\n//edit number product cart\r\n// const editNumberProductCart = () => ({\r\n//     type: actionStypes.CART_EDIT_NUMBER_PRODUCT,\r\n// })\r\n\r\n// export const editNumberProductCartAsync = ({productid, newnumber })  => {\r\n//     return async function(dispatch) {     \r\n//         try{\r\n//             let response = (await CartService.editNumberProductCart({ productid, newnumber }) );\r\n//             console.log(\"resposeeeeeeeeee: \",response);\r\n//             // eslint-disable-next-line\r\n//             if(response.status == 200){\r\n//                 dispatch(editNumberProductCart());\r\n//                 dispatch(getCartAsync());\r\n//                 toast.success(\"EDIT NUMBER SUCCESS\");\r\n//                 return {\r\n//                     ok: true\r\n//                 }\r\n//             }\r\n//             else{//call api not success not run in here\r\n//                 console.log(\"response.eror: \", response.error);\r\n                \r\n//             } \r\n//         }catch(error){\r\n//             console.log(\"error.response: \", error.response);\r\n//             toast.error(error.response.data)\r\n//             return{\r\n//                 ok: false\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\n//add product, update number product cart\r\nconst editNumberProductCart = () => ({\r\n    type: actionStypes.CART_ADD_PRODUCT,\r\n})\r\n\r\nexport const editNumberProductCartAsync = ({ productid, number }) => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await CartService.addProductCart({ productid, number }) );\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(editNumberProductCart());\r\n                dispatch(getCartAsync());\r\n                //toast.success(\"UPDATE CART SUCCESS\");\r\n                return {\r\n                    ok: true\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n                console.log(\"response.eror: \", response.error);\r\n                \r\n            } \r\n        }catch(error){\r\n\r\n            toast.error(error?.response?.data??\"\")\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}\r\n","import './style.scss'\r\nimport Button01 from '../Button01';\r\nimport NumberFormat from 'react-number-format';\r\nimport StarRated from '../StarRated';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProductCartAsync } from '../../../redux/actions/cartAction';\r\nimport { returnUrl } from '../../../helpers';\r\n\r\nexport default function ProductItem({\r\n    isHorizontal = false,\r\n    image=\"/assets/images/pi-catusWater.jpg\", \r\n    name=\"catus water\", \r\n    rated = \"4\",\r\n    price=\"385000\",\r\n    id\r\n}){\r\n    let history = useHistory();\r\n    const handleOpenDetailProduct = (idP) => {\r\n        history.push(`/product-detail/${idP}`)\r\n    }\r\n\r\n    let dispatch = useDispatch();\r\n    const handleAddCartQuick = (id) => {\r\n        //history.push(window.location.href)\r\n        dispatch(addProductCartAsync({productid: id, number: 1}))\r\n    }\r\n   \r\n    return (\r\n\r\n        isHorizontal ? \r\n        <div className=\"product-item horizontal\" onClick={() => handleOpenDetailProduct(id)} key={id}> \r\n            <div className=\"pi-image\">\r\n                <img src={returnUrl(image)} alt=\"\"></img>\r\n                <div className=\"btn-add-to-cart\"><Button01 isRadios={true}>add to cart</Button01></div>\r\n                \r\n            </div>\r\n            <div className=\"pi-info\">\r\n                <span className=\"pi-name\">{name}</span>\r\n                <StarRated rated=\"4\"/>\r\n                \r\n                <span className=\"pi-price\"> <NumberFormat value={price} displayType={'text'} thousandSeparator={true} /> VND</span>\r\n            </div>\r\n        </div> :\r\n        \r\n        <div className=\"product-item\" onClick={() => handleOpenDetailProduct(id)}>\r\n            <div className=\"pi-image\">\r\n                    \r\n                <img src={returnUrl(image)} alt=\"\"></img>\r\n                <div className=\"btn-add-to-cart\" onClick={() => handleAddCartQuick(id)}><Button01 isRadios={true}>add to cart</Button01></div>\r\n                \r\n            </div>\r\n            <div className=\"pi-info\">\r\n                <span className=\"pi-name\">{name}</span>\r\n                <StarRated rated={rated}/>\r\n                \r\n                <span className=\"pi-price\"> <NumberFormat value={price} displayType={'text'} thousandSeparator={true} /> VND</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './style.scss'\r\nimport { ArrowNext, ArrowPrev } from './Arrow'\r\n\r\nimport ProductItem from \"../../share/ProductItem\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport product_list_ex from '../../../assets/json/list-product-hot.json';\r\n\r\nconst settings = {\r\n    // dots: true,\r\n    infinite: true,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    autoplay: false,\r\n    speed: 1000,\r\n    autoplaySpeed: 4000,\r\n    //fade: true,\r\n    // cssEase: \"linear\",\r\n    nextArrow: <ArrowNext />,\r\n    prevArrow: <ArrowPrev />\r\n}\r\n\r\n\r\n\r\nexport default function ProductItemsSlider({isLoading, productList = [...product_list_ex]}) {\r\n    const [productListRender, setProductListRender] = useState(productList);\r\n    const [isLoadingRender, setIsLoadingRender] =useState (isLoading)   \r\n    // useEffect(()=>{\r\n    //     setProductListRender(productList)\r\n    // },[productList])\r\n\r\n    useEffect(()=>{\r\n        setIsLoadingRender(isLoading)\r\n    },[isLoading])\r\n\r\n    return (\r\n        <div className=\"product-item-slider container\">\r\n          <Slider {...settings}>\r\n                {\r\n                    isLoadingRender ? <div>Loading...</div> :\r\n                    (\r\n                        productListRender && productListRender.length > 0 ? (\r\n                             \r\n                            productListRender.map((item, index) => \r\n                                <div key={index}>\r\n                                    <ProductItem \r\n                                        //image={process.env.REACT_APP_API_IMG + item.images[0].path}\r\n                                        image={item.image}\r\n                                        name = {item.name}\r\n                                        rated= {item.rated}\r\n                                        price = {item.price}\r\n                                        id = {item.id}\r\n                                    />\r\n                                </div> \r\n                            )\r\n                            \r\n                        ) : <div>Not Have Product</div>\r\n                    )                           \r\n                }\r\n           \r\n            {/* <div>\r\n                <ProductItem image=\"/assets/images/HomeCategory01.png\"\r\n                    name = \"Catus Water\"\r\n                    price = \"380.000\"/>\r\n            </div>\r\n            <div>\r\n                <ProductItem image=\"/assets/images/HomeCategory01.png\"\r\n                    name = \"Catus Water\"\r\n                    price = \"380.000\"/>\r\n            </div> */}\r\n\r\n          </Slider>\r\n        </div>\r\n      );\r\n}","export const PRODUCT_GET_LIST = \"PRODUCT_GET_LIST\"\r\nexport const PRODUCT_GET_LIST_B = \"PRODUCT_GET_LIST_B\"\r\nexport const PRODUCT_GET_LIST_NAME = \"PRODUCT_GET_LIST_NAME\"\r\nexport const PRODUCT_CREATE_NEW = \"PRODUCT_CREATE_NEW\"\r\nexport const PRODUCT_DELETE_BY_ID = \"PRODUCT_DELETE_BY_ID\"\r\nexport const PRODUCT_GET_SINGLE = \"PRODUCT_GET_SINGLE\"\r\nexport const PRODUCT_EDIT_BY_ID = \"PRODUCT_EDIT_BY_ID\"\r\nexport const PRODUCT_GET_IMAGES = \"PRODUCT_GET_IMAGES\"\r\nexport const PRODUCT_GET_LIST_BY_MANUFACTURE_ID = \"PRODUCT_GET_LIST_BY_MANUFACTURE_ID\"\r\nexport const PRODUCT_GET_LIST_BY_CATEGORY = \"PRODUCT_GET_LIST_BY_CATEGORY\"","import apiClient from \"../api/apiClient\";\r\n\r\nexport const ProductService = {\r\n    getAllProducts: () => apiClient().get(\"product/\"),\r\n    getAllProductsB: () => apiClient().get(\"product/b\"),\r\n    createProduct: (data) => apiClient().post(\"product/\", data),\r\n    getSingleProduct: (id) => apiClient().get(`/product/${id}`),\r\n\r\n    getImagesProduct: (id) => apiClient().get(`/product/${id}/list-image`),\r\n    deleteProduct: (productId) => apiClient().delete(`/product/${productId}`),\r\n    editProduct: (id, data) => apiClient().put(`/product/${id}`, data),\r\n\r\n    getProductByManufactureId: (id) => apiClient().get(`product/manufacture=${id}`),\r\n    getProductByCategory: (id) => apiClient().get(`product/get-by-category?categoryId=${id}`),\r\n}","import * as actionStypes from '../constants/productConstant';\r\nimport { ProductService } from '../services/productService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst getListProducts = (productList) => ({\r\n    type: actionStypes.PRODUCT_GET_LIST,\r\n    payload: productList,\r\n\r\n})\r\n\r\nexport const getListProductsAsync = () => (dispatch) => {\r\n        ProductService.getAllProducts()\r\n        .then(response => {\r\n\r\n            dispatch(getListProducts(response.data.reverse()));\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\n//get list product B\r\nconst getListProductsB = (productList) => ({\r\n    type: actionStypes.PRODUCT_GET_LIST_B,\r\n    payload: productList,\r\n\r\n})\r\n\r\nexport const getListProductsBAsync = () => (dispatch) => {\r\n        ProductService.getAllProductsB()\r\n        .then(response => {\r\n\r\n            dispatch(getListProductsB(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\n\r\n//get list by id manufacture\r\nconst getProductByManufactureId = (productList) => ({\r\n    type: actionStypes.PRODUCT_GET_LIST_BY_MANUFACTURE_ID,\r\n    payload: productList,\r\n\r\n})\r\n\r\nexport const getProductByManufactureIdAsync = (id) => (dispatch) => {\r\n        ProductService.getProductByManufactureId(id)\r\n        .then(response => {\r\n\r\n            dispatch(getProductByManufactureId(response.data.reverse()));\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\n//get list by id category\r\nconst getProductByCategoryId = (productList) => ({\r\n    type: actionStypes.PRODUCT_GET_LIST_BY_CATEGORY,\r\n    payload: productList,\r\n\r\n})\r\n\r\nexport const getProductByCategoryIdAsync = (id) => (dispatch) => {\r\n        ProductService.getProductByCategory(id)\r\n        .then(response => {\r\n\r\n            dispatch(getProductByCategoryId(response.data.reverse()));\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\n//create\r\nconst createProduct = () => ({\r\n    type: actionStypes.PRODUCT_CREATE_NEW,\r\n})\r\n\r\nexport const createProductAsync = (data) => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await ProductService.createProduct(data) );\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(createProduct());\r\n                dispatch(getListProductsAsync());\r\n                toast.success(\"CREATE SUCCESS\");\r\n                return {\r\n                    ok: true\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n\r\n                \r\n            } \r\n        }catch(error){\r\n\r\n            toast.error(error.response.data)\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// export const createProductAsync = ({ name, categoryId, manufactureId, idFragranceList, capacity, description, images }) => {\r\n//     return async function(dispatch) {     \r\n//         try{\r\n//             let response = (await ProductService.createProduct({ name, categoryId, manufactureId, idFragranceList, capacity, description, images }) );\r\n//             console.log(\"resposeeeeeeeeee: \",response);\r\n//             // eslint-disable-next-line\r\n//             if(response.status == 200){\r\n//                 dispatch(createProduct());\r\n//                 dispatch(getListProductsAsync());\r\n//                 toast.success(\"CREATE SUCCESS\");\r\n//                 return {\r\n//                     ok: true\r\n//                 }\r\n//             }\r\n//             else{//call api not success not run in here\r\n//                 console.log(\"response.eror: \", response.error);\r\n                \r\n//             } \r\n//         }catch(error){\r\n//             console.log(\"error.response: \", error.response);\r\n//             toast.error(error.response.data)\r\n//             return{\r\n//                 ok: false\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\n//get single \r\nconst getSingleProduct = (productSingle) => ({\r\n    type: actionStypes.PRODUCT_GET_SINGLE,\r\n    payload: productSingle,\r\n\r\n})\r\n\r\nexport const getSingleProductAsync = (id) => (dispatch) => {\r\n        ProductService.getSingleProduct(id)\r\n        .then(response => {\r\n            //console.log(\"response: \", response);\r\n            //console.log(\"response dt: \", response.data);\r\n            dispatch(getSingleProduct(response.data));\r\n            \r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\n\r\n\r\n//delete \r\nconst deleteProduct = () => ({\r\n    type: actionStypes.PRODUCT_DELETE_BY_ID,\r\n})\r\n\r\nexport const deleteProductAsync = (manufactureId) => (dispatch) => {\r\n        ProductService.deleteProduct(manufactureId)\r\n        .then(response => {\r\n\r\n            dispatch(deleteProduct());\r\n            dispatch(getListProductsAsync());\r\n            toast.success(\"DELETE SUCCESS\");\r\n        })\r\n        .catch((error) => {\r\n\r\n            // const errorList = Object.values(error.response.data.message);\r\n            // errorList.map((item) => {\r\n            //     toast.error(item);\r\n            // })\r\n            toast.error(error.response.data)\r\n        });\r\n}\r\n\r\n\r\n//edit Product\r\nconst editProduct = () => ({\r\n    type: actionStypes.PRODUCT_EDIT_BY_ID,\r\n})\r\n\r\nexport const editProductAsync = (id,data)  => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await ProductService.editProduct(id,data) );\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(editProduct());\r\n                dispatch(getListProductsAsync());\r\n                toast.success(\"EDIT SUCCESS\");\r\n                return {\r\n                    ok: true\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n\r\n                \r\n            } \r\n        }catch(error){\r\n\r\n            toast.error(error.response.data)\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n      \r\n\r\n}\r\n\r\n//get images\r\nconst getImagesProduct = (images) => ({\r\n    type: actionStypes.PRODUCT_GET_IMAGES,\r\n    payload: images\r\n\r\n})\r\n\r\nexport const getImagesProductAsync = (id) => (dispatch) => {\r\n    ProductService.getImagesProduct(id)\r\n    .then(response => {\r\n        //console.log(\"response: \", response);\r\n        //console.log(\"response dt: \", response.data);\r\n        dispatch(getImagesProduct(response.data));\r\n        \r\n    })\r\n    .catch((error) => {\r\n        console.log(\"error: \",error);\r\n    });\r\n}","import ProductItem from '../../share/ProductItem';\r\nimport './style.scss'\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport product_list_ex from '../../../assets/json/list-product-hot.json';\r\n\r\nexport default function ProductItemsHorizontal({isLoading, productList = [...product_list_ex]}){\r\n    const [productListRender, setProductListRender] = useState(productList);\r\n    const [isLoadingRender, setIsLoadingRender] =useState (isLoading)   \r\n    // useEffect(()=>{\r\n    //     setProductListRender(productList)\r\n    // },[productList])\r\n\r\n    useEffect(()=>{\r\n        setIsLoadingRender(isLoading)\r\n    },[isLoading])\r\n\r\n    \r\n    return(\r\n        <div className=\"product-items-horizontal\">\r\n              {\r\n                    isLoadingRender ? <div>Loading...</div> :\r\n                    (\r\n                        productListRender && productListRender.length > 0 ? (\r\n                             \r\n                            productListRender.map((item, index) => \r\n                                <div key={item.id} className=\"pi-container\">\r\n                                    <ProductItem\r\n                                        //image={process.env.REACT_APP_API_IMG + item.images[0].path}\r\n                                        image={item.image}\r\n                                        isHorizontal = {true}\r\n                                        name = {item.name}\r\n                                        rated= {item.rated}\r\n                                        price = {item.price}\r\n                                        id = {item.id}\r\n                                    />\r\n                                </div> \r\n                            )\r\n                            \r\n                        ) : <div>Not Have Product</div>\r\n                    )                           \r\n                }\r\n        </div>\r\n    )\r\n}","import { getListProductsAsync } from '../../../redux/actions/productAction';\r\nimport ProductItemsHorizontal from '../ProductItemsHorizontal'\r\nimport './style.scss'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport listProductEx from '../../../assets/json/list-product-hot.json'\r\nimport { returnUrl } from '../../../helpers';\r\n\r\nexport default function ProductNewList(){\r\n    let dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getListProductsAsync());\r\n        //dispatch(getListCategoriesAsync())\r\n    },[]);\r\n    const productList = useSelector((state) => state.products.productList);\r\n    const isLoading = useSelector((state) => state.products.isLoading);\r\n\r\n    const [productListRender, setProductListRender] = useState(productList);\r\n    // useEffect(() => {\r\n    //     setProductListRender(productList.map({function(item,index){\r\n    //         if(item.number > 0)  return item \r\n    //         return null\r\n    //     })\r\n    // },[productList]);\r\n\r\n    return(\r\n        <div className=\"product-new-list-container\">\r\n            \r\n            <div className=\"container plc-content\">\r\n                <div className=\"row-hh\">\r\n                    <div className=\"pnl-product col-8\">\r\n                        {\r\n                            listProductEx &&\r\n                            <ProductItemsHorizontal listProductEx={listProductEx.filter((item)=>{return item.number > 0}).splice(0,6)} isLoading={false}/>\r\n                        }\r\n                        \r\n                    </div>\r\n                    <div className=\"pnl-deco col-4\">\r\n                        <div className=\"pnl-deco-img\">\r\n                            <img src={returnUrl(\"/assets/images/decoPN.jpg\")} alt=\"\"></img>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"plc-deco\">\r\n                <div className=\"plc-deco-left\">\r\n                    <img src=\"/assets/images/decoEdge01.png\" alt=\"\"></img>\r\n                    {/* <img src=\"/assets/images/testPaint.png\" alt=\"\"></img> */}\r\n                </div>\r\n                <div className=\"plc-deco-right\">\r\n                    <img src=\"/assets/images/decoEdge02.png\" alt=\"\"></img>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import './style.scss';\r\nimport BreakSpace from '../BreakSpace';\r\nexport default function TitleSection({title}){\r\n\r\n    return(\r\n        <div className=\"title-section-container\">\r\n            <BreakSpace h=\"40px\"/>\r\n            <div className=\"ts-title\">{title}</div>\r\n            <BreakSpace h=\"30px\"/>\r\n        </div>\r\n    )\r\n}","import { returnUrl } from '../../../helpers';\r\nimport './style.scss';\r\n\r\nexport default function HomeBanner(){\r\n    const style = {\r\n        backgroundImage: `url(${returnUrl('/assets/images/HomeBanner01.jpg')})`\r\n    }\r\n\r\n    return(\r\n        <div className=\"home-banner-container\" >\r\n            <div className=\"bg\" style={style}>\r\n                <div className=\"hbc-container\">\r\n                    <div className=\"name-shop\">with <span className=\"name\">COSMOS</span></div>\r\n                    <div className=\"isay\"> beautiful like a flower and mystery like Universe</div>\r\n                   \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import { returnUrl } from '../../../helpers';\r\nimport './style.scss';\r\n\r\nexport default function PragranceTypeItem({\r\n    name = \"Citrus\",\r\n    img = \"/\",\r\n    desc = \"Nhóm hương cam chanh đã xuất hiện từ rất lâu và có mặt trong rất nhiều chai nước hoa. Ngoài cam, chanh là mùi hương chính của nhóm mùi này, những hương khác như cam bergamot, bưởi, quýt cũng thường được sử dụng mang đến sự tươi mới, sảng khoái cho dòng mùi này. Đối với nhóm mùi này, dùng vào mùa hè sẽ tuyệt vời nhất, mang đến cảm giác mát mẻ, dễ chịu.\"\r\n}){\r\n    return(\r\n        <div className=\"pragrance-type-item-container\">\r\n            <div className=\"pti-title-first\">\r\n                <div className=\"pti-background\">\r\n                    <img src={returnUrl(img)} alt=\"\"></img>\r\n                </div>\r\n                <div className=\"pti-title\">{name}</div>\r\n            </div>\r\n            <div className=\"pti-content-on-hover\">\r\n                <div className=\"pti-c-title\">{name}</div>\r\n                <p className=\"pti-desc\">\"{desc}\"</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './style.scss';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport PragranceTypeItem from '../PragranceTypeItem';\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport pragrance_list_ex from '../../../assets/json/list-pragrance.json';\r\n\r\nconst settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: false,\r\n    speed: 1000,\r\n    autoplaySpeed: 3000,\r\n    fade: true,\r\n    // cssEase: \"linear\",\r\n    // nextArrow: <ArrowNext />,\r\n    // prevArrow: <ArrowPrev />\r\n    \r\n}\r\n\r\nexport default function PragranceTypeSlider({isLoading, listP = [...pragrance_list_ex]}){\r\n    const [pragranceListRender, setPragranceListRender] = useState(listP);\r\n    const [isLoadingRender, setIsLoadingRender] =useState(isLoading)   \r\n    useEffect(()=>{\r\n        setPragranceListRender(listP)\r\n    },[listP])\r\n\r\n    useEffect(()=>{\r\n        setIsLoadingRender(isLoading)\r\n    },[isLoading])\r\n\r\n    return(\r\n        <div className=\"pragrance-type-slider-container\">\r\n             <Slider {...settings}  \r\n                customPaging={(i) => {\r\n                        return <div>{pragranceListRender[i].name}</div>;\r\n                }}\r\n                dotsClass=\"slick-dots custom-indicator\">\r\n             {\r\n                    isLoadingRender ? <div>Loading...</div> :\r\n                    (\r\n                        pragranceListRender && pragranceListRender.length > 0 ? (\r\n                             \r\n                            pragranceListRender.map((item, index) => \r\n                                <div key={index} className=\"slide-item\">\r\n                                    <PragranceTypeItem\r\n                                        //image={process.env.REACT_APP_API_IMG + item.images[0]}\r\n                                        img = {item.img}\r\n                                        name = {item.name}\r\n                                        desc = {item.desc}\r\n                                        id = {item.id}\r\n                                    />\r\n                                </div> \r\n                            )\r\n                            \r\n                        ) : <div>Not Have Pragrance</div>\r\n                    )                           \r\n                }\r\n\r\n                {/* <div><PragranceTypeItem/></div>\r\n                <div><PragranceTypeItem/></div>\r\n                <div><PragranceTypeItem/></div>\r\n                <div><PragranceTypeItem/></div>\r\n                <div><PragranceTypeItem/></div> */}\r\n             </Slider>\r\n        </div>\r\n    )\r\n}","export const FRAGRANCE_GET_LIST = \"FRAGRANCE_GET_LIST\"\r\nexport const FRAGRANCE_GET_LIST_NAME = \"FRAGRANCE_GET_LIST_NAME\"\r\nexport const FRAGRANCE_CREATE_NEW = \"FRAGRANCE_CREATE_NEW\"\r\nexport const FRAGRANCE_DELETE_BY_ID = \"FRAGRANCE_DELETE_BY_ID\"\r\nexport const FRAGRANCE_GET_SINGLE = \"FRAGRANCE_GET_SINGLE\"\r\nexport const FRAGRANCE_EDIT_BY_ID = \"FRAGRANCE_EDIT_BY_ID\"","import apiClient from \"../api/apiClient\";\r\n\r\nexport const FragranceService = {\r\n    getAllFragrances: () => apiClient().get(\"fragrance/\"),\r\n    createFragrance: ({ name, description }) => apiClient().post(\"fragrance/\", { name, description }),\r\n    deleteFragrance: (fragranceId) => apiClient().delete(`/fragrance/${fragranceId}`),\r\n    getSingleFragrance: (fragranceId) => apiClient().get(`/fragrance/${fragranceId}`),\r\n    editFragrance: ({id, name, description }) => apiClient().put(`/fragrance/${id}`, {id, name, description }),\r\n}","import * as actionStypes from '../constants/fragranceConstant';\r\nimport { FragranceService } from '../services/fragranceService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst getListFragrances = (fragrancesList) => ({\r\n    type: actionStypes.FRAGRANCE_GET_LIST,\r\n    payload: fragrancesList,\r\n\r\n})\r\n\r\nexport const getListFragrancesAsync = () => (dispatch) => {\r\n        FragranceService.getAllFragrances()\r\n        .then(response => {\r\n\r\n            dispatch(getListFragrances(response.data.reverse()));\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\n//create \r\nconst createFragrance = () => ({\r\n    type: actionStypes.FRAGRANCE_CREATE_NEW,\r\n})\r\n\r\nexport const createFragranceAsync = ({ name, description }) => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await FragranceService.createFragrance({ name, description }) );\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(createFragrance());\r\n                dispatch(getListFragrancesAsync());\r\n                toast.success(\"CREATE SUCCESS\");\r\n                return {\r\n                    ok: true\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n                console.log(\"response.eror: \", response.error);\r\n                \r\n            } \r\n        }catch(error){\r\n\r\n            toast.error(error.response.data)\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//get single \r\nconst getSingleFragrance = (fragranceSingle) => ({\r\n    type: actionStypes.FRAGRANCE_GET_SINGLE,\r\n    payload: fragranceSingle,\r\n\r\n})\r\n\r\nexport const getSingleFragranceAsync = (id) => (dispatch) => {\r\n        FragranceService.getSingleFragrance(id)\r\n        .then(response => {\r\n            //console.log(\"response: \", response);\r\n            //console.log(\"response dt: \", response.data);\r\n            dispatch(getSingleFragrance(response.data));\r\n            \r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\n\r\n\r\n//delete \r\nconst deleteFragrance = () => ({\r\n    type: actionStypes.FRAGRANCE_DELETE_BY_ID,\r\n})\r\n\r\nexport const deleteFragranceAsync = (fragranceId) => (dispatch) => {\r\n        FragranceService.deleteFragrance(fragranceId)\r\n        .then(response => {\r\n\r\n            dispatch(deleteFragrance());\r\n            dispatch(getListFragrancesAsync());\r\n            toast.success(\"DELETE SUCCESS\");\r\n        })\r\n        .catch((error) => {\r\n\r\n            // const errorList = Object.values(error.response.data.message);\r\n            // errorList.map((item) => {\r\n            //     toast.error(item);\r\n            // })\r\n            toast.error(error.response.data)\r\n        });\r\n}\r\n\r\n\r\n//edit \r\nconst editFragrance = () => ({\r\n    type: actionStypes.FRAGRANCE_EDIT_BY_ID,\r\n})\r\n\r\nexport const editFragranceAsync = ({id, name, description })  => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await FragranceService.editFragrance({ id, name, description }) );\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(editFragrance());\r\n                dispatch(getListFragrancesAsync());\r\n                toast.success(\"EDIT SUCCESS\");\r\n                return {\r\n                    ok: true\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n                console.log(\"response.eror: \", response.error);\r\n                \r\n            } \r\n        }catch(error){\r\n\r\n            toast.error(error.response.data)\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n      \r\n\r\n}","import PragranceTypeSlider from '../../share/PragranceTypeSlider';\r\nimport './style.scss';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { getListFragrancesAsync } from '../../../redux/actions/fragranceAction';\r\nimport listFragrance from '../../../assets/json/list-pragrance.json'\r\nimport { returnUrl } from '../../../helpers';\r\n\r\nexport default function HomePragrances(){\r\n    let dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getListFragrancesAsync());\r\n        //dispatch(getListCategoriesAsync())\r\n    },[]);\r\n    const fragranceList = useSelector((state) => state.fragrances.fragranceList);\r\n    const isLoading = useSelector(state => state.fragrances.isLoading)\r\n    const style = {\r\n        backgroundImage: `url(${returnUrl('/assets/images/hp06.jpg')})`\r\n    }\r\n    return(\r\n        <div className=\"home-pragrances-container\">\r\n            <div className=\"hp-bg\" style={style}>\r\n                <div className=\"hp-outsite-slider\">\r\n                    <div className=\"hp-slider\">\r\n                        <PragranceTypeSlider isLoading={false} listP={listFragrance}/>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import HeaderSlider from \"../../../components/Guest/HeaderSlider\";\r\nimport HomeCategory from \"../../../components/Guest/HomeCategory\";\r\nimport BreakSpace from \"../../../components/share/BreakSpace\";\r\nimport ProductItemsSlider from \"../../../components/Guest/ProductItemsSlider\";\r\nimport ProductNewList from \"../../../components/Guest/ProductNewList\";\r\nimport TitleSection from \"../../../components/share/TitleSection\";\r\nimport HomeBanner from \"../../../components/Guest/HomeBanner\";\r\nimport HomePragrances from \"../../../components/Guest/HomePragrances\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { getListProductsBAsync } from \"../../../redux/actions/productAction\";\r\n\r\nimport listProductEx from '../../../assets/json/list-product-hot.json'\r\n\r\nexport default function Home(){\r\n    let dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getListProductsBAsync());\r\n        //dispatch(getListCategoriesAsync())\r\n    },[]);\r\n    const productListB = useSelector((state) => state.products.productListB);\r\n    const isLoading = useSelector((state) => state.products.isLoading);\r\n\r\n    return(\r\n        <div className=\"home-page-container\">\r\n            <HeaderSlider/>\r\n\r\n            <BreakSpace h=\"40px\" />\r\n            <HomeCategory/>\r\n\r\n            <BreakSpace h=\"40px\" />            \r\n            <TitleSection title=\"sản phẩm nổi bật\"/>\r\n            {\r\n                listProductEx &&\r\n                <ProductItemsSlider isLoading={false} productList={listProductEx.filter((item)=>{return item.number > 0}).splice(0,6)}/>\r\n            }\r\n           \r\n\r\n            <BreakSpace h=\"40px\" />   \r\n            <HomeBanner/>\r\n\r\n            <BreakSpace h=\"30px\" />   \r\n            <TitleSection title=\"Ưu đãi hôm nay\"/>\r\n            <ProductItemsSlider isLoading={false} productList={listProductEx.filter((item)=>{return item.number > 0}).splice(0,6)}/>\r\n          \r\n            {/* <BreakSpace h=\"60px\" />  */}\r\n            <HomePragrances/>\r\n\r\n            <BreakSpace h=\"30px\" />\r\n            <TitleSection title=\"Sản phẩm mới\"/>\r\n            <ProductNewList/>\r\n            <BreakSpace h=\"30px\" />\r\n\r\n        </div>\r\n    )\r\n}","import { returnUrl } from '../../../helpers';\r\nimport './style.scss';\r\n\r\nexport default function LogResBgPage({children}){\r\n    const style = {\r\n        backgroundImage: `url(${returnUrl('/assets/images/hp06.jpg')})`\r\n    }\r\n    return(\r\n        <div className=\"log-res-bg-page-container\">\r\n            <div className=\"lrbp-bg\" style={style}>\r\n                <div className=\"lrbp-content\">\r\n                    <div className=\"row-hh lrbp-content-row\">\r\n                        <div className=\"col-6 col-deco\">\r\n                            <img src={returnUrl(\"/assets/images/log03.jpg\")} alt=\"\"></img>\r\n                        </div>\r\n                        <div className=\"col-6 col-form\">\r\n                            {children}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './style.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport LogResBgPage from '../../../components/share/LogResBgPage';\r\n\r\nimport { useState } from 'react';\r\n// import { useDispatch } from 'react-redux';\r\n// import { useHistory } from 'react-router-dom';\r\n// import { loginAsync } from '../../../redux/actions/authAction';\r\n// import { useCookies } from 'react-cookie';\r\n//import jwt_decode from \"jwt-decode\";\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function Login(){\r\n\r\n    // const [ClientId,    setClientId]    = useCookies(['Client']);\r\n    // const [AccessToken, setAccessToken] = useCookies(['X-Auth-Token']);\r\n    // const [UserId,      setUserId]      = useCookies(['UserId']);\r\n\r\n    // const history = useHistory();\r\n    //const userCurrent = useSelector((state) => state.auth.userCurrent);\r\n    //const dispatch = useDispatch();\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    function handleChange(key){\r\n        return(evt) => {\r\n            \r\n            setFormData({\r\n                ...formData,\r\n                [key]: evt.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleSubmit(evt){\r\n        evt.preventDefault();\r\n        if(!formData.email || !formData.password){\r\n            return\r\n        }\r\n        toast.error(\"Sorry can't connect to database!\")\r\n        // dispatch(loginAsync(formData))\r\n        // .then(res => {\r\n        //     //console.log(\"ok: \",res.ok )\r\n        //     if (res.ok) {\r\n        //       // Thành công\r\n        //         setFormData({\r\n        //             email: '',\r\n        //             password: ''\r\n        //         })\r\n        //         console.log(\"res.currentUser.roles: \", res)\r\n        //         // localStorage.setItem(\"userCurrent\", JSON.stringify(res.userCurrent));\r\n        //         // localStorage.setItem(\"isLogin\", true);\r\n        //         setAccessToken(\"X-Auth-Token\", res.currentUser.token)\r\n        //         var decoded = jwt_decode(res.currentUser.token);\r\n        //         console.log(decoded);\r\n        //         if(res.currentUser.roles[0] === \"Admin\" || res.currentUser.roles[0] === \"Saler\"){\r\n        //             history.push('/admin');\r\n        //         }else if(res.currentUser.roles[0] === \"Customer\"){\r\n        //             history.push('/');\r\n        //         }\r\n                \r\n                \r\n        //     } else {\r\n        //       // Thất bại\r\n        //       //console.log(\"status\",status)\r\n        //     }\r\n        // });\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"login-container\">\r\n            <LogResBgPage>\r\n               <div className=\"child\">\r\n                    <div className=\"login-title\">Đăng nhập</div>\r\n\r\n                    <div className=\"login-content\">\r\n                        <form  className=\"login-form\" onSubmit={handleSubmit}>\r\n                            <label>Email</label>\r\n                            <div className=\"form-group\">\r\n                                <input id=\"email-field\" type=\"email\" className=\"form-control\" placeholder=\"exam@gmail.com\" required\r\n                                    value={formData.email} \r\n                                    onChange={handleChange('email')} \r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Mật khẩu</label>\r\n                                <input id=\"password-field\" type=\"password\" className=\"form-control\" placeholder=\"your password\" required\r\n                                    value={formData.password} \r\n                                    onChange={handleChange('password')}  \r\n                                />\r\n                                {/* <span toggle=\"#password-field\" className=\"fa fa-fw fa-eye field-icon toggle-password\" /> */}\r\n                            </div>\r\n\r\n                            <div className=\"form-group last\">\r\n                                <span className=\"btn-left\"><Link to=\"/register\">ĐĂNG KÝ</Link></span>\r\n                                <span className=\"btn-right\"><button type=\"submit\" className=\"form-control btn\">Đăng nhập</button></span>\r\n                               \r\n                            </div>\r\n\r\n                            {/* <div className=\"form-group\">\r\n                                 <label className=\"checkbox-wrap\">\r\n                                    <span className=\"custom-checkmark\">\r\n                                        <CheckboxOutline\r\n                                            color={'#00000'} \r\n                                            title={\"c\"}\r\n                                            height=\"10px\"\r\n                                            width=\"10px\"\r\n                                        />\r\n                                    </span>\r\n                                    Remember Me\r\n                                    <input type=\"checkbox\" className=\"default-checkmark\" defaultChecked />\r\n                                    \r\n                                </label> \r\n\r\n                                <div className=\"forgot-password\">\r\n                                    <a >Forgot Password</a>\r\n                                </div> \r\n\r\n                                <label className=\"link-sign-in\">Bạn chưa có tài khoản?  <Link to=\"/register\">ĐĂNG KÝ</Link> tại đây!</label>\r\n                            </div> */}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </LogResBgPage>\r\n        </div>\r\n    )\r\n}","import './style.scss'\r\nexport default function HeaderImage({\r\n    img, \r\n    title\r\n}){\r\n    return(\r\n        <div className=\"header-image-container\">\r\n            <div className=\"image\">\r\n                <img src={img} alt=\"\"></img>\r\n            </div>\r\n            <h2 className=\"title\">{title}</h2>\r\n        </div>\r\n    )\r\n}","import BreakSpace from \"../../../components/share/BreakSpace\";\r\nimport HeaderImage from \"../../../components/share/HeaderImage\";\r\nimport { returnUrl } from \"../../../helpers\";\r\n\r\nimport \"./style.scss\";\r\n\r\nexport  default function About(){\r\n    return(\r\n        <div className=\"about-page-container\">\r\n            <HeaderImage img={returnUrl(\"/assets/images/HeaderImage.jpg\")} title=\"About\"/>\r\n            <BreakSpace h= \"30px\"/>\r\n            <div className=\"container\">\r\n                <div className=\"row-hh\">\r\n                    <div className=\"col-3 image\">\r\n                        <img src={returnUrl(\"/assets/images/decoPN03.png\")} alt=\"\"></img>\r\n                    </div>\r\n                    <div className=\"col-9 content\">\r\n                        <h3 className=\"title\">Our Story</h3>\r\n                        <p className=\"story\">Perfume is a fragrance that is sprayed or rubbed on the body of a person. The purpose of perfume is to make people smell better and to make them more attractive. Perfume was the first luxury product in the world with an established market for consumers.</p>\r\n                        <p className=\"story\">The term \"perfume\" derives from Arabic \"فروم\", meaning something such as \"poured forth\". Perfumery, as the art of making fragrant perfumes, began in ancient.</p>    \r\n                        <p className=\"story\">Welcome to Cosmos, the #1 perfume shop for all your scenting needs. We have a wide range of perfumes for you to choose from and we can help you find the one that suits you best.To find the perfume to suit your personality, we offer personalized consultations. Our range includes perfumes from some of the world’s best perfume brands like Chanel and Hermes.</p>\r\n                        <p className=\"story\">We only use the finest ingredients including oils, which come from natural sources like flowers and plants.</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <BreakSpace h= \"30px\"/>\r\n        </div>\r\n    );\r\n}","import { returnUrl } from '../../../helpers'\r\nimport './style.scss'\r\n\r\nexport default function BlogBox(){\r\n    return(\r\n        <div className=\"blog-box\">\r\n            <div className=\"bb-image\">\r\n                <img src={returnUrl(\"/assets/images/decoPN03.png\")} alt=\"\"></img>  \r\n            </div>\r\n            <div className=\"bb-info\">\r\n                <a className=\"bb-title\" href=\"/\">Basic Elements of Bottle Design</a>\r\n                <div className=\"bb-author-date\">By <span className=\"bb-author\">Sherry</span> on <span className=\"bb-date\">May 26, 2021</span></div>\r\n                <p className=\"bb-des\">If you’ve always wanted to dabble in Bottle design but thought you didn’t have the skill or the talent, I’m here to tell you</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import BreakSpace from \"../../../components/share/BreakSpace\";\r\nimport BlogBox from \"../../../components/share/BlogBox\";\r\nimport HeaderBar from \"../../../components/Guest/HeaderBar\";\r\nimport HeaderImage from \"../../../components/share/HeaderImage\";\r\nimport { returnUrl } from \"../../../helpers\";\r\n\r\n\r\nexport default function Blog(){\r\n    return(\r\n        <div className=\"blog-page-container\">\r\n            <HeaderBar/>\r\n            <HeaderImage img={returnUrl(\"/assets/images/HeaderImage.jpg\")} title=\"Blog\"/>\r\n            <BreakSpace h=\"30px\"/>\r\n            <div className=\"container\">\r\n                <div className=\"row-hh\">\r\n                    <div className=\"col-8 list-blog\">\r\n                        <BlogBox/>\r\n                        <BlogBox/>\r\n                        <BlogBox/>\r\n                    </div>\r\n\r\n                    <div className=\"col-4 right-bar\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <BreakSpace h=\"30px\"/>\r\n        </div>\r\n    );\r\n}","import \"./style.scss\";\r\nimport BreakSpace from \"../../../components/share/BreakSpace\";\r\nimport HeaderBar from \"../../../components/Guest/HeaderBar\";\r\nimport HeaderImage from \"../../../components/share/HeaderImage\";\r\nimport Button01 from \"../../../components/share/Button01\";\r\nimport { returnUrl } from \"../../../helpers\";\r\n\r\nexport  default function Contact(){\r\n    return(\r\n        <div className=\"contact-page-container\">\r\n            <HeaderBar/>\r\n            <HeaderImage img={returnUrl(\"/assets/images/HeaderImage.jpg\")} title=\"Contact\"/>\r\n            <BreakSpace h=\"30px\"/>\r\n            <div className=\"container\">\r\n                <div className=\"row-hh\">\r\n                    <div className=\"col-5 map\">\r\n                        <iframe title=\"map\" src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1959.2612259929483!2d106.78490560804842!3d10.847810698068317!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x317527131ae8b249%3A0x4d2d3c8fab7d3c2e!2zOTcgxJDGsOG7nW5nIE1hbiBUaGnhu4duLCBIaeG7h3AgUGjDuiwgUXXhuq1uIDksIFRow6BuaCBwaOG7kSBI4buTIENow60gTWluaCwgVmnhu4d0IE5hbQ!5e0!3m2!1svi!2s!4v1624097824204!5m2!1svi!2s\" width=\"520\" height=\"510\" style={{border:0}} allowfullscreen=\"\" loading=\"lazy\"></iframe>\r\n                    </div>\r\n                    <div className=\"col-7 send-message\">\r\n                        <h3 className=\"title\">Send us your message</h3>\r\n                        <div className=\"input\">\r\n                            <input type=\"text\" placeholder=\"Full Name\"></input>\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <input type=\"text\" placeholder=\"Phone Number\"></input>\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <input type=\"text\" placeholder=\"Email Address\"></input>\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <textarea placeholder=\"Message\"></textarea>\r\n                        </div>\r\n                        <div>\r\n                            <Button01 isRadios={true}>Send</Button01>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <BreakSpace h=\"30px\"/>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport './style.scss'\r\nimport vari from '../../../assets/scss/vari.module.scss';\r\nimport Select from 'react-select'\r\nimport { returnUrl } from '../../../helpers';\r\n\r\nconst customStylesSelect = {\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    //borderBottom: '1px dotted pink',\r\n    //color: state.isSelected ? 'red' : 'blue',\r\n    //backgroundColor: state.isSelected ? 'red' : 'white',\r\n\r\n    backgroundColor: state.isDisabled\r\n      ? undefined\r\n      : state.isSelected\r\n        ? vari.selectItemChoosed\r\n        : state.isFocused\r\n          ? vari.selectItemHover\r\n          : undefined,\r\n  }),\r\n\r\n  singleValue: (provided, state) => {\r\n    const opacity = state.isDisabled ? 0.5 : 1;\r\n    const transition = 'opacity 300ms';\r\n\r\n    return { ...provided, opacity, transition, fontSize: \"20px\" };\r\n  }\r\n}\r\n\r\n\r\nexport default function SelectAddress({\r\n  getAddressChoose,\r\n  eng = false\r\n}) {\r\n  const [cityList, setCityList] = useState([]);\r\n  const [districtList, setDistrictList] = useState([]);\r\n  const [wardList, setWardList] = useState([]);\r\n\r\n  const [cityChoose, setCityChoose] = useState(null);\r\n  const [districtChoose, setDistrictChoose] = useState(null);\r\n  const [wardChoose, setWardChoose] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(returnUrl('/assets/json/locations/cities.json'), {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(cities => {\r\n        setCityList(cities.map(({ id, name }) => ({ value: id, label: name })))\r\n\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!cityChoose) return;\r\n    fetch(returnUrl(`/assets/json/locations/districts/${cityChoose.value}.json`), {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(districts => {\r\n        setDistrictList(districts.data.map(({ id, name }) => ({ value: id, label: name })))\r\n\r\n      })\r\n  }, [cityChoose]);\r\n\r\n  useEffect(() => {\r\n    if (!districtChoose) return;\r\n    fetch(returnUrl(`/assets/json/locations/wards/${districtChoose.value}.json`), {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(wards => {\r\n        setWardList(wards.data.map(({ id, name }) => ({ value: id, label: name })))\r\n      })\r\n  }, [districtChoose]);\r\n\r\n  useEffect(() => {\r\n    // addressChoose = {\r\n    //   \"city\": cityChoose,\r\n    //   \"district\": districtChoose,\r\n    //   \"ward\": wardChoose,\r\n    // }\r\n    if(cityChoose && districtChoose && wardChoose){\r\n      getAddressChoose({\r\n        city: cityChoose.label,\r\n        district: districtChoose.label,\r\n        ward: wardChoose.label\r\n      })\r\n    }\r\n    \r\n    \r\n  }, [wardChoose]);\r\n\r\n  const handleChangeCity = (option) => {\r\n    setCityChoose(option);\r\n    setDistrictList([]);\r\n    setDistrictChoose(null);\r\n    setWardList([]);\r\n    setWardChoose(null);\r\n  }\r\n\r\n  const handleChangeDistrict = (option) => {\r\n    setDistrictChoose(option);\r\n    setWardList([]);\r\n    setWardChoose(null);\r\n\r\n  }\r\n\r\n  const handleChangeWard = (option) => {\r\n    setWardChoose(option);\r\n  }\r\n\r\n  return (\r\n    <div className=\"select-address-container\">\r\n      <div className=\"row-hh\">\r\n        <div className=\"col-4\">\r\n          <div className=\"form-group\">\r\n            {\r\n              eng ? <label className=\"label\">Province/city</label> : <label className=\"label\">Tỉnh/TP</label> \r\n            }\r\n            <Select options={cityList}\r\n              className=\"select-hh\"\r\n              key={`cityId_${cityChoose?.value}`}\r\n              defaultValue={cityChoose}\r\n              placeholder=\"T/TP\"\r\n              menuColor=\"red\"\r\n              styles={customStylesSelect}\r\n              // value={formData.gender} \r\n              onChange={(option) => handleChangeCity(option)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-4\">\r\n          <div className=\"form-group\">\r\n            {\r\n              eng ? <label className=\"label\">District</label> : <label className=\"label\">Quận/Huyện</label> \r\n            }\r\n            <Select options={districtList}\r\n              isDisabled={districtList.length === 0}\r\n              key={`districtId_${districtChoose?.value}`}\r\n              className=\"select-hh\"\r\n              defaultValue={districtChoose}\r\n              placeholder=\"Q/H\"\r\n              menuColor=\"red\"\r\n              styles={customStylesSelect}\r\n              // value={formData.gender} \r\n              onChange={(option) => handleChangeDistrict(option)}\r\n            />\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"col-4\">\r\n          <div className=\"form-group\">\r\n           {\r\n              eng ? <label className=\"label\">Ward/Commune</label> : <label className=\"label\">Phường/Xã</label> \r\n            }\r\n            <Select options={wardList}\r\n              isDisabled={wardList.length === 0}\r\n              key={`wardId_${wardChoose?.value}`}\r\n              className=\"select-hh\"\r\n              defaultValue={wardChoose}\r\n              placeholder=\"P/X\"\r\n              menuColor=\"red\"\r\n              styles={customStylesSelect}\r\n              // value={formData.gender} \r\n              onChange={(option) => handleChangeWard(option)}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport './style.scss'\r\nimport vari from '../../../assets/scss/vari.module.scss';\r\nimport Select from 'react-select'\r\n//import Lightbox from 'react-image-lightbox';\r\n//import 'react-image-lightbox/style.css';\r\n\r\nimport gender_items from '../../../assets/json/gender.json';\r\n\r\nimport LogResBgPage from '../../../components/share/LogResBgPage';\r\nimport SelectAddress from '../../../components/share/SelectAddress';\r\nimport { registerAsync } from '../../../redux/actions/authAction';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesSelect = {\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      //borderBottom: '1px dotted pink',\r\n      //color: state.isSelected ? 'red' : 'blue',\r\n      //backgroundColor: state.isSelected ? 'red' : 'white',\r\n      \r\n      backgroundColor: state.isDisabled\r\n        ? undefined\r\n        : state.isSelected\r\n        ? vari.selectItemChoosed\r\n        : state.isFocused\r\n        ? vari.selectItemHover\r\n        : undefined,\r\n    }),\r\n    \r\n    singleValue: (provided, state) => {\r\n      const opacity = state.isDisabled ? 0.5 : 1;\r\n      const transition = 'opacity 300ms';\r\n  \r\n      return { ...provided, opacity, transition, fontSize:\"20px\" };\r\n    }\r\n  }\r\n\r\nexport default function Register(){\r\n    const genderOptions = gender_items.map(({ id, name }) => ({ value: id, label: name }));\r\n      \r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        //gender: gender_items && gender_items.length > 0 ? gender_items[0].name : '',\r\n        phone: '',\r\n        password: '',\r\n        email: '',\r\n        //role: 1,\r\n        gender: null,\r\n        addressNo: '',\r\n        cdw: '',\r\n        //image: ''\r\n    })\r\n    const [formValidError, setFomValidError] = useState({\r\n        name: '',\r\n        gender: '',\r\n        phone: '',\r\n        password: '',\r\n        email: '',\r\n        //role: '',\r\n        addressNo: '',\r\n        //image: ''\r\n    })\r\n    const [isValidForm, setIsValidForm] = useState(false);\r\n    //const [previewImgURL, setPreviewImgURL] = useState('');\r\n    \r\n    function handleChangeFormData(key){ \r\n        if (key === 'gender'){\r\n            return (value) =>{\r\n                setFormData({\r\n                    ...formData,\r\n                    [key]: value\r\n                })\r\n            }\r\n        }\r\n\r\n        return (evt) => {\r\n            setFormData({\r\n                ...formData,\r\n                [key]: evt.target.value\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setFomValidError(checkValidateInput(formData));\r\n    },[formData]);\r\n\r\n   \r\n    //img\r\n    // const handleOnChangeImage = (event) => {\r\n    //     let dataFile = event.target.files;\r\n    //     let file = dataFile[0];\r\n    //     if(file){\r\n    //         //let objectUrl = URL.createObjectURL(file);\r\n    //         let objectUrl = URL.createObjectURL(file)\r\n    //         setPreviewImgURL(objectUrl);\r\n    //     }\r\n    //     setFormData({\r\n    //         ...formData,\r\n    //         image: file\r\n    //     })\r\n        \r\n    // }\r\n    //end img\r\n\r\n    function checkValidateInput(formD){\r\n        let err = {}\r\n        if(!formD.name){\r\n            err.name= \"Tên là bắt buộc.\"\r\n        } else if(formD.name.length < 3){\r\n            err.name = \"Tên tối thiểu 3 ký tự!\"\r\n        }\r\n        if(!formD.phone){\r\n            err.phone = \"Số điện thoại là bắt buộc.\"\r\n        } else if(formD.phone.length < 10){\r\n            err.phone = \"Số điện thoại chưa hợp lệ.\"\r\n        }\r\n        if(!formD.password){\r\n            err.password = \"Mật khẩu là bắt buộc.\"\r\n        } else if(formD.password.length < 6){\r\n            err.password = \"Mật khẩu tối thiểu 6 ký tự!\"\r\n        }\r\n        if(!formD.email){\r\n            err.email = \"Email là bắt buộc.\"\r\n        } else if(!/\\S+@\\S+\\.\\S+/.test(formD.email)){\r\n            err.email = \"Email chưa hợp lệ.\"\r\n        }\r\n        if (!formD.gender) {\r\n            err.gender = \"Mời chọn giới tính!\"\r\n        } \r\n        if (!formD.addressNo) {\r\n            err.addressNo = \"Số nhà/thôn/xóm là bắt buộc.\"\r\n        }\r\n\r\n\r\n         if(err.name || err.phone || err.password || err.email || err.gender || err.addressNo) {\r\n            setIsValidForm(false)\r\n            //err.isValidForm = false;\r\n\r\n        }else{\r\n            setIsValidForm(true)\r\n            //err.isValidForm = true;\r\n\r\n        }\r\n      \r\n        return err;\r\n\r\n    }\r\n\r\n    let dispatch = useDispatch();\r\n    // const errResponse = useSelector((state) => state.users.errResponse);\r\n    // const status = useSelector((state) => state.users.status);\r\n   \r\n    function handleSaveUser(evt){\r\n        evt.preventDefault();\r\n        if(!isValidForm) return;\r\n    \r\n        //dispatch(createUserAsync(formData));\r\n\r\n        // const data = new FormData();\r\n        // data.append(\"name\", formData.name);\r\n        // data.append(\"email\", formData.email);\r\n        // data.append(\"password\", formData.password);\r\n        // data.append(\"gender\", formData.gender);\r\n        // data.append(\"phone\", formData.phone);\r\n        // data.append(\"role\", formData.role);\r\n        // data.append(\"active\", formData.active);\r\n        // data.append(\"address\", formData.address);\r\n        // data.append(\"image\", formData.image);\r\n        //axios.post(\"https://httpbin.org/anything\", data).then(res => console.log(res)).catch(err => console.log(err));\r\n        \r\n        toast.error(\"Sorry can't connect to database!\")\r\n        // dispatch(registerAsync({...formData, gender: formData.gender.value, address: formData.addressNo + \", \"+ formData.cdw}))\r\n        // .then(res => {\r\n        //     console.log(\"ok: \",res.ok )\r\n        //     if (res.ok) {\r\n        //       // Thành công\r\n        //         //console.log(\"errResponse\",errResponse)\r\n        //         //console.log(\"status\",status)\r\n        //         setFormData({\r\n        //             name: '',\r\n        //                 gender: null,\r\n        //                 phone: '',\r\n        //                 password: '',\r\n        //                 email: '',          \r\n        //                 addressNo: '',\r\n        //                 image: ''\r\n        //         })\r\n        //         //setPreviewImgURL('');\r\n        //         history.push(\"/login\")\r\n        //     } else {\r\n        //       // Thất bại\r\n        //       //console.log(\"status\",status)\r\n        //     }\r\n        // });\r\n     }\r\n\r\n     let history = useHistory();\r\n     const handleCancel = () => {\r\n        // history.push(\"/admin/users\");\r\n        history.push(\"/\");\r\n     }\r\n\r\n     const setAddessChoose = (data)=>{\r\n\r\n        setFormData({\r\n            ...formData,\r\n            cdw:  data.ward + \", \" + data.district + \", \" + data.city\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"register-container\">\r\n            <LogResBgPage>\r\n               <div className=\"child\">\r\n                    <div className=\"register-title\">Đăng ký</div>\r\n\r\n                    <div className=\"register-content\">\r\n                        <form  className=\"register-form\" onSubmit={handleSaveUser}>\r\n                            <div className=\"row-hh\">\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"label\">Tên hiển thị</label>\r\n                                        <input id=\"name\" type=\"text\" className=\"form-control\" placeholder=\" \"  \r\n                                            value={formData.name} \r\n                                            onChange={handleChangeFormData('name')} \r\n                                        />\r\n                                    { formValidError.name &&  <label className=\"label-error\">{formValidError.name}</label> }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"label\">Giới tính</label>\r\n                                        <Select options={genderOptions}\r\n                                            className=\"select-hh\"\r\n                                            defaultValue={genderOptions[0]}\r\n                                            placeholder=\"Giới tính\"\r\n                                            menuColor = \"red\"\r\n                                            styles={customStylesSelect}\r\n                                            value={formData.gender} \r\n                                            onChange={handleChangeFormData('gender')} \r\n                                        />\r\n    \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row-hh\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"label\">Email</label>\r\n                                        <input id=\"email\" type=\"email\" className=\"form-control\" placeholder=\" \" \r\n                                            value={formData.email} \r\n                                            onChange={handleChangeFormData('email')} \r\n                                        />\r\n                                        { formValidError.email &&  <label className=\"label-error\">{formValidError.email}</label> }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        <div className=\"row-hh\">\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"label\">Số điện thoại</label>\r\n                                        <input id=\"phone\" type=\"text\" className=\"form-control\" placeholder=\" \" \r\n                                            value={formData.phone} \r\n                                            onChange={handleChangeFormData('phone')} \r\n                                        />\r\n                                        { formValidError.phone &&  <label className=\"label-error\">{formValidError.phone}</label> }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"label\">Mật khẩu</label>\r\n                                        <input id=\"password\" type=\"password\" className=\"form-control\" placeholder=\" \" \r\n                                            value={formData.password} \r\n                                            onChange={handleChangeFormData('password')} \r\n                                        />\r\n                                        { formValidError.password &&  <label className=\"label-error\">{formValidError.password}</label> }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"\">\r\n                                <SelectAddress\r\n                                    eng={true}\r\n                                    getAddressChoose={setAddessChoose}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"row-hh\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group \">\r\n                                        <label className=\"label\">Số nhà/ thôn</label>\r\n                                        <textarea type=\"text\" className=\"form-control addressNo-user\" placeholder=\" \"\r\n                                            value={formData.addressNo}\r\n                                            onChange={handleChangeFormData('addressNo')}\r\n                                        />\r\n                                        {formValidError.addressNo && <label className=\"label-error\">{formValidError.addressNo}</label>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-4\">\r\n                                    <div className=\"form-group avatar-input\">\r\n                                        <label className=\"label\" name=\"image\">Ảnh đại diện</label>\r\n                                        <div className=\"preview-img\"><img src={previewImgURL} alt=\"\"></img></div> \r\n                                        <input id=\"image\" type=\"file\" className=\"form-control \"  hidden onChange={ (event) => handleOnChangeImage(event)}/>\r\n                                        <label className=\"form-control choose-img\" htmlFor=\"image\"><i className='bx bx-image-add icon-choose-img'></i>Chọn ảnh</label>\r\n                                                                                                              \r\n                                    </div>\r\n                                </div>       */}\r\n                            </div>\r\n\r\n                            <div className=\"form-group last\">\r\n                                <div className=\"btn-left\"><span onClick={()=>handleCancel()}>Thoát</span></div>\r\n                                <span className=\"btn-right\"><button type=\"submit\" className=\"form-control btn\">Đăng ký</button></span>\r\n                               \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </LogResBgPage>\r\n        </div>\r\n    )\r\n}","export const CATEGORY_GET_LIST = \"CATEGORY_GET_LIST\"\r\nexport const CATEGORY_GET_LIST_NAME = \"CATEGORY_GET_LIST_NAME\"\r\nexport const CATEGORY_CREATE_NEW = \"CATEGORY_CREATE_NEW\"\r\nexport const CATEGORY_DELETE_BY_ID = \"CATEGORY_DELETE_BY_ID\"\r\nexport const CATEGORY_GET_SINGLE = \"CATEGORY_GET_SINGLE\"\r\nexport const CATEGORY_EDIT_BY_ID = \"CATEGORY_EDIT_BY_ID\"","import apiClient from \"../api/apiClient\";\r\n\r\nexport const CategoryService = {\r\n    getAllCategories: () => apiClient().get(\"category/\"),\r\n    createCategory: ({ name, description }) => apiClient().post(\"category/\", { name, description }),\r\n    deleteCategory: (categoryId) => apiClient().delete(`/category/${categoryId}`),\r\n    getSingleCategory: (categoryId) => apiClient().get(`/category/${categoryId}`),\r\n    editCategory: ({id, name, description }) => apiClient().put(`/category/${id}`, {id, name, description }),\r\n}","import * as actionStypes from '../constants/categoryConstant';\r\nimport { CategoryService } from '../services/categoryService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst getListCategories = (categoryList) => ({\r\n    type: actionStypes.CATEGORY_GET_LIST,\r\n    payload: categoryList,\r\n\r\n})\r\n\r\nexport const getListCategoriesAsync = () => (dispatch) => {\r\n        CategoryService.getAllCategories()\r\n        .then(response => {\r\n\r\n            dispatch(getListCategories(response.data.reverse()));\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\n//create category\r\nconst createCategory = () => ({\r\n    type: actionStypes.CATEGORY_CREATE_NEW,\r\n})\r\n\r\nexport const createCategoryAsync = ({ name, description }) => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await CategoryService.createCategory({ name, description }) );\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(createCategory());\r\n                dispatch(getListCategoriesAsync());\r\n                toast.success(\"CREATE SUCCESS\");\r\n                return {\r\n                    ok: true\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n                console.log(\"response.eror: \", response.error);\r\n                \r\n            } \r\n        }catch(error){\r\n\r\n            toast.error(error.response.data)\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//get single category\r\nconst getSingleCategory = (categorySingle) => ({\r\n    type: actionStypes.CATEGORY_GET_SINGLE,\r\n    payload: categorySingle,\r\n\r\n})\r\n\r\nexport const getSingleCategoryAsync = (id) => (dispatch) => {\r\n        CategoryService.getSingleCategory(id)\r\n        .then(response => {\r\n            //console.log(\"response: \", response);\r\n            //console.log(\"response dt: \", response.data);\r\n            dispatch(getSingleCategory(response.data));\r\n            \r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\n\r\n\r\n//delete category\r\nconst deleteCategory = () => ({\r\n    type: actionStypes.CATEGORY_DELETE_BY_ID,\r\n})\r\n\r\nexport const deleteCategoryAsync = (categoryId) => (dispatch) => {\r\n        CategoryService.deleteCategory(categoryId)\r\n        .then(response => {\r\n\r\n            dispatch(deleteCategory());\r\n            dispatch(getListCategoriesAsync());\r\n            toast.success(\"DELETE SUCCESS\");\r\n        })\r\n        .catch((error) => {\r\n\r\n            // const errorList = Object.values(error.response.data.message);\r\n            // errorList.map((item) => {\r\n            //     toast.error(item);\r\n            // })\r\n            toast.error(error.response.data)\r\n        });\r\n}\r\n\r\n\r\n//edit category\r\nconst editCategory = () => ({\r\n    type: actionStypes.CATEGORY_EDIT_BY_ID,\r\n})\r\n\r\nexport const editCategoryAsync = ({id, name, description })  => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await CategoryService.editCategory({ id, name, description }) );\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(editCategory());\r\n                dispatch(getListCategoriesAsync());\r\n                toast.success(\"EDIT SUCCESS\");\r\n                return {\r\n                    ok: true\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n                console.log(\"response.eror: \", response.error);\r\n                \r\n            } \r\n        }catch(error){\r\n\r\n            toast.error(error.response.data)\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n      \r\n\r\n}","import HeaderBar from \"../../../components/Guest/HeaderBar\";\r\nimport HeaderImage from \"../../../components/share/HeaderImage\";\r\nimport BreakSpace from \"../../../components/share/BreakSpace\";\r\nimport \"./style.scss\";\r\n//import { SearchOutline } from 'react-ionicons'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { useHistory } from \"react-router\";\r\n//import { getListCategoriesNameAsync } from \"../../redux/actions/categoryAction\";\r\nimport { getListProductsAsync, getProductByCategoryIdAsync } from \"../../../redux/actions/productAction\";\r\nimport { getListCategoriesAsync } from \"../../../redux/actions/categoryAction\";\r\nimport ProductItem from \"../../../components/share/ProductItem\";\r\n\r\nimport listProductEx from '../../../assets/json/list-product-hot.json';\r\nimport { returnUrl } from \"../../../helpers\";\r\nconst categoryListEx =[\"Body mist\", \"Oil mist\", \"Perfumes\", \"Perfume oil\", \"Aromatherapy\", \"Body spray\"]\r\n\r\nexport  default function Sale(){\r\n    //let history = useHistory();\r\n    let dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getListProductsAsync());\r\n        dispatch(getListCategoriesAsync())\r\n    },[]);\r\n   \r\n    const productList = useSelector((state) => state.products.productList);\r\n    //const isLoading = useSelector((state) => state.products.isLoading);\r\n    const isLoading = false;\r\n    const categoryList = useSelector((state) => state.categories.categoryList);\r\n    // const handleOpenDetailProduct = (idP) => {\r\n    //     console.log(\"mmmmmmmmmmmmmmmmmmmmmmmmmm\",idP)\r\n    //     history.push(`/detailsProduct/${idP}`)\r\n    // }\r\n    const [productListRender, setProductListRender] = useState(productList);\r\n    // useEffect(() => {\r\n    //     setProductListRender(productList)\r\n    // },[productList]);\r\n\r\n    const handleFilterProduct = (categoryId) =>{\r\n        dispatch(getProductByCategoryIdAsync(categoryId))\r\n        // .then(res => {\r\n        //     if (res.ok) {\r\n        //         // Thành công\r\n        //         setProductListRender(res.productFilterByCategory)   \r\n        //     } else {\r\n        //         // Thất bại\r\n        //         //console.log(\"status\",status)\r\n        //         setProductListRender([]) \r\n        //     }\r\n        // // });\r\n        \r\n    }\r\n\r\n    const handleGetAllProduct = () =>{\r\n        dispatch(getListProductsAsync())\r\n        //setProductListRender(productList)\r\n    }\r\n\r\n    return(\r\n        <div className=\"sale-page-container\">\r\n            <HeaderBar/>\r\n            <HeaderImage img={returnUrl(\"/assets/images/HeaderImage.jpg\")} title=\"Sale\"/>\r\n            <BreakSpace h=\"30px\"/>\r\n            <div className=\"container\">\r\n                <div className=\"row-hh\">\r\n                    <div className=\"col-3 left-bar\">\r\n                        <div className=\"categories\">\r\n                            <h3 className=\"title\">Danh mục</h3>\r\n                            <ul className=\"list-categories\">\r\n                                <li onClick={()=>handleGetAllProduct()}>Tất cả</li>\r\n                                {\r\n                                    categoryListEx && categoryListEx.length > 0 ? (\r\n                                        categoryListEx.map((item, index) => \r\n                                        //    <li key={index} onClick={()=>handleFilterProduct(item.id)}>{item.name}</li>\r\n                                        <li key={index}>{item}</li>\r\n                                        )\r\n                                   ) : ''  \r\n                                }\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"search-product\">\r\n                            <input type=\"text\" placeholder=\"Tên sản phẩm...\"></input>\r\n                            <button><i className='bx bx-search icon-search'></i></button>\r\n                        </div>  \r\n                    </div>\r\n                  \r\n                    <div className=\"col-9 list-product\">\r\n                        {\r\n                            isLoading ? <div>Loading...</div> :\r\n                            (\r\n                                listProductEx && listProductEx.length > 0 ? (\r\n                                       \r\n                                    listProductEx.map((item, index) => \r\n                                                                           \r\n                                        item.number == 0 ? '':\r\n                                        <div className=\"col-4\">\r\n                                            <ProductItem \r\n                                                //image = {process.env.REACT_APP_API_IMG + item.images[0].path}\r\n                                                image={item.image}\r\n                                                name = {item.name}\r\n                                                price = {item.price}\r\n                                                id = {item.id}\r\n                                                // handleOnclickProduct = {(idP) => handleOpenDetailProduct(idP)}\r\n                                                />\r\n                                        </div>                                        \r\n                                    )\r\n                                    \r\n                               ) : <div>Not Have Product</div>\r\n                            )                           \r\n                        }\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <BreakSpace h=\"30px\"/> \r\n        </div>\r\n    );\r\n}","export const MANUFACTURE_GET_LIST = \"MANUFACTURE_GET_LIST\"\r\nexport const MANUFACTURE_GET_LIST_NAME = \"MANUFACTURE_GET_LIST_NAME\"\r\nexport const MANUFACTURE_CREATE_NEW = \"MANUFACTURE_CREATE_NEW\"\r\nexport const MANUFACTURE_DELETE_BY_ID = \"MANUFACTURE_DELETE_BY_ID\"\r\nexport const MANUFACTURE_GET_SINGLE = \"MANUFACTURE_GET_SINGLE\"\r\nexport const MANUFACTURE_EDIT_BY_ID = \"MANUFACTURE_EDIT_BY_ID\"","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport './style.scss'\r\n\r\nimport vari from '../../../../assets/scss/vari.module.scss';\r\nimport Select from 'react-select'\r\nimport { getListCategoriesAsync } from '../../../../redux/actions/categoryAction';\r\nimport { getListManufacturesAsync} from '../../../../redux/actions/manufactureAction';\r\nimport { getListFragrancesAsync} from '../../../../redux/actions/fragranceAction';\r\nimport { createProductAsync, editProductAsync, getSingleProductAsync } from '../../../../redux/actions/productAction';\r\n\r\nconst customStylesSelect = {\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        //borderBottom: '1px dotted pink',\r\n        //color: state.isSelected ? 'red' : 'blue',s\r\n        //backgroundColor: state.isSelected ? 'red' : 'white',\r\n\r\n        backgroundColor: state.isDisabled\r\n            ? undefined\r\n            : state.isSelected\r\n                ? vari.selectItemChoosed\r\n                : state.isFocused\r\n                    ? vari.selectItemHover\r\n                    : undefined,\r\n    }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition, fontSize: \"20px\" };\r\n    }\r\n}\r\n\r\n\r\nfunction EditProduct() {\r\n\r\n    //<< get category, manufacture, fragrance, pe\r\n    let dispatch = useDispatch();\r\n    let {id} = useParams();\r\n    useEffect(() => {\r\n        dispatch(getListCategoriesAsync());\r\n        dispatch(getListManufacturesAsync());\r\n        dispatch(getListFragrancesAsync());\r\n        dispatch(getSingleProductAsync(id));\r\n    }, []);\r\n\r\n    const categoryList = useSelector((state) => state.categories.categoryList);\r\n    const manufactureList = useSelector((state) => state.manufactures.manufactureList);\r\n    const fragranceList = useSelector((state) => state.fragrances.fragranceList);\r\n    const productEdit = useSelector((state) => state.products.productSingle)\r\n\r\n    const[categoryOptions, setCategoryOptions] = useState(null)\r\n    const[fragranceOptions, setFragranceOptions] = useState(null)\r\n    const[manufactureOptions, setManufactureOptions] = useState(null)\r\n\r\n    useEffect(() => {\r\n       categoryList && setCategoryOptions(categoryList.map( ({id, name}) => ({value: id, label: name})));\r\n       //console.log(\"categoryOptions: \", categoryOptions)\r\n    }, [categoryList]);\r\n\r\n    useEffect(() => {\r\n        fragranceList && setFragranceOptions(fragranceList.map( ({id, name}) => ({value: id, label: name})));\r\n        //console.log(\"fragranceOptions: \", fragranceOptions)\r\n     }, [fragranceList]);\r\n\r\n     useEffect(() => {\r\n        manufactureList && setManufactureOptions(manufactureList.map( ({id, name}) => ({value: id, label: name})));\r\n        //console.log(\"manufactureOptions: \", manufactureOptions)\r\n     }, [manufactureList]);\r\n\r\n    //end gett category, manufacture, fragrance, pe >>\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        category: null,\r\n        fragrances: [],\r\n        manufacture: null,\r\n        images: [],\r\n        capacity: 0,\r\n        price: 0,\r\n        description: '', \r\n        imagesadd: []\r\n    })\r\n    \r\n    useEffect(() => {\r\n\r\n        if(productEdit && categoryOptions && manufactureOptions){\r\n            const lf = productEdit.fragrances.map( ({id, name}) => ({value: id, label: name}))\r\n            setFormData({\r\n                name: productEdit.name,\r\n                category: categoryOptions.find(obj => obj.value === productEdit.category.id),\r\n                manufacture: manufactureOptions.find(obj => obj.value === productEdit.manufacture.id),\r\n                fragrances: lf,\r\n                images: productEdit.images,\r\n                capacity: productEdit.capacity,\r\n                price: productEdit.price,\r\n                description: productEdit.description\r\n            })\r\n        }\r\n        }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(productEdit && categoryOptions && manufactureOptions){\r\n            const lf = productEdit.fragrances.map( ({id, name}) => ({value: id, label: name}))\r\n            setFormData({\r\n                name: productEdit.name,\r\n                category: categoryOptions.find(obj => obj.value === productEdit.category.id),\r\n                manufacture: manufactureOptions.find(obj => obj.value === productEdit.manufacture.id),\r\n                fragrances: lf,\r\n                images: productEdit.images,\r\n                capacity: productEdit.capacity,\r\n                price: productEdit.price,\r\n                description: productEdit.description\r\n            })\r\n        }\r\n        }, [productEdit]);\r\n\r\n\r\n    //img edit <<\r\n    const renderPhotos_PE = (source) => {\r\n        //console.log(\"source: \", source);\r\n        return source.map((img, index) => {\r\n          return (\r\n            <div className=\"img-product-2\" key={index}>\r\n                <img src={process.env.REACT_APP_API_IMG + img.path} alt=\"\" key={img} />\r\n                <span className=\"icon-delete-img-2\" onClick={()=>handleDeleteImgRender_PE(index)}> <i className='bx bx-x-circle icon-del-img'></i></span>\r\n            </div>\r\n            )\r\n        });\r\n      };\r\n\r\n      const handleDeleteImgRender_PE = (index) => {\r\n        const newI = formData.images.slice();\r\n        newI.splice(index,1);\r\n        //console.log(\"splice:\",newI)\r\n        //setUrlSelectedImages(newI) ;\r\n        setFormData({\r\n            ...formData,\r\n            images: newI\r\n        })\r\n    }\r\n\r\n\r\n    //end img edit >>\r\n\r\n    //<< img add\r\n    const [urlSelectedImages, setUrlSelectedImages] = useState([]);\r\n    const [fileImgPost, setFileImgPost] = useState([])\r\n\r\n    const handleDeleteImgRender = (index) => {\r\n        const newI = urlSelectedImages.slice();\r\n        newI.splice(index,1);\r\n\r\n        setUrlSelectedImages(newI) ;\r\n\r\n        let newImgPost = {...fileImgPost};\r\n        delete newImgPost[index]\r\n\r\n        setFileImgPost(newImgPost) ; \r\n        \r\n    }\r\n\r\n\r\n    const handleImageChange = (e) => {\r\n        // console.log(e.target.files[])\r\n        if (e.target.files) {\r\n            setFileImgPost(e.target.files)\r\n\r\n            const filesArray = Array.from(e.target.files).map((file) =>\r\n                URL.createObjectURL(file)\r\n            );\r\n            setUrlSelectedImages((prevImages) => prevImages.concat(filesArray));\r\n\r\n            Array.from(e.target.files).map(\r\n                (file) => URL.revokeObjectURL(file) // avoid memory leak\r\n            );\r\n    \r\n\r\n\r\n\r\n        }\r\n      };\r\n    \r\n      const renderPhotos = (source) => {\r\n\r\n        return source.map((photo, index) => {\r\n          return (\r\n            <div className=\"img-product-2\" key={index}>\r\n                <img src={photo} alt=\"\" key={photo} />\r\n                <span className=\"icon-delete-img-2\" onClick={()=>handleDeleteImgRender(index)}> <i className='bx bx-x-circle icon-del-img'></i></span>\r\n            </div>\r\n            )\r\n        });\r\n      };\r\n\r\n\r\n      useEffect(() => {\r\n\r\n        setFormData({\r\n            ...formData,\r\n            imagesadd: fileImgPost\r\n        })\r\n    },[fileImgPost]);\r\n\r\n    //end img add>>\r\n \r\n    \r\n    const [formValidError, setFomValidError] = useState({\r\n        name: '',\r\n        category: '',\r\n        fragrances: '',\r\n        manufacture: '',\r\n        images: '',\r\n        capacity: '',\r\n        price: '',\r\n        description: '', \r\n    })\r\n    const [isValidForm, setIsValidForm] = useState(false);\r\n    \r\n    function handleChangeFormData(key) {\r\n        if (key === 'category' || key === 'manufacture' || key === 'fragrances'){\r\n            return (value) =>{\r\n                setFormData({\r\n                    ...formData,\r\n                    [key]: value\r\n                })\r\n            }\r\n        }\r\n              \r\n        return (evt) => {\r\n            setFormData({\r\n                ...formData,\r\n                [key]: evt.target.value\r\n            })\r\n            //console.log(\"Form Data: \", formData); //note\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        setFomValidError(checkValidateInput(formData));\r\n    }, [formData]);\r\n\r\n\r\n    function checkValidateInput(formD) {\r\n        let err = {}\r\n        if (!formD.name) {\r\n            err.name = \"Name is required.\"\r\n        } \r\n        // else if (formD.name.length < 3) {\r\n        //     err.name = \"Name must be more than 3 characters.\"\r\n        // }\r\n        if (!formD.category) {\r\n            err.category = \"Category is required.\"\r\n        } \r\n        if (formD.fragrances.length === 0) {\r\n            err.fragrances = \"Fragrances is required.\"\r\n        } \r\n        if (!formD.manufacture) {\r\n            err.manufacture = \"Manufacture is required.\"\r\n        } \r\n        if (!formD.capacity || formD.capacity == 0) {\r\n            err.capacity = \"Capacity is required.\"\r\n        } \r\n        if (!formD.price || formD.price == 0) {\r\n            err.price = \"Price is required.\"\r\n        } \r\n        // if (formData.images.length == 0 && fileImgPost.length == 0) {\r\n        //     err.images = \"Images is required.\"\r\n        // } \r\n        if (formData.images.length == 0 && urlSelectedImages.length == 0) {\r\n            err.images = \"Images is required.\"\r\n        } \r\n        //console.log(\"mmm\", err)\r\n\r\n        if (err.name || err.fragrances || err.manufacture || err.capacity || err.price) {\r\n            setIsValidForm(false)\r\n            //err.isValidForm = false;\r\n            //console.log(\"vao falsse\")\r\n        } else {\r\n            setIsValidForm(true)\r\n            //err.isValidForm = true;\r\n            //console.log(\"vao true\")\r\n        }\r\n\r\n        return err;\r\n\r\n    }\r\n\r\n\r\n\r\n    const status = \"oops something wrong\";\r\n    function handleSave(evt) {\r\n        evt.preventDefault();\r\n\r\n        if (!isValidForm) return;\r\n\r\n\r\n\r\n        const data = new FormData();\r\n        data.append(\"id\", id);\r\n        data.append(\"name\", formData.name);\r\n        data.append(\"categoryId\", formData.category.value);\r\n        data.append(\"manufactureId\", formData.manufacture.value);\r\n        data.append(\"description\", formData.description);\r\n        data.append(\"capacity\", formData.capacity);\r\n        data.append(\"price\", formData.price);\r\n       \r\n        for (const key of Object.keys(formData.fragrances)) {\r\n            data.append(\"idFragranceList\", formData.fragrances[key].value)\r\n        }\r\n        if(formData.images.length > 0){\r\n            for (const key of Object.keys(formData.images)) {\r\n                data.append(\"idImagesDefaultNew\", formData.images[key].id)\r\n                //console.log(\"imagesList\",formData.images[key].id)\r\n            }\r\n        }\r\n        else {\r\n            data.append(\"idImagesDefaultNew\", [])\r\n        }\r\n        \r\n\r\n        if(fileImgPost.length != 0){\r\n            for (const key of Object.keys(fileImgPost)) {\r\n                data.append(\"imagesAdd\", fileImgPost[key])\r\n                \r\n            }\r\n        }\r\n        else {\r\n            data.append(\"imagesAdd\", [])\r\n        }\r\n        \r\n\r\n        dispatch(editProductAsync(id, data))\r\n        .then(res => {\r\n\r\n            if (res.ok) {\r\n                // Thành công\r\n                //console.log(\"errResponse\",errResponse)\r\n                //console.log(\"status\",status)\r\n               \r\n                \r\n            } else {\r\n                // Thất bại\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    let history = useHistory();\r\n    const handleCancel = () => {\r\n        history.push(\"/admin/products\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"edit-product-container\">\r\n                <h2 className=\"title\">\r\n                    <span><i className='bx bx-right-arrow icon'></i></span>\r\n                    <span>Edit Product</span>\r\n                </h2>\r\n                <div>\r\n                    <form className=\"add-category-form\" onSubmit={handleSave}>\r\n                        <div className=\"row-hh\">\r\n                            <div className=\"col-8\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Name</label>\r\n                                    <input id=\"name\" type=\"text\" className=\"form-control\" placeholder=\" \"\r\n                                        value={formData.name}\r\n                                        onChange={handleChangeFormData('name')}\r\n                                    />\r\n                                    {formValidError.name && <label className=\"label-error\">{formValidError.name}</label>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Category</label>\r\n                                    {\r\n                                       categoryOptions && productEdit &&\r\n                                        <Select options={categoryOptions}\r\n                                            className=\"select-hh\"\r\n                                            //defaultValue={categoryOptions[productEdit.category.id]}\r\n                                            placeholder=\"Category...\"\r\n                                            menuColor=\"red\"\r\n                                            styles={customStylesSelect}\r\n                                            //value={categoryOptions.find(obj => obj.id === selectItemChoosed.id)}\r\n                                            value={formData.category}\r\n                                            onChange={handleChangeFormData('category')} \r\n                                        />\r\n                                    }\r\n                                    {formValidError.category && <label className=\"label-error\">{formValidError.category}</label>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row-hh\">\r\n                            <div className=\"col-8\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Fragrances</label>\r\n                                    {\r\n                                       fragranceOptions && productEdit &&\r\n                                        <Select options={fragranceOptions}\r\n                                            isMulti={true}\r\n                                            closeMenuOnSelect={false}\r\n                                            className=\"select-hh\"\r\n                                            defaultValue={fragranceOptions[0]}\r\n                                            placeholder=\"Fragrances...\"\r\n                                            menuColor=\"red\"\r\n                                            styles={customStylesSelect}\r\n                                            value={formData.fragrances}\r\n                                            onChange={handleChangeFormData('fragrances')} \r\n                                        />\r\n                                    }\r\n                                    {formValidError.fragrances && <label className=\"label-error\">{formValidError.fragrances}</label>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Manufacture</label>\r\n                                    {\r\n                                       manufactureOptions && productEdit &&\r\n                                        <Select options={manufactureOptions}\r\n                                            className=\"select-hh\"\r\n                                            //defaultValue={manufactureOptions[productEdit.manufacture.id]}\r\n                                            placeholder=\"Manufacture...\"\r\n                                            menuColor=\"red\"\r\n                                            styles={customStylesSelect}\r\n                                            value={formData.manufacture}\r\n                                            onChange={handleChangeFormData('manufacture')} \r\n                                        />\r\n                                    }\r\n                                    {formValidError.manufacture && <label className=\"label-error\">{formValidError.manufacture}</label>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row row-img\">\r\n                            <label className=\"label label-images\" name=\"image\">Images</label>\r\n                            {/* <input type=\"file\" name=\"images\" id=\"images\" multiple hidden onChange={handleImageChange} />\r\n                            <label htmlFor=\"images\" className=\"label label-choose-img\"><i className='bx bx-image-add icon-choose-img'></i>Add Image</label> */}\r\n                            <div className=\"result\">{renderPhotos_PE(formData.images)}</div>\r\n                            {/* { formValidError.images &&  <label className=\"label-error\">{formValidError.images}</label> } */}\r\n                        </div>\r\n\r\n                        <div className=\"row row-img\">\r\n                            {/* <label className=\"label label-images\" name=\"image\">Images</label> */}\r\n                            <input type=\"file\" name=\"images-add\" id=\"images-add\" multiple hidden onChange={handleImageChange} />\r\n                            <label htmlFor=\"images-add\" className=\"label label-choose-img\"><i className='bx bx-image-add icon-choose-img'></i>Add Image</label>\r\n                            <div className=\"result\">{renderPhotos(urlSelectedImages)}</div>\r\n                            { formValidError.images &&  <label className=\"label-error\">{formValidError.images}</label> }\r\n                        </div>\r\n\r\n                        <div className=\"row-hh\">\r\n                            <div className=\"col-2\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Capacity</label>\r\n                                    <input id=\"capacity\" type=\"number\" className=\"form-control capacity\" placeholder=\" \"\r\n                                        value={formData.capacity}\r\n                                        onChange={handleChangeFormData('capacity')}\r\n                                    />\r\n                                    {formValidError.capacity && <label className=\"label-error\">{formValidError.capacity}</label>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-1\">\r\n                                <div className=\"form-group ml\">(ml)</div>\r\n                            </div>\r\n\r\n                            <div className=\"col-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Price</label>\r\n                                    <input id=\"price\" type=\"number\" className=\"form-control capacity\" placeholder=\" \"\r\n                                        value={formData.price}\r\n                                        onChange={handleChangeFormData('price')}\r\n                                    />\r\n                                    {formValidError.price && <label className=\"label-error\">{formValidError.price}</label>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                <div className=\"form-group ml\">VND</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row-hh\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Description</label>\r\n                                    <textarea id=\"description\" type=\"text\" className=\"form-control tare\" placeholder=\" \"\r\n                                        value={formData.description}\r\n                                        onChange={handleChangeFormData('description')}\r\n                                    />\r\n                                    {/* {formValidError.description && <label className=\"label-error\">{formValidError.description}</label>} */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"form-group last\">\r\n                            <div className=\"btn-left\"><span onClick={() => handleCancel()}>Cancel</span></div>\r\n                            <div className=\"btn-right\"><button type=\"submit\" className=\"form-control btn\">Save</button></div>\r\n                            \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProduct;\r\n","export const EMPLOYEE_GET_LIST = \"EMPLOYEE_GET_LIST\"\r\nexport const EMPLOYEE_GET_LIST_NAME = \"EMPLOYEE_GET_LIST_NAME\"\r\nexport const EMPLOYEE_CREATE_NEW = \"EMPLOYEE_CREATE_NEW\"\r\nexport const EMPLOYEE_DELETE_BY_ID = \"EMPLOYEE_DELETE_BY_ID\"\r\nexport const EMPLOYEE_GET_SINGLE = \"EMPLOYEE_GET_SINGLE\"\r\nexport const EMPLOYEE_EDIT_BY_ID = \"EMPLOYEE_EDIT_BY_ID\"\r\nexport const EMPLOYEE_EDIT_ROLE_BY_ID = \"EMPLOYEE_EDIT_ROLE_BY_ID\"","export const ROLE_GET_LIST = \"ROLE_GET_LIST\"\r\nexport const ROLE_GET_LIST_NAME = \"ROLE_GET_LIST_NAME\"\r\nexport const ROLE_CREATE_NEW = \"ROLE_CREATE_NEW\"\r\nexport const ROLE_DELETE_BY_ID = \"ROLE_DELETE_BY_ID\"\r\nexport const ROLE_GET_SINGLE = \"ROLE_GET_SINGLE\"\r\nexport const ROLE_EDIT_BY_ID = \"ROLE_EDIT_BY_ID\"","export const IMPORT_NOTE_GET_LIST = \"IMPORT_NOTE_GET_LIST\"\r\nexport const IMPORT_NOTE_CREATE_NEW = \"IMPORT_NOTE_CREATE_NEW\"\r\nexport const IMPORT_NOTE_GET_SINGLE = \"IMPORT_NOTE_GET_SINGLE\"\r\nexport const IMPORT_NOTE_GET_SINGLE_DETAIL = \"IMPORT_NOTE_GET_SINGLE_DETAIL\"\r\nexport const IMPORT_NOTE_UPDATE_STATUS_SUCCESS = \"IMPORT_NOTE_UPDATE_STATUS_SUCCESS\"\r\nexport const IMPORT_NOTE_UPDATE_STATUS_DELETE = \"IMPORT_NOTE_UPDATE_STATUS_DELETE\"","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Table from '../../../../components/Admin/Table/Table'\r\nimport './style.scss'\r\nimport vari from '../../../../assets/scss/vari.module.scss';\r\nimport Select from 'react-select'\r\nimport NumberFormat from 'react-number-format';\r\n\r\n//import { getListRolesAsync } from '../../../../redux/actions/roleAction';\r\nimport { getSingleImportNoteAsync, getSingleImportNoteDetailAsync, updateImportNoteStatusDeleteAsync, updateImportNoteStatusSuccessAsync } from '../../../../redux/actions/importNoteAction';\r\nimport status_items from '../../../../assets/json/status_import_note.json';\r\nconst statusOptions = status_items.map(({ id, name }) => ({ value: id, label: name }));\r\n\r\n//const genderOptions = status_items.map(({ id, name }) => ({ value: id, label: name }));\r\nconst customStylesSelect = {\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        //borderBottom: '1px dotted pink',\r\n        //color: state.isSelected ? 'red' : 'blue',s\r\n        //backgroundColor: state.isSelected ? 'red' : 'white',\r\n\r\n        backgroundColor: state.isDisabled\r\n            ? undefined\r\n            : state.isSelected\r\n                ? vari.selectItemChoosed\r\n                : state.isFocused\r\n                    ? vari.selectItemHover\r\n                    : undefined,\r\n    }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition, fontSize: \"20px\" };\r\n    }\r\n}\r\n\r\nexport function detailItem(detail){\r\n return <div className=\"detail-item\">\r\n     <div>\r\n        <span>{detail.id.productid}vvvv{detail.number}vvvv{detail.price}vvv{detail.product.name}</span>\r\n     </div>\r\n </div>\r\n}\r\n\r\n\r\nfunction EditImportNote() {\r\n    //const roleList = useSelector((state) => state.roles.roleList);\r\n    const importNoteSingle = useSelector((state) => state.importNote.importNoteSingle)\r\n    const importNoteDetail = useSelector((state) => state.importNote.importNoteSingleDetail)\r\n\r\n    const [formData, setFormData] = useState({\r\n        importId: '',\r\n        createday: '',\r\n        nameManufacture: '',\r\n        nameEmployee: '',\r\n        totalprice: null,\r\n        status: null,        \r\n    })\r\n    // const [formValidError, setFomValidError] = useState({\r\n    //     importId: '',\r\n    //     createday: '',\r\n    //     nameManufacture: '',\r\n    //     nameEmployee: '',\r\n    //     totalprice: '',\r\n    //     status: '',    \r\n       \r\n    // })\r\n    const [isValidForm, setIsValidForm] = useState(false);\r\n\r\n    let dispatch = useDispatch();\r\n    let {id} = useParams();\r\n    useEffect(() => {\r\n        dispatch(getSingleImportNoteAsync(id));\r\n        dispatch(getSingleImportNoteDetailAsync(id));\r\n        // setFormData({\r\n        //     ...formData,\r\n        //     role: formData.role,\r\n        // })\r\n        \r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if(importNoteSingle){\r\n            setFormData({\r\n                importId: importNoteSingle.importId,\r\n                createday: importNoteSingle.createday,\r\n                nameEmployee: importNoteSingle.nameEmployee,\r\n                nameManufacture: importNoteSingle.nameManufacture,\r\n                totalprice: importNoteSingle.totalprice,\r\n                status: statusOptions.find(obj => obj.value === importNoteSingle.status),\r\n                //status: importNoteSingle.status,\r\n                \r\n            })\r\n        }\r\n        }, [importNoteSingle]);\r\n\r\n\r\n\r\n    function handleChangeFormData(key) {\r\n        if (key === 'status'){\r\n            return (value) =>{\r\n                setFormData({\r\n                    ...formData,\r\n                    [key]: value\r\n                })\r\n            }\r\n        }\r\n\r\n        // return (evt) => {\r\n        //     setFormData({\r\n        //         ...formData,\r\n        //         [key]: evt.target.value\r\n        //     })\r\n        //     console.log(\"kkk: \", formData); //note\r\n        // }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"kkk22: \", formData); //note\r\n    //     setFomValidError(checkValidateInput(formData));\r\n    // }, [formData]);\r\n\r\n    // function checkValidateInput(formD) {\r\n    //     let err = {}\r\n    //     if (!formD.name) {\r\n    //         err.name = \"Name is required.\"\r\n    //     } else if (formD.name.length < 3) {\r\n    //         err.name = \"Name must be more than 3 characters.\"\r\n    //     }\r\n    //     if (!formD.phone) {\r\n    //         err.phone = \"Phone is required.\"\r\n    //     } else if (formD.phone.length < 10) {\r\n    //         err.phone = \"Phone must be more than 10 characters.\"\r\n    //     }\r\n    //     if (!formD.password) {\r\n    //         err.password = \"Password is required.\"\r\n    //     } else if (formD.password.length < 6) {\r\n    //         err.password = \"Password must be more than 6 characters.\"\r\n    //     }\r\n    //     if (!formD.email) {\r\n    //         err.email = \"Email is required.\"\r\n    //     } else if (!/\\S+@\\S+\\.\\S+/.test(formD.email)) {\r\n    //         err.email = \"Email is invalid.\"\r\n    //     }\r\n    //     if (!formD.role) {\r\n    //         err.role = \"Role is required.\"\r\n    //     } \r\n    //     if (!formD.gender) {\r\n    //         err.gender = \"Gender is required.\"\r\n    //     } \r\n    //     if (!formD.addressNo) {\r\n    //         err.addressNo = \"Address is required.\"\r\n    //     }\r\n    //     console.log(\"mmm\", err)\r\n\r\n    //     if (err.name || err.phone || err.password || err.email || err.addressNo) {\r\n    //         setIsValidForm(false)\r\n    //         //err.isValidForm = false;\r\n    //         console.log(\"vao falsse\")\r\n    //     } else {\r\n    //         setIsValidForm(true)\r\n    //         //err.isValidForm = true;\r\n    //         console.log(\"vao true\")\r\n    //     }\r\n\r\n    //     return err;\r\n\r\n    // }\r\n\r\n    // let dispatch = useDispatch();\r\n    // const errResponse = useSelector((state) => state.users.errResponse);\r\n    // const status = useSelector((state) => state.users.status);\r\n    //const status = \"oops something wrong\";\r\n    function handleSaveUser(evt) {\r\n         evt.preventDefault();\r\n        // console.log(\"check save onclick\",{...formData, gender: formData.gender.value, role: formData.role.value, address: formData.addressNo + \", \"+ formData.cdw} )\r\n        // //if (!isValidForm) return;\r\n\r\n        // console.log(\"check valid\")\r\n        //     const roleNew = {\r\n        //         role: formData.role.value, \r\n        //         name: formData.role.label\r\n        //     }\r\n        //     // const Account = {\r\n        //     //     email: employeeEdit.email,\r\n        //     //     password: employeeEdit.password,\r\n        //     //     role: roleNew\r\n        //     // }\r\n\r\n        if(importNoteSingle.status == 2 || importNoteSingle.status == 0 || formData.status.value == 1) return\r\n\r\n        if(formData.status.value == 0){\r\n            dispatch(updateImportNoteStatusDeleteAsync(id))\r\n            .then(res => {\r\n                // console.log(\"ok 1: \",{...employeeEdit.account, role: roleNew} )\r\n                // console.log(\"ok: \",res.ok )\r\n                if (res.ok) {\r\n                    dispatch(getSingleImportNoteAsync(id));\r\n                  // Thành công\r\n                   \r\n                   \r\n                } else {\r\n                  // Thất bại\r\n                  //console.log(\"status\",status)\r\n                }\r\n            });\r\n        }\r\n        if(formData.status.value == 2){\r\n            dispatch(updateImportNoteStatusSuccessAsync(id))\r\n            .then(res => {\r\n                // console.log(\"ok 1: \",{...employeeEdit.account, role: roleNew} )\r\n                // console.log(\"ok: \",res.ok )\r\n                if (res.ok) {\r\n                    dispatch(getSingleImportNoteAsync(id));\r\n                  // Thành công\r\n                   \r\n                   \r\n                } else {\r\n                  // Thất bại\r\n                  //console.log(\"status\",status)\r\n                }\r\n            });\r\n        }\r\n            \r\n    }\r\n\r\n    let history = useHistory();  \r\n    const handleCancel = () => {\r\n        history.push(\"/admin/import-note\");\r\n    }\r\n\r\n    const [currIndexStart, setCurrIndexStart] = useState(0);\r\n\r\n    const userTableHead = [\r\n        <th style={{width: \"15%\"}}>Image Product</th>,\r\n        <th style={{width: \"15%\"}}>ID Product</th>,\r\n        <th style={{width: \"25%\"}}>Name Product</th>,\r\n        <th style={{width: \"15%\"}}>Number</th>,\r\n        <th style={{width: \"20%\"}}>Price</th>,\r\n        // <th style={{width: \"12%\"}}>Action</th>,\r\n    ] \r\n    const renderHead = (item, index) => item;\r\n    \r\n    //<span>{detail.id.productid}vvvv{detail.number}vvvv{detail.price}vvv{detail.product.name}</span>\r\n    const renderBody = (item, index) =>(\r\n        <tr key={index}>\r\n            <td>{currIndexStart + index + 1}</td>\r\n            {console.log(\"image: \",process.env.REACT_APP_API_IMG,item.image)}\r\n            <td>\r\n                <div className=\"img-product\">\r\n                    {\r\n                        item.product.images &&\r\n                        (item.product.images.length > 0) ? <img src = {process.env.REACT_APP_API_IMG + item.product.images[0].path} alt=\"\"></img> :\r\n                        <img src = \"/assets/images/avatarDefault.png\" alt=\"\"></img>\r\n                    }     \r\n                </div>\r\n            </td>\r\n            <td>{item.id.productid}</td>\r\n            <td>{item.product.name}</td>\r\n            <td><NumberFormat value={item.number} displayType={'text'} thousandSeparator={true} /></td>\r\n            <td><NumberFormat value={item.price} displayType={'text'} thousandSeparator={true} /> VND</td>   \r\n            {/* <td>\r\n                <span onClick={()=>handleEdit(item.importId)}> <i className='bx bx-edit-alt iconEdit'> </i></span>\r\n                <span onClick={()=>handleDelete(item.importId)}> <i className='bx bx-trash iconDelete no'></i></span>\r\n            </td> */}\r\n        </tr>\r\n    )\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"edit-import-note-container\">\r\n                <h2 className=\"title\">\r\n                    <span><i className='bx bx-right-arrow icon'></i></span>\r\n                    <span>Edit ImportNote</span>\r\n                </h2>\r\n                <div>\r\n                    <form className=\"register-form\" onSubmit={handleSaveUser}>\r\n                        <div className=\"row-hh\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">ID ImportNote</label>\r\n                                    <input id=\"name\" type=\"text\" className=\"form-control\" placeholder=\" \" readonly\r\n                                        value={formData.importId}\r\n                                        //onChange={handleChangeFormData('name')}\r\n                                    />\r\n                                    {/* {formValidError.name && <label className=\"label-error\">{formValidError.name}</label>} */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">CreateDay</label>\r\n                                    <input id=\"email\" type=\"text\" className=\"form-control\" placeholder=\" \" readonly\r\n                                        value={formData.createday}\r\n                                        //onChange={handleChangeFormData('email')}\r\n                                    />\r\n                                    {/* {formValidError.email && <label className=\"label-error\">{formValidError.email}</label>} */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row-hh\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Employee</label>\r\n                                    <input id=\"email\" type=\"text\" className=\"form-control\" placeholder=\" \" readonly\r\n                                        value={formData.nameEmployee}\r\n                                        //onChange={handleChangeFormData('email')}\r\n                                    />\r\n                                    {/* {formValidError.email && <label className=\"label-error\">{formValidError.email}</label>} */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                            <div className=\"form-group\">\r\n                                    <label className=\"label\">Manufacture</label>\r\n                                    <input id=\"email\" type=\"text\" className=\"form-control\" placeholder=\" \" readonly\r\n                                        value={formData.nameManufacture}\r\n                                        //onChange={handleChangeFormData('email')}\r\n                                    />\r\n                                    {/* {formValidError.email && <label className=\"label-error\">{formValidError.email}</label>} */}\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row-hh\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Total Price</label>\r\n                                    <input id=\"name\" type=\"text\" className=\"form-control\" placeholder=\" \" readonly\r\n                                        value={formData.totalprice}\r\n                                        //onChange={handleChangeFormData('name')}\r\n                                    />\r\n                                    {/* <NumberFormat value={formData.totalprice} displayType={'text'} thousandSeparator={true} /> VND */}\r\n                                    {/* {formValidError.name && <label className=\"label-error\">{formValidError.name}</label>} */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"form-group\">\r\n                                    \r\n                                    {\r\n                                        importNoteSingle && importNoteSingle.status === 0 ?\r\n                                        <div>\r\n                                            <label className=\"label\">Status</label>\r\n                                            <input id=\"name\" type=\"text\" className=\"form-control\" placeholder=\" \" readonly\r\n                                                value=\"Đã Xóa\"\r\n                                                //onChange={handleChangeFormData('name')}\r\n                                            />\r\n                                        </div> \r\n\r\n                                        : importNoteSingle && importNoteSingle.status === 2 ?\r\n                                        <div>\r\n                                            <label className=\"label\">Status</label>\r\n                                            <input id=\"name\" type=\"text\" className=\"form-control\" placeholder=\" \" readonly\r\n                                                value=\"Nhập Thành Công\"\r\n                                                //onChange={handleChangeFormData('name')}\r\n                                            />\r\n                                        </div> \r\n                                        : <div>\r\n                                            <label className=\"label\">Status</label>\r\n                                            {\r\n                                                statusOptions && \r\n                                                <Select options={statusOptions}\r\n                                                    className=\"select-hh\"\r\n                                                    //defaultValue={statusOptions[0]}\r\n                                                    placeholder=\"role...\"\r\n                                                    menuColor=\"red\"\r\n                                                    styles={customStylesSelect}\r\n                                                    value={formData.status} \r\n                                                    onChange={handleChangeFormData('status')} \r\n                                                />\r\n                                            } \r\n                                            {/* {formValidError.role && <label className=\"label-error\">{formValidError.role}</label>} */}\r\n                                      </div>\r\n                                    }\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row-hh list-detail-product\">\r\n                           <span>List Detail</span>\r\n                           <div className=\"list-detail-item\">\r\n                                {\r\n                                    importNoteDetail &&\r\n                                    <div>\r\n                                        <Table\r\n                                            limit='5'\r\n                                            headData={userTableHead}\r\n                                            renderHead={(item, index) => renderHead(item, index)}\r\n                                            bodyData={importNoteDetail}\r\n                                            renderBody={(item, index, currIndexStart) => renderBody(item, index)}\r\n                                            passChildData={setCurrIndexStart}\r\n                                        /> \r\n                                    </div>\r\n                                }\r\n                           </div>\r\n                           \r\n                        </div>\r\n\r\n                        <div className=\"form-group last\">\r\n                            <div className=\"btn-left\"><span onClick={() => handleCancel()}>Cancel</span></div>\r\n                            <span className=\"btn-right\"><button type=\"submit\" className=\"form-control btn\">Save</button></span>\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditImportNote;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport './style.scss'\r\n\r\nimport vari from '../../../../assets/scss/vari.module.scss';\r\nimport Select from 'react-select'\r\nimport { getListManufacturesAsync } from '../../../../redux/actions/manufactureAction';\r\nimport AddProductSize from '../../../../components/Admin/ImportNoteAddProduct/AddProductIN';\r\nimport AddProductIN from '../../../../components/Admin/ImportNoteAddProduct/AddProductIN';\r\nimport NumberFormat from 'react-number-format';\r\nimport Table from '../../../../components/Admin/Table/Table';\r\nimport { getListProductsAsync, getProductByManufactureIdAsync } from '../../../../redux/actions/productAction';\r\nimport { createImportNoteAsync } from '../../../../redux/actions/importNoteAction';\r\n\r\nconst customStylesSelect = {\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        //borderBottom: '1px dotted pink',\r\n        //color: state.isSelected ? 'red' : 'blue',s\r\n        //backgroundColor: state.isSelected ? 'red' : 'white',\r\n\r\n        backgroundColor: state.isDisabled\r\n            ? undefined\r\n            : state.isSelected\r\n                ? vari.selectItemChoosed\r\n                : state.isFocused\r\n                    ? vari.selectItemHover\r\n                    : undefined,\r\n    }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition, fontSize: \"20px\" };\r\n    }\r\n}\r\n\r\n\r\nfunction AddImportNote() {\r\n\r\n    const manufactureList = useSelector((state) => state.manufactures.manufactureList);\r\n    const productList = useSelector((state) => state.products.productList);\r\n\r\n    const [manufactureOptions, setManufactureOptions] = useState(null)\r\n    const [productOptions, setProductOptions] = useState(null)\r\n\r\n    const [showAddProduct, setShowAddProduct] = useState(false)\r\n\r\n    const [selectedManufacture, setSelectedManufacture] = useState(null);\r\n    //product\r\n    const [selectedProducts, setSelectedProducts] = useState([]);\r\n    const handleDeleteProductRender = (index) => {\r\n        const newS = selectedProducts.slice();\r\n        newS.splice(index, 1);\r\n\r\n        setSelectedProducts(newS);\r\n    }\r\n\r\n    const renderProducts = (source) => {\r\n\r\n        return source.map((p, index) => {\r\n            return (\r\n                <div className=\"size-product-item\" key={index}>\r\n                    <div>ProductID: {p.productid}</div>\r\n                    <div>Number: <NumberFormat value={p.number} displayType={'text'} thousandSeparator={true} /></div>\r\n                    <div>Cost: <NumberFormat value={p.cost} displayType={'text'} thousandSeparator={true} /> VND</div>\r\n                    <span className=\"icon-delete-size\" onClick={() => handleDeleteProductRender(index)}> <i className='bx bx-x-circle icon-del-size'></i></span>\r\n                </div>\r\n            )\r\n        });\r\n    };\r\n\r\n    const handleAddNewProduct = (newProduct) => {\r\n        const newS = selectedProducts.slice();\r\n        newS.push(newProduct);\r\n        setSelectedProducts(newS);\r\n\r\n    }\r\n    //end product\r\n\r\n    useEffect(() => {\r\n        setFormData({\r\n            ...formData,\r\n            products: selectedProducts\r\n        })\r\n    }, [selectedProducts]);\r\n\r\n    //end p\r\n\r\n    useEffect(() => {\r\n        dispatch(getListManufacturesAsync());\r\n        setFormData({\r\n            ...formData,\r\n            manufacture: formData.manufacture,\r\n            products: []\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(selectedManufacture){\r\n            dispatch(getProductByManufactureIdAsync(selectedManufacture.value));\r\n        }\r\n\r\n\r\n        setSelectedProducts([]);\r\n       \r\n    }, [selectedManufacture]);\r\n\r\n    useEffect(() => {\r\n        if(selectedManufacture){\r\n            productList && setProductOptions(productList.map(({ id, name, images }) => ({ value: id, label: id + \" - \" + name, name: name, images: images})));\r\n\r\n        }\r\n\r\n\r\n       \r\n    }, [productList]);\r\n\r\n    useEffect(() => {\r\n        manufactureList && setManufactureOptions(manufactureList.map(({ id, name }) => ({ value: id, label: id + \" - \" + name })));\r\n\r\n    }, [manufactureList]);\r\n\r\n\r\n    //end gett category, manufacture, fragrance >>\r\n\r\n    const [formData, setFormData] = useState({\r\n        manufacture: '',\r\n        products: []\r\n    })\r\n    const [formValidError, setFomValidError] = useState({\r\n        manufacture: '',\r\n        products: ''\r\n    })\r\n    const [isValidForm, setIsValidForm] = useState(false);\r\n\r\n    function handleChangeFormData(key) {\r\n        if (key === 'manufacture') {\r\n            return (value) => {\r\n                setFormData({\r\n                    ...formData,\r\n                    [key]: value\r\n                })\r\n            }\r\n        }\r\n\r\n        return (evt) => {\r\n            setFormData({\r\n                ...formData,\r\n                [key]: evt.target.value\r\n            })\r\n            //console.log(\"Form Data: \", formData); //note\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        setFomValidError(checkValidateInput(formData));\r\n        setSelectedManufacture(formData.manufacture)\r\n    }, [formData]);\r\n\r\n\r\n    function checkValidateInput(formD) {\r\n        let err = {}\r\n        if (!formD.manufacture) {\r\n            err.manufacture = \"Manufacture is required.\"\r\n        }\r\n        if (formD.products.length <= 0) {\r\n            err.products = \"Please add product!\"\r\n        }\r\n\r\n\r\n        if (err.manufacture) {\r\n            setIsValidForm(false)\r\n            //err.isValidForm = false;\r\n            //console.log(\"vao falsse\")\r\n        } else {\r\n            setIsValidForm(true)\r\n            //err.isValidForm = true;\r\n            //console.log(\"vao true\")\r\n        }\r\n\r\n        return err;\r\n\r\n    }\r\n\r\n    let dispatch = useDispatch();\r\n    const status = \"oops something wrong\";\r\n    function handleSave(evt) {\r\n        evt.preventDefault();\r\n\r\n        if (!isValidForm) return;\r\n\r\n\r\n\r\n        // const data = new FormData();\r\n        // data.append(\"name\", formData.name);\r\n        // data.append(\"categoryId\", formData.category.value);\r\n        // data.append(\"manufactureId\", formData.manufacture.value);\r\n        // data.append(\"description\", formData.description);\r\n        // data.append(\"capacity\", formData.capacity);\r\n\r\n        // for (const key of Object.keys(formData.fragrances)) {\r\n        //     data.append(\"idFragranceList\", formData.fragrances[key].value)\r\n        // }\r\n        // for (const key of Object.keys(fileImgPost)) {\r\n        //     data.append(\"images\", fileImgPost[key])\r\n        // }\r\n\r\n\r\n\r\n        const data = selectedProducts.map((item,index)=>({\r\n            productid: item.productid,\r\n            price: item.cost,\r\n            number: item.number\r\n        }))\r\n        dispatch(createImportNoteAsync(data))\r\n        .then(res => {\r\n\r\n            if (res.ok) {\r\n                // Thành công\r\n                //console.log(\"errResponse\",errResponse)\r\n                //console.log(\"status\",status)\r\n                setFormData({\r\n                    manufacture: '',\r\n                    products: [],\r\n                })\r\n                \r\n\r\n            } else {\r\n                // Thất bại\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    let history = useHistory();\r\n    const handleCancel = () => {\r\n        history.push(\"/admin/import-note\");\r\n    }\r\n\r\n    //list detail product\r\n    const [currIndexStart, setCurrIndexStart] = useState(0);\r\n\r\n    const userTableHead = [\r\n        <th style={{width: \"15%\"}}>Image Product</th>,\r\n        <th style={{width: \"15%\"}}>ID Product</th>,\r\n        <th style={{width: \"20%\"}}>Name</th>,\r\n        <th style={{width: \"15%\"}}>Number</th>,\r\n        <th style={{width: \"20%\"}}>Cost</th>,\r\n        <th style={{width: \"9%\"}}>Action</th>,\r\n    ] \r\n    const renderHead = (item, index) => item;\r\n    \r\n    //<span>{detail.id.productid}vvvv{detail.number}vvvv{detail.price}vvv{detail.product.name}</span>\r\n    const renderBody = (item, index) =>(\r\n        <tr key={index}>\r\n            <td>{currIndexStart + index + 1}</td>\r\n            {/* {console.log(\"image: \",process.env.REACT_APP_API_IMG,item.image)} */}\r\n            <td>\r\n                <div className=\"img-product\">\r\n                    {\r\n                        item.images &&\r\n                        (item.images.length > 0) ? <img src = {process.env.REACT_APP_API_IMG + item.images[0].path} alt=\"\"></img> :\r\n                        <img src = \"/assets/images/avatarDefault.png\" alt=\"\"></img>\r\n                    }     \r\n                </div>\r\n            </td>\r\n            <td>{item.productid}</td>\r\n            <td>{item.name}</td>\r\n            <td><NumberFormat value={item.number} displayType={'text'} thousandSeparator={true} /></td>\r\n            <td><NumberFormat value={item.cost} displayType={'text'} thousandSeparator={true} /> VND</td>   \r\n              \r\n            <td className=\"icon-de\">\r\n                {/* <span onClick={()=>handleEdit(item.importId)}> <i className='bx bx-edit-alt iconEdit'> </i></span> */}\r\n                <span onClick={()=>handleDeleteProductRender(index)}> <i className='bx bx-trash iconDelete '></i></span>\r\n            </td>\r\n        </tr>\r\n    )\r\n\r\n    //end detail product\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"add-product-container\">\r\n                <h2 className=\"title\">\r\n                    <span><i className='bx bx-right-arrow icon'></i></span>\r\n                    <span>Add Import Note</span>\r\n                </h2>\r\n                <div>\r\n                    <form className=\"add-category-form\" onSubmit={handleSave}>\r\n                        {/* <div className=\"row-hh\">\r\n                            <div className=\"col-8\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Name</label>\r\n                                    <input id=\"name\" type=\"text\" className=\"form-control\" placeholder=\" \"\r\n                                        value={formData.name}\r\n                                        onChange={handleChangeFormData('name')}\r\n                                    />\r\n                                    {formValidError.name && <label className=\"label-error\">{formValidError.name}</label>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Category</label>\r\n                                    {\r\n                                       categoryOptions &&\r\n                                        <Select options={categoryOptions}\r\n                                            className=\"select-hh\"\r\n                                            defaultValue={categoryOptions[0]}\r\n                                            placeholder=\"Category...\"\r\n                                            menuColor=\"red\"\r\n                                            styles={customStylesSelect}\r\n                                            //value={categoryOptions.find(obj => obj.id === selectItemChoosed.id)}\r\n                                            value={formData.category}\r\n                                            onChange={handleChangeFormData('category')} \r\n                                        />\r\n                                    }\r\n                                    {formValidError.category && <label className=\"label-error\">{formValidError.category}</label>}\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        <div className=\"row-hh\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Choose Manufacture</label>\r\n                                    {\r\n                                        manufactureOptions &&\r\n                                        <Select options={manufactureOptions}\r\n                                            className=\"select-hh\"\r\n                                            defaultValue={manufactureOptions[0]}\r\n                                            placeholder=\"Manufacture...\"\r\n                                            menuColor=\"red\"\r\n                                            styles={customStylesSelect}\r\n                                            value={formData.manufacture}\r\n                                            onChange={handleChangeFormData('manufacture')}\r\n                                        />\r\n                                    }\r\n                                    {formValidError.manufacture && <label className=\"label-error\">{formValidError.manufacture}</label>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row-hh\">\r\n                            {\r\n                                selectedManufacture && \r\n                                <div className=\"col-12\">\r\n                                <div className=\"add-product-buy\" onClick={() => setShowAddProduct(showAddProduct => !showAddProduct)}><i className='bx bx-add-to-queue icon-add-product'></i>Add Product</div>\r\n                                {\r\n                                    showAddProduct && (\r\n                                        <div>\r\n                                            <AddProductIN\r\n                                                addProductOnclick={handleAddNewProduct}\r\n                                                handleCancelOnclick={setShowAddProduct}\r\n                                                productOptions = {productOptions}\r\n                                            />\r\n                                        </div>)\r\n                                }\r\n                                {/* <div className=\"result-sizes\">{renderProducts(selectedProducts)}</div> */}\r\n                                {formValidError.products && <label className=\"label-error\">{formValidError.products}</label>}\r\n                            </div>\r\n                            }\r\n                           \r\n                        </div>\r\n\r\n                        <div className=\"row-hh list-detail-product\">\r\n                           <span>List Detail</span>\r\n                           <div className=\"list-detail-item\">\r\n                               {console.log(\"aaaaa: \", selectedProducts)}\r\n                                {\r\n                                    selectedProducts && selectedProducts.length > 0 &&\r\n                                    <div>\r\n                                        <Table\r\n                                            limit='5'\r\n                                            headData={userTableHead}\r\n                                            renderHead={(item, index) => renderHead(item, index)}\r\n                                            bodyData={selectedProducts}\r\n                                            renderBody={(item, index, currIndexStart) => renderBody(item, index)}\r\n                                            passChildData={setCurrIndexStart}\r\n                                        /> \r\n                                    </div>\r\n                                }\r\n                           </div>\r\n                           \r\n                        </div>\r\n\r\n                        <div className=\"col-12\">\r\n                            {/* <div className=\"icon-add-size-container\" onClick={() => setShowAddProduct(showAddProduct => !showAddProduct)}>\r\n                                {\r\n                                    showAddProduct ?\r\n                                        <span className=\"btn-clo-op-add-size \"><i className='bx bxs-minus-circle ' ></i> Close Add Size</span> :\r\n                                        <span className=\"btn-clo-op-add-size\"><i className='bx bxs-plus-circle' ></i> Add Size</span>\r\n                                }\r\n                            </div> */}\r\n                            {/* {\r\n                                showAddProduct && (\r\n                                    <div>\r\n                                        <AddProductIN\r\n                                            addProductOnclick={handleAddNewProduct}\r\n                                            handleCancelOnclick={setShowAddProduct}\r\n                                        />\r\n                                    </div>)\r\n                            }\r\n                            <div className=\"result-sizes\">{renderProducts(selectedProducts)}</div>\r\n                            {formValidError.products && <label className=\"label-error\">{formValidError.products}</label>} */}\r\n                        </div>\r\n\r\n                        <div className=\"form-group last\">\r\n                            <div className=\"btn-left\"><span onClick={() => handleCancel()}>Cancel</span></div>\r\n                            <div className=\"btn-right\"><button type=\"submit\" className=\"form-control btn\">Save</button></div>\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddImportNote;","export const ORDER_GET_LIST = \"ORDER_GET_LIST\"\r\nexport const ORDER_CREATE_NEW = \"ORDER_CREATE_NEW\"\r\nexport const ORDER_GET_SINGLE = \"ORDER_GET_SINGLE\"\r\nexport const ORDER_UPDATE_STATUS = \"ORDER_UPDATE_STATUS\"\r\nexport const ORDER_GET_BY_ID_CUSTOMER = \"ORDER_GET_By_ID_CUSTOMER\"\r\n","import apiClient from \"../api/apiClient\";\r\n\r\nexport const OrderService = {\r\n    getAllOrders: () => apiClient().get(\"/api/order/all\"),\r\n    createOrder: (data) => apiClient().post(\"/api/order/\", data), //nameCustomer, address, phoneNumber\r\n    getSingleOrder: (id) => apiClient().get(`/api/order/${id}`),\r\n    updateStatus: (id,status) => apiClient().put(`/api/order/change?orderId=${id}&status=${status}`),\r\n    getOrdersByIdCUstomer: (customerId) => apiClient().get(`/api/order/all-by-customer-id?customerId=${customerId}`)\r\n}","import * as actionStypes from '../constants/orderConstant';\r\nimport { OrderService } from '../services/orderService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst getListOrders = (orderList) => ({\r\n    type: actionStypes.ORDER_GET_LIST,\r\n    payload: orderList,\r\n\r\n})\r\n\r\nexport const getListOrdersAsync = () => (dispatch) => {\r\n        OrderService.getAllOrders()\r\n        .then(response => {\r\n\r\n            dispatch(getListOrders(response.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error: \",error);\r\n        });\r\n}\r\n\r\n//create order\r\nconst createOrder = () => ({\r\n    type: actionStypes.ORDER_CREATE_NEW,\r\n})\r\n\r\nexport const createOrderAsync = (data) => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await OrderService.createOrder(data) );\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(createOrder());\r\n                //dispatch(getListOrdersAsync());\r\n                toast.success(\"ORDER SUCCESS\");\r\n                return {\r\n                    ok: true\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n                console.log(\"response.eror: \", response.error);\r\n                \r\n            } \r\n        }catch(error){\r\n\r\n            toast.error(error.response.data)\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//get single order\r\nconst getSingleOrder = (orderSingle) => ({\r\n    type: actionStypes.ORDER_GET_SINGLE,\r\n    payload: orderSingle,\r\n\r\n})\r\n\r\n// export const getSingleOrderAsync = (id) => (dispatch) => {\r\n//         OrderService.getSingleOrder(id)\r\n//         .then(response => {\r\n//             //console.log(\"response: \", response);\r\n//             //console.log(\"response dt: \", response.data);\r\n//             dispatch(getSingleOrder(response.data));\r\n          \r\n            \r\n//         })\r\n//         .catch((error) => {\r\n//             console.log(\"error: \",error);\r\n    \r\n//         });\r\n// }\r\n\r\nexport const getSingleOrderAsync = (id)  => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await OrderService.getSingleOrder(id));\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(getSingleOrder(response.data));\r\n                //toast.success(\"UPDATE SUCCESS\");\r\n                return {\r\n                    ok: true,\r\n                    status: response.data.status\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n                console.log(\"response.eror: \", response.error);\r\n                \r\n            } \r\n        }catch(error){\r\n            //console.log(\"error.response: \", error.response);\r\n            //toast.error(\"UPDATE FAIL\")\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n///.\r\n//get  order by id user\r\nconst getOrdersCustomer = (ordersList) => ({\r\n    type: actionStypes.ORDER_GET_BY_ID_CUSTOMER,\r\n    payload: ordersList,\r\n\r\n})\r\n\r\n\r\nexport const getOrdersCustomerAsync = (customerId)  => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await OrderService.getOrdersByIdCUstomer(customerId));\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(getOrdersCustomer(response.data));\r\n                //toast.success(\"UPDATE SUCCESS\");\r\n                return {\r\n                    ok: true,\r\n                    //status: response.data.status\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n                console.log(\"response.eror: \", response.error);\r\n                \r\n            } \r\n        }catch(error){\r\n            //console.log(\"error.response: \", error.response);\r\n            //toast.error(\"UPDATE FAIL\")\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// //get single orderDtail\r\n// const getSingleOrderDetail = (orderSingleDetail) => ({\r\n//     type: actionStypes.ORDER_GET_SINGLE_DETAIL,\r\n//     payload: orderSingleDetail,\r\n\r\n// })\r\n\r\n// export const getSingleOrderDetailAsync = (id) => (dispatch) => {\r\n//         OrderService.getDetailSingleOrder(id)\r\n//         .then(response => {\r\n//             //console.log(\"response: \", response);\r\n//             //console.log(\"response dt: \", response.data);\r\n//             dispatch(getSingleOrderDetail(response.data));\r\n            \r\n//         })\r\n//         .catch((error) => {\r\n//             console.log(\"error: \",error);\r\n//         });\r\n// }\r\n\r\n\r\n\r\n// //delete order\r\n// const deleteOrder = () => ({\r\n//     type: actionStypes.ORDER_DELETE_BY_ID,\r\n// })\r\n\r\n// export const deleteOrderAsync = (orderId) => (dispatch) => {\r\n//         OrderService.deleteOrder(orderId)\r\n//         .then(response => {\r\n//             console.log(\"response: \", response);\r\n//             dispatch(deleteOrder());\r\n//             dispatch(getListCategoriesAsync());\r\n//             toast.success(\"DELETE SUCCESS\");\r\n//         })\r\n//         .catch((error) => {\r\n//             console.log(\"error.response: \", error.response);\r\n//             // const errorList = Object.values(error.response.data.message);\r\n//             // errorList.map((item) => {\r\n//             //     toast.error(item);\r\n//             // })\r\n//             toast.error(error.response.data)\r\n//         });\r\n// }\r\n\r\n\r\n//update status order \r\nconst updateOrderStatus = () => ({\r\n    type: actionStypes.ORDER_UPDATE_STATUS,\r\n})\r\n\r\nexport const updateOrderStatusAsync = (id, status)  => {\r\n    return async function(dispatch) {     \r\n        try{\r\n            let response = (await OrderService.updateStatus(id, status));\r\n\r\n            // eslint-disable-next-line\r\n            if(response.status == 200){\r\n                dispatch(updateOrderStatus());\r\n                dispatch(getSingleOrderAsync(id));\r\n                toast.success(\"UPDATE SUCCESS\");\r\n                return {\r\n                    ok: true\r\n                }\r\n            }\r\n            else{//call api not success not run in here\r\n\r\n                \r\n            } \r\n        }catch(error){\r\n            //console.log(\"error.response: \", error.response);\r\n            toast.error(\"UPDATE FAIL\")\r\n            return{\r\n                ok: false\r\n            }\r\n        }\r\n    }\r\n}","import \"./style.scss\"\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport default function ProductItemBuy({\r\n    img = \"/assets/images/slider02.jpg\",\r\n    name = \"Mug Adventure\",\r\n    price = \"16.00\",\r\n    quantity = \"1\",\r\n    priceTotal = \"16.00\",\r\n    capacity\r\n\r\n}){\r\n    return(\r\n        <div className=\"item-product-buy-container\">\r\n            <div className=\"row-hh\">\r\n                <div className=\"col-2 img-col\">\r\n                    <div className=\"img-product\">\r\n                        <img src={img} alt=\"\"></img>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-3 name-col\">\r\n                    <h3>{name} <br/><span className=\"color-size\">capacity: {capacity}</span></h3>\r\n                </div>\r\n\r\n                <div className=\"col-2 price-col\">\r\n                    <h3><NumberFormat value={price} displayType={'text'} thousandSeparator={true} /> VND</h3>\r\n                </div>\r\n\r\n                <div className=\"col-2 quantity-col\">\r\n                    <h3>{quantity}</h3>\r\n                </div>\r\n\r\n                <div className=\"col-2 price-total-col\">\r\n                    <h3><NumberFormat value={priceTotal} displayType={'text'} thousandSeparator={true} /> VND</h3>\r\n                </div>\r\n\r\n                {/* <div className=\"col-1 button-col\">\r\n                    <span><i className='bx bx-trash icon-delete'></i></span>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}","import { ReportService } from '../../../../redux/services/reportService'\r\nimport './style.scss'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useState } from 'react';\r\nvar format = require('date-format');\r\n\r\nfunction formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\nexport default function ReportChoose(){\r\n    //So luong ban\r\n    const [startDateRank, setStartDateRank] = useState(new Date());\r\n    const [endDateRank, setEndDateRank] = useState(new Date());\r\n    \r\n    function handleRank(){\r\n        ReportService.createReportRank({\r\n            from: format.asString('yyyy-MM-dd',startDateRank ),\r\n            to: format.asString('yyyy-MM-dd',endDateRank )\r\n        })\r\n        // console.log(\"startDateRank: \",startDateRank.toISOString().slice(0,10))\r\n        // console.log(\"endDateRank: \",endDateRank.toISOString().slice(0,10))\r\n        // console.log(\"startDateRank: \",startDateRank)\r\n        // console.log(\"startDateRank B: \",format.asString('yyyy-MM-dd',startDateRank ))\r\n\r\n    }\r\n\r\n    //End so luong ban\r\n\r\n    //Doanh thu ngay\r\n    const [startDateRevenue, setStartDateRevenue] = useState(new Date());\r\n    const [endDateRevenue, setEndDateRevenue] = useState(new Date());\r\n    function handleRevenue(){\r\n        ReportService.createReportRevenue({\r\n            from: format.asString('yyyy-MM-dd',startDateRevenue ),\r\n            to:format.asString('yyyy-MM-dd',endDateRevenue )\r\n        })\r\n        // console.log(\"startDateRank: \",(new Date(startDateRank)).toISOString().slice(0,10))\r\n        // console.log(\"endDateRank: \",(new Date(endDateRank)).toISOString().slice(0,10))\r\n\r\n    }\r\n    //End doanh thu ngay\r\n\r\n    function handleProfit(){\r\n        ReportService.createReportProfit()\r\n    }\r\n    function handleStock(){\r\n        ReportService.createReportStock()\r\n    }\r\n\r\n    function handler(e) {\r\n        alert(e.target.value);\r\n     }\r\n    return(\r\n        <div className=\"report-choose-container\">\r\n            <h2 className=\"page-header\">Report and statistical</h2>\r\n\r\n            <div className=\"row-hh\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__body\">\r\n                            <div className=\"row-hh\">\r\n\r\n                                <div className=\"container-btn rank-container col-3\">\r\n                                    <div className=\"til\">THỐNG KÊ SỐ LƯỢNG BÁN</div>\r\n                                    <div className=\"choo-day\">\r\n                                        <DatePicker selected={startDateRank} onChange={(date) => setStartDateRank(date)} />\r\n                                        <DatePicker selected={endDateRank} onChange={(date) => setEndDateRank(date)} />\r\n                                        <div className=\"btn-act-report m\" onClick={handleRank}>Render Report</div>\r\n                                    </div>\r\n                                    {/* <input type=\"date\" id=\"dt\" onchange=\"handler(event);\" /> */}\r\n\r\n                                </div>\r\n\r\n                                <div className=\"container-btn revenue-container col-3\">\r\n                                    <div className=\"til\">DOANH THU THEO NGÀY</div>\r\n                                    <div className=\"choo-day\">\r\n                                        <DatePicker selected={startDateRevenue} onChange={(date) => setStartDateRevenue(date)} />\r\n                                        <DatePicker selected={endDateRevenue} onChange={(date) => setEndDateRevenue(date)} />\r\n                                        <div className=\"btn-act-report m\" onClick={handleRevenue}>Render Report</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"container-btn stock-container col-3\">\r\n                                    <div className=\"til\">TỒN KHO</div>\r\n                                    <div className=\"btn-act-report\" onClick={handleStock}>Render Report</div>\r\n\r\n                                </div>\r\n                                <div className=\"container-btn Profit-container col-3\">\r\n                                    <div className=\"til\">LỢI NHUẬN</div>\r\n                                    <div className=\"btn-act-report\" onClick={handleProfit}>Render Report</div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { Route, Switch } from 'react-router';\r\n\r\nimport Home from '../Guest/Home';\r\nimport User from './User/UserList';\r\n// import Product from '../../page/Admin/Product';\r\n import Category from './Category/CategoryList';\r\n import AddCategory from './Category/AddCategory/AddCategory';\r\n import EditCategory from './Category/EditCategory/EditCategory';\r\n// import EditCategory from './Edit/Category/EditCategory';\r\n\r\nimport AddUser from './User/AddUser/AddUser';\r\nimport Fragrance from './Fragrance/FragranceList';\r\nimport Manufacture from './Manufacture/ManufactureList';\r\nimport AddFragrance from './Fragrance/AddFragrance/AddFragrance';\r\nimport EditFragrance from './Fragrance/EditFragrance/EditFragrance';\r\nimport AddManufacture from './Manufacture/AddManufacture/AddManufacture';\r\nimport EditManufacture from './Manufacture/EditManufacture/EditManufacture';\r\nimport Product from './Product/ProductList';\r\nimport AddProduct from './Product/AddProduct/AddProduct';\r\nimport EditProduct from './Product/EditProduct/EditProduct';\r\nimport Employee from './Employee/EmployeeList';\r\nimport AddEmployee from './Employee/AddEmployee/AddEmployee';\r\nimport EditEmployee from './Employee/EditEmployee/EditEmployee';\r\nimport Customer from './Customer/CustomerList';\r\nimport ImportNote from './ImportNote/ImportNoteList';\r\nimport ImportNoteDetail from './ImportNote/ImportNoteDetail/ImportNoteDetail';\r\nimport EditImportNote from './ImportNote/EditImportNote/EditImportNote';\r\nimport AddImportNote from './ImportNote/AddImportNote/AddImportNote';\r\nimport Order from './Order/OrderList';\r\nimport OrderDetail from './Order/OrderDetail/OrderDetail';\r\nimport EditOrder from './Order/EditOrder/EditOrder';\r\nimport ReportChoose from './Report/ReportChoose';\r\nimport { returnUrl } from '../../helpers';\r\n\r\n function Routes(){\r\n    return(\r\n        <Switch>\r\n            <Route  exact path={returnUrl(\"\")} component={Home}/>\r\n            {/* <Route  exact path='/admin' component={User}/>\r\n            <Route  path='/admin/addUser' component={AddUser}/> */}\r\n\r\n            <Route  exact path='/admin' component={Customer}/>\r\n\r\n            <Route exact path='/admin/employees' component={Employee}/>\r\n            <Route path='/admin/employees/new-employee' component={AddEmployee}/>\r\n            <Route path='/admin/employees/:id' component={EditEmployee}/>\r\n\r\n            <Route exact path='/admin/categories' component={Category}/>\r\n            <Route path='/admin/categories/new-category' component={AddCategory}/>\r\n            <Route path='/admin/categories/:id' component={EditCategory}/>\r\n\r\n            <Route exact path='/admin/fragrances' component={Fragrance}/>\r\n            <Route path='/admin/fragrances/new-fragrance' component={AddFragrance}/>\r\n            <Route path='/admin/fragrances/:id' component={EditFragrance}/>\r\n\r\n            <Route exact path='/admin/manufactures' component={Manufacture}/>\r\n            <Route path='/admin/manufactures/new-manufacture' component={AddManufacture}/>\r\n            <Route path='/admin/manufactures/:id' component={EditManufacture}/>\r\n\r\n            <Route exact path='/admin/products' component={Product}/>\r\n            <Route path='/admin/products/new-product' component={AddProduct}/>\r\n            <Route path='/admin/products/:id' component={EditProduct}/>\r\n\r\n            <Route exact path='/admin/import-note' component={ImportNote}/>\r\n            <Route exact path='/admin/import-note/new-import-note' component={AddImportNote}/>\r\n            <Route exact path='/admin/import-note/detail/:id' component={ImportNoteDetail}/>\r\n            <Route exact path='/admin/import-note/:id' component={EditImportNote}/>\r\n\r\n            <Route exact path='/admin/orders' component={Order}/>\r\n            <Route exact path='/admin/orders/detail/:id' component={OrderDetail}/>\r\n            <Route exact path='/admin/orders/:id' component={EditOrder}/>\r\n\r\n            <Route exact path='/admin/report' component={ReportChoose}/>\r\n                        \r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes;\r\n","import './style.scss';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport PragranceTypeItem from '../PragranceTypeItem';\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport pragrance_list_ex from '../../../assets/json/list-pragrance.json';\r\nimport { returnUrl } from '../../../helpers';\r\n\r\nconst settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: false,\r\n    speed: 850,\r\n    autoplaySpeed: 3000,\r\n    fade: true,\r\n    // cssEase: \"linear\",\r\n    // nextArrow: <ArrowNext />,\r\n    // prevArrow: <ArrowPrev />\r\n    \r\n}\r\n\r\nexport default function ProductDetailImageSlider({listImage}){\r\n    const [imageListRender, setImageListRender] = useState(listImage);\r\n    useEffect(()=>{\r\n        setImageListRender(listImage)\r\n    },[listImage])\r\n\r\n    return(\r\n        <div className=\"product-type-slider-container\">\r\n             <Slider {...settings}  \r\n                customPaging={(i) => {\r\n                        // return <div><img src={process.env.REACT_APP_API_IMG + imageListRender[i].path}></img></div>;\r\n                        return <div><img src={returnUrl(imageListRender[i])}></img></div>;\r\n                }}\r\n                dotsClass=\"slick-dots custom-indicator\">\r\n             {\r\n                   \r\n                        imageListRender && imageListRender.length > 0 ? (\r\n                             \r\n                            imageListRender.map((item, index) => \r\n                                <div key={index} className=\"slide-item\">\r\n                                   <div><img src={returnUrl(item)}></img></div>\r\n                                </div> \r\n                            )\r\n                            \r\n                        ) : <div>Not Have Images</div>\r\n                                              \r\n                }\r\n\r\n                {/* <div><PragranceTypeItem/></div>\r\n                <div><PragranceTypeItem/></div>\r\n                <div><PragranceTypeItem/></div>\r\n                <div><PragranceTypeItem/></div>\r\n                <div><PragranceTypeItem/></div> */}\r\n             </Slider>\r\n        </div>\r\n    )\r\n}","import './style.scss'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n// import ArrowNext from './ArrowNext'\r\n// import ArrowPrev from './ArrowPrev'\r\n// import { toast } from \"react-toastify\";\r\n\r\nimport { getSingleProductAsync } from '../../../redux/actions/productAction'\r\nimport ProductDetailImageSlider from '../../../components/share/ProductDetailImageSlider';\r\nimport { addProductCartAsync } from '../../../redux/actions/cartAction';\r\nimport { toast } from 'react-toastify';\r\n\r\n// const settings = {\r\n//     // dots: true,\r\n//     infinite: true,\r\n//     slidesToShow: 1,\r\n//     slidesToScroll: 1,\r\n//     //autoplay: true,\r\n//     speed: 500,\r\n//     // autoplaySpeed: 3000,\r\n//     //fade: true,\r\n//     // cssEase: \"linear\",\r\n//     nextArrow: <ArrowNext />,\r\n//     prevArrow: <ArrowPrev />\r\n\r\n// }\r\n\r\nconst productEx = {\r\n    \"images\": [\"/assets/images/pi-catusWater.jpg\",\"/assets/images/HomeCategory01.png\",\"/assets/images/HomeCategory05.png\"],\r\n    \"name\": \"Catus Water\",\r\n    \"rated\": \"5\",\r\n    \"price\": \"480000\",\r\n    \"number\": \"10\",\r\n    \"capacity\": \"100\",\r\n    \"id\":\"141592654\",\r\n    \"fragrances\": [{\"name\": \"Citrus\"}, {\"name\": \"Floral\"}, {\"name\": \"Aromatic\"}],\r\n    \"manufacture\": {\"name\": \"Victoria's Secret\"},\r\n    \"description\": \"Và cho bae nào mê tông nước trong trẻo, mát lành mà bbw hết rùi thì hãy nghía bé Cactus Water nghen babe ơiiii, mùi hương nhẹ nhàng thoang thoảng của hoa xương rồng và nước mưa, vâng chính là nước mưa lạnh lạnh trong truyền thuyết mà mấy bà hay hỏi nè Mùi trầm nhẹ, trong vắt nhưng khá là sang nghen kiểu giống giống như Desert Wildflowers mà hơi đằm hơn chút xíu và ít hương hoa hơn nhen. Yêu kiều, thanh thoát, nhẹ nhàng, mong manh như một giấc mơ vậyyy, kiểu lúc thấy em on web là bà Xóm đã mê lắm ùi, mấy bé vỏ màu xanh xanh trong trong như này là lấy cảm tình Xóm liền luôn á. Mùi hương mọng nước, lạnh lạnh đã ơi là đã, màu xanh của cỏ cây và màu trắng trong của nước mát đã khiến tâm hồn này nhẹ nhõm rồi, thêm cả làn hương của lá cỏ dưới mưa nữa, mát lành và yên ả lắm. Mềm mại và êm ái, khi càng dành thời gian để tận hưởng mùi hương nhẹ dịu này, Xóm cành cảm thấy sự thanh tịnh và yên bình xung quanh.\"\r\n\r\n}\r\n\r\nexport default function DetailProduct() {\r\n    const [isOpenDesc, setOpenDesc] = useState(false);\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const product = useSelector((state) => state.products.productSingle);\r\n\r\n\r\n    //const [colorsObject, setColorsObject] = useState([]);\r\n    //console.log(\"colorsObject: \", colorsObject);\r\n    //const [colorUserChoosed, setColorUserChoosed] = useState({color: \"\", sizes: []});\r\n    //const [sizeUserChoosed, setSizeUserChoosed] = useState({name: \"\", number: 0})\r\n    const [numberUserChoosed, setNumberUserChoosed] = useState(0);\r\n\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n        dispatch(getSingleProductAsync(id))\r\n            // .then(res => {\r\n            //     // console.log(\"okkkkkkkkk: \", res.ok)\r\n            //     if (res.ok) {\r\n            //         // setColorsObject(JSON.parse(res.productCurrent.colors))\r\n            //         // setColorUserChoosed(JSON.parse(res.productCurrent.colors)[0])\r\n            //         // setSizeUserChoosed(JSON.parse(res.productCurrent.colors)[0].sizes[0])\r\n            //         //console.log(\"okkkkkkkkk: \",JSON.parse(res.productCurrent.colors)[0].sizes[0])\r\n            //     }\r\n            // })\r\n    }, []);\r\n\r\n    const handleAddCart = (id) => {\r\n        if(numberUserChoosed > 0){\r\n            //dispatch(addProductCartAsync({productid: id, number: numberUserChoosed}))\r\n            toast.error(\"PLEASE LOGIN\")\r\n        }\r\n        else{\r\n            toast.error(\"PLEASE CHOOSE NUMBER\")\r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n        <div className=\"details-product-container\">\r\n            {\r\n                productEx ?\r\n                   <div className=\"container\">\r\n                        <div className=\"row-hh\">\r\n                            <div className=\"col-6 details-product-left\">\r\n                                {\r\n                                    productEx.images && productEx.images.length > 0 ?\r\n                                        <ProductDetailImageSlider listImage = {productEx.images}/> : ''\r\n                                }\r\n                        \r\n                            </div>\r\n\r\n                            <div className=\"col-6 details-product-right\">\r\n                                <h3 className=\"title-dp\">Thông tin sản phẩm</h3>\r\n                                <p className=\"name-product-dp\">{productEx.name}</p>\r\n                                <p className=\"code-product-dp\">code {productEx.id}</p>\r\n                                <p className=\"price-dp\"><NumberFormat value={productEx.price} displayType={'text'} thousandSeparator={true} /> VND</p>\r\n                                <p className=\"capacity-product-dp\">Dung tích: {productEx.capacity} ml</p>\r\n                               \r\n                                {/* <div className=\"color-dp\">\r\n                                <p>Màu</p>\r\n                                {\r\n                                     colorsObject && colorsObject.map(function(color, index){\r\n                                        if(color.color === colorUserChoosed.color){\r\n                                            return(\r\n                                                <div className=\"color-item-dp choosed\"\r\n                                                    style={{ backgroundColor: `${color.color}` }} \r\n                                                    key={index}\r\n                                                    onClick={()=>{\r\n                                                        setColorUserChoosed(color);\r\n                                                    }}\r\n                                                ></div> \r\n                                            )\r\n                                        } \r\n                                        else{\r\n                                            return(\r\n                                                <div className=\"color-item-dp\"\r\n                                                    style={{ backgroundColor: `${color.color}` }} \r\n                                                    key={index}\r\n                                                    onClick={()=>{\r\n                                                        setColorUserChoosed(color);\r\n                                                    }}\r\n                                                 ></div> \r\n                                            )\r\n                                        }\r\n                                    }) \r\n                                }  \r\n                            \r\n                                </div>  */} \r\n                                {/*  <div className=\"size-dp\">\r\n                                    <p>Kích thước</p>\r\n                                    <div>\r\n                                {\r\n                                     colorsObject && colorUserChoosed && colorUserChoosed.sizes.map(function(size, index){\r\n                                        if(size.name === sizeUserChoosed.name){\r\n                                            return(\r\n                                                <div className=\"size-item-dp choose-size\"  \r\n                                                    key={index}\r\n                                                    onClick={()=>{\r\n                                                        setSizeUserChoosed(size)\r\n                                                    }}\r\n                                                >{size.name}</div> \r\n                                            )\r\n                                        } else{\r\n                                            return(\r\n                                                <div className=\"size-item-dp\"  \r\n                                                    key={index}\r\n                                                    onClick={()=>{\r\n                                                        setSizeUserChoosed(size)\r\n                                                    }}\r\n                                                >{size.name}</div> \r\n                                            )\r\n                                        }\r\n                                    })    \r\n                                }  \r\n                                </div>\r\n                                </div> */}\r\n                                <div className=\"fragrances-dp\">\r\n                                    <p>Nhóm Hương </p>\r\n                                    <div className=\"list-f-dp\">\r\n                                        {\r\n                                            productEx.fragrances && productEx.fragrances.length > 0 ?\r\n                                            productEx.fragrances.map((item, index) => \r\n                                                <div className=\"fragrance-item\">\r\n                                                    {item.name}\r\n                                                </div>\r\n                                            )\r\n                                            : ''\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"nsx-dp\">\r\n                                    Nhà sản xuất :  {productEx.manufacture.name}\r\n                                    {/* <i className='bx bx-chevron-down icon-read-more'></i> */}\r\n                                </div>\r\n                                <p className=\"desc-dp\">\r\n                                    <div className=\"desc-dp-t\">Mô tả </div>\r\n                                    {\r\n                                        isOpenDesc ? <i className='bx bx-chevron-up icon-read-more' onClick={() => setOpenDesc(!isOpenDesc)}></i>\r\n                                            : <i className='bx bx-chevron-down icon-read-more' onClick={() => setOpenDesc(!isOpenDesc)}></i>\r\n                                    }\r\n                                </p>\r\n                                {\r\n                                    isOpenDesc && <div className=\"desc-more\">{productEx.description}</div>\r\n                                }\r\n\r\n                                <p className=\"k-product-dp\">Tồn kho: <NumberFormat value={productEx.number} displayType={'text'} thousandSeparator={true} /></p>\r\n\r\n                                <div className=\"quantity-dp\">\r\n                                    <p>Số lượng</p>\r\n                                    <div className=\"quantity-btn-dp\">\r\n                                        <span onClick={() => { setNumberUserChoosed(numberUserChoosed === 0 ? 0 : numberUserChoosed - 1) }}><i className='bx bx-minus icon-minus' ></i></span>\r\n                                        <span className=\"quantity\">{numberUserChoosed}</span>\r\n                                        <span onClick={() => { setNumberUserChoosed(numberUserChoosed == productEx.number ? numberUserChoosed : numberUserChoosed + 1) }}><i className='bx bx-plus icon-plus'></i></span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"btn-dp\">\r\n                                    <div onClick={() => { handleAddCart(productEx.id)}} className=\"button-themgh\">Thêm Vào Giỏ Hàng</div>\r\n                                    {/* <Button nameButton=\"Thêm Vào Giỏ Hàng\" onClick={(event)=>{handleAddCart()}}/>\r\n                                    <Button nameButton=\"Mua Hàng\"/> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    : <div>Loading...</div>\r\n            }\r\n        </div>\r\n    )\r\n}","// import Button from \"../MyButton\";\r\n// import \"./style.scss\"\r\n// import NumberFormat from 'react-number-format';\r\n// import { useEffect, useState } from \"react\";\r\n\r\n// export default function ItemProductCart({\r\n//     img = \"/assets/images/slider02.jpg\",\r\n//     name = \"Mug Adventure\",\r\n//     price = \"16.00\",\r\n//     quantity = \"1\",\r\n//     priceTotal = \"16.00\",\r\n//     color =\"red\",\r\n//     size = \"s\",\r\n//     numberChange\r\n\r\n// }){\r\n//     const [quantityProductCart, setQuantityProductCart] = useState(quantity);\r\n    \r\n//     useEffect(()=>{\r\n        \r\n//     },[quantityProductCart])\r\n//     return(\r\n//         <div className=\"item-product-cart-container\">\r\n//             <div className=\"row\">\r\n//                 <div className=\"col-2 img-col\">\r\n//                     <div className=\"img-product\">\r\n//                         <img src={img}></img>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"col-3 name-col\">\r\n//                     <h3>{name} <br/><span className=\"color-size\">color: {color}, size: {size}</span></h3>\r\n                    \r\n//                 </div>\r\n\r\n//                 <div className=\"col-2 price-col\">\r\n//                     <h3><NumberFormat value={price} displayType={'text'} thousandSeparator={true} /> VND</h3>\r\n//                 </div>\r\n\r\n//                 <div className=\"col-2 quantity-col\">\r\n//                     <h3 className=\"quantityy\">\r\n//                         <span><i className='bx bx-minus icon-minus' onClick={()=>{setQuantityProductCart( quantityProductCart === 1 ? 1 : quantityProductCart - 1)}}></i></span>\r\n//                         <span className=\"quantity\">{quantityProductCart}</span>\r\n//                         <span><i className='bx bx-plus icon-plus' onClick={()=>{setQuantityProductCart(quantityProductCart + 1)}}></i></span>\r\n//                     </h3>\r\n//                 </div>\r\n\r\n//                 <div className=\"col-2 price-total-col\">\r\n//                     <h3><NumberFormat value={price*quantityProductCart}  displayType={'text'} thousandSeparator={true} /> VND</h3>\r\n//                 </div>\r\n\r\n//                 <div className=\"col-1 button-col\">\r\n//                     <span><i className='bx bx-trash icon-delete'></i></span>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n\r\n//     )\r\n\r\n// }\r\n\r\nimport \"./style.scss\"\r\nimport NumberFormat from 'react-number-format';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function ProductItemCart({productCart, handleDeleteProductCart, handleAddNumberProductCart, index}){\r\n    const [quantityProductCart, setQuantityProductCart] = useState(productCart.number);\r\n    // useEffect(()=>{\r\n    //     handleAddNumberProductCart(quantityProductCart,index)\r\n    // }, [quantityProductCart])\r\n\r\n    useEffect(()=>{\r\n        if(productCart){\r\n            setQuantityProductCart(productCart.number)\r\n        }\r\n       },[productCart])\r\n   \r\n    return(\r\n        <div className=\"item-product-cart-container\">\r\n            <div className=\"row-hh\">\r\n                <div className=\"col-2 img-col\">\r\n                    <div className=\"img-product\">\r\n                        <img src={process.env.REACT_APP_API_IMG + productCart.product.images[0].path}></img>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-3 name-col\">\r\n                    <h3>{productCart.product.name} <br/><span className=\"color-size\">capacity: {productCart.product.capacity} ml</span></h3>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"col-2 price-col\">\r\n                    <h3><NumberFormat value={productCart.product.price} displayType={'text'} thousandSeparator={true} /> VND</h3>\r\n                </div>\r\n\r\n                <div className=\"col-2 quantity-col\">\r\n                    <h3 className=\"quantityy\">\r\n                        <span><i className='bx bx-minus icon-minus' onClick={()=>{setQuantityProductCart( quantityProductCart === 1 ? 1 : quantityProductCart - 1);handleAddNumberProductCart(productCart.id.productid, (quantityProductCart === 1 ? 1 : quantityProductCart - 1))}}></i></span>\r\n                        <span className=\"quantity\">{quantityProductCart}</span>\r\n                        <span><i className='bx bx-plus icon-plus' onClick={()=>{setQuantityProductCart(quantityProductCart == productCart.product.number ? quantityProductCart : quantityProductCart + 1); handleAddNumberProductCart(productCart.id.productid,(quantityProductCart == productCart.product.number ? quantityProductCart : quantityProductCart + 1))}}></i></span>\r\n                    </h3>\r\n                </div>\r\n\r\n                <div className=\"col-2 price-total-col\">\r\n                    <h3><NumberFormat value={productCart.product.price*quantityProductCart}  displayType={'text'} thousandSeparator={true} /> VND</h3>\r\n                </div>\r\n\r\n                <div className=\"col-1 button-col\">\r\n                    <span><i className='bx bx-trash icon-delete' onClick={()=>handleDeleteProductCart(productCart.id.productid)}></i></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import HeaderBar from '../../../components/Guest/HeaderBar';\r\nimport HeaderImage from '../../../components/share/HeaderImage';\r\nimport BreakSpace from '../../../components/share/BreakSpace';\r\nimport ProductItemCart from '../../../components/share/ProductItemCart';\r\nimport Button01 from '../../../components/share/Button01';\r\nimport \"./style.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport NumberFormat from 'react-number-format';\r\nimport { addProductCartAsync, deleteProductCartAsync, editNumberProductCartAsync, getCartAsync } from '../../../redux/actions/cartAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { returnUrl } from '../../../helpers';\r\n\r\nexport  default function Cart(){\r\n    // let listProductCart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    const listProductCart = useSelector((state)=> state.cart.cartCustomer);\r\n    const [totalPriceCart, setTotalPriceCart] = useState(calcTotalPriceCart(listProductCart));\r\n    const [listProductCartA, setListProductCartA] = useState(null)\r\n    \r\n    function calcTotalPriceCart(list){\r\n        let t = 0;\r\n        if(list){\r\n            list.map(function(item,index){\r\n                t = t + item.product.price*item.number\r\n           })\r\n\r\n        }\r\n        return t;\r\n    }\r\n    \r\n    let dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(getCartAsync());\r\n    },[])\r\n\r\n    // useEffect(()=>{\r\n    //     setListProductCartA(listProductCart)\r\n    // },[listProductCart])\r\n\r\n   useEffect(()=>{\r\n    setTotalPriceCart(calcTotalPriceCart(listProductCart))\r\n   },[listProductCart])\r\n   \r\n   \r\n   const handleDeleteProductCart = (productid) => {\r\n        //setTotalPriceCart( calcTotalPriceCart(newP))\r\n        //console.log(\"productid carttttttttttt: \",productid)\r\n        dispatch(deleteProductCartAsync(productid));\r\n    }\r\n    const handleAddNumberProductCartt = (productid, newnumber) => {\r\n        // const newpadd = {...listProductCartA[index], number: newnumber}\r\n        // const newP = listProductCartA.slice();\r\n        // newP[index] = newpadd;\r\n        // setListProductCartA(newP) ;\r\n        // setTotalPriceCart( calcTotalPriceCart(newP))\r\n\r\n        //let arrayCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n        //const newCart = newP;\r\n        //localStorage.setItem(\"cart\", JSON.stringify(newCart));\r\n        //dispatch(addProductCartAsync({productid, number: newnumber}))\r\n        dispatch(editNumberProductCartAsync({productid, number: newnumber}))\r\n        \r\n    }\r\n    return(\r\n        listProductCart && listProductCart.length > 0 ?\r\n        <div className=\"cart-container\">\r\n            <HeaderBar/>\r\n            <HeaderImage img={returnUrl(\"/assets/images/HeaderImage.jpg\")} title=\"Cart\"/>\r\n            <BreakSpace h= \"30px\"/>\r\n            <div className=\"container\">\r\n                <div className=\"row-hh title-col\">\r\n                    <div className=\"col-5 name-col\">\r\n                        <h3>Sản Phẩm</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-2 price-col\">\r\n                        <h3>Giá</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-2 quantity-col\">\r\n                        <h3>Số Lượng</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-2 price-total-col\">\r\n                        <h3>Tổng Giá</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-1 button-col\">\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"list-product-cart\">\r\n                    {\r\n                        listProductCart && listProductCart.map(function(item,index){\r\n                            return(\r\n                                <ProductItemCart \r\n                                    productCart = {item} \r\n                                    handleDeleteProductCart={handleDeleteProductCart} \r\n                                    handleAddNumberProductCart = {(productid,newnumber)=>handleAddNumberProductCartt(productid,newnumber)}\r\n                                    index={index} />\r\n                            ) \r\n                        })\r\n                    }\r\n                  \r\n                </div>\r\n\r\n               <div className=\"row-hh total-price-bill\">\r\n                    <div className=\"bill-border\">\r\n                        <span className=\"bill-title\">Tổng : </span>\r\n                        <span className=\"bill-price\"><NumberFormat value={totalPriceCart} displayType={'text'} thousandSeparator={true} /> VND</span>\r\n                    </div>\r\n               </div>\r\n\r\n               <div className=\"row-hh btn\">\r\n                   <div className=\"btn-item btn-sale\">\r\n                        <Button01 linkTo=\"/sale\" >Tiếp tục mua hàng</Button01>\r\n                   </div>\r\n                    \r\n                   <div className=\"btn-item btn-buy\">\r\n                        <Button01 linkTo=\"/buy\">Đặt Hàng</Button01>\r\n                   </div>\r\n               </div>\r\n\r\n\r\n            </div>\r\n            <BreakSpace h= \"30px\"/>\r\n        </div>\r\n        : <div className=\"cart-empty\">Cart empty</div>\r\n    );\r\n}\r\n\r\n\r\n//------------------------------\r\n\r\n// import HeaderBar from '../../../components/Guest/HeaderBar';\r\n// import HeaderImage from '../../../components/share/HeaderImage';\r\n// import BreakSpace from '../../../components/share/BreakSpace';\r\n// import ProductItemCart from '../../../components/share/ProductItemCart';\r\n// import Button01 from '../../../components/share/Button01';\r\n// import \"./style.scss\";\r\n// import { useEffect, useState } from \"react\";\r\n// import NumberFormat from 'react-number-format';\r\n// import { addProductCartAsync, deleteProductCartAsync, editNumberProductCartAsync, getCartAsync } from '../../../redux/actions/cartAction';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n\r\n// export  default function Cart(){\r\n//     // let listProductCart = JSON.parse(localStorage.getItem(\"cart\"));\r\n//     const listProductCart = useSelector((state)=> state.cart.cartCustomer);\r\n//     const [totalPriceCart, setTotalPriceCart] = useState(calcTotalPriceCart(listProductCart));\r\n//     const [listProductCartA, setListProductCartA] = useState(null)\r\n    \r\n//     function calcTotalPriceCart(list){\r\n//         let t = 0;\r\n//         if(list){\r\n//             list.map(function(item,index){\r\n//                 t = t + item.product.price*item.number\r\n//            })\r\n//            console.log(t)\r\n//         }\r\n//         return t;\r\n//     }\r\n    \r\n//     let dispatch = useDispatch();\r\n//     useEffect(()=>{\r\n//         dispatch(getCartAsync());\r\n//     },[])\r\n\r\n//     useEffect(()=>{\r\n//         setListProductCartA(listProductCart)\r\n//     },[listProductCart])\r\n\r\n//    useEffect(()=>{\r\n//     setTotalPriceCart( calcTotalPriceCart(listProductCart))\r\n//    },[listProductCart])\r\n   \r\n   \r\n//    const handleDeleteProductCart = (index, productid) => {\r\n//         const newP = listProductCartA.slice();\r\n//         newP.splice(index,1);\r\n//         setListProductCartA(newP) ;\r\n//         setTotalPriceCart( calcTotalPriceCart(newP))\r\n\r\n//         //let arrayCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n//         const newCart = newP;\r\n//         //localStorage.setItem(\"cart\", JSON.stringify(newCart));\r\n//         console.log(\"productid carttttttttttt: \",productid)\r\n//         dispatch(deleteProductCartAsync(productid));\r\n//     }\r\n//     const handleAddNumberProductCartt = (index, productid, newnumber) => {\r\n//         const newpadd = {...listProductCartA[index], number: newnumber}\r\n//         const newP = listProductCartA.slice();\r\n//         newP[index] = newpadd;\r\n//         setListProductCartA(newP) ;\r\n//         setTotalPriceCart( calcTotalPriceCart(newP))\r\n\r\n//         //let arrayCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n//         const newCart = newP;\r\n//         //localStorage.setItem(\"cart\", JSON.stringify(newCart));\r\n//         //dispatch(addProductCartAsync({productid, number: newnumber}))\r\n//         dispatch(editNumberProductCartAsync({productid, number: newnumber}))\r\n        \r\n//     }\r\n//     return(\r\n//         listProductCart && listProductCart.length > 0 ?\r\n//         <div className=\"cart-container\">\r\n//             <HeaderBar/>\r\n//             <HeaderImage img= \"/assets/images/slider01.jpg\" title=\"Cart\"/>\r\n//             <BreakSpace h= \"30px\"/>\r\n//             <div className=\"container\">\r\n//                 <div className=\"row-hh title-col\">\r\n//                     <div className=\"col-5 name-col\">\r\n//                         <h3>Sản Phẩm</h3>\r\n//                     </div>\r\n\r\n//                     <div className=\"col-2 price-col\">\r\n//                         <h3>Giá</h3>\r\n//                     </div>\r\n\r\n//                     <div className=\"col-2 quantity-col\">\r\n//                         <h3>Số Lượng</h3>\r\n//                     </div>\r\n\r\n//                     <div className=\"col-2 price-total-col\">\r\n//                         <h3>Tổng Giá</h3>\r\n//                     </div>\r\n\r\n//                     <div className=\"col-1 button-col\">\r\n                        \r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"list-product-cart\">\r\n//                     {\r\n//                         listProductCartA && listProductCartA.map(function(item,index){\r\n//                             //setTotalPriceCart(totalPriceCart + item.price)\r\n//                             return(\r\n//                                 <ProductItemCart \r\n//                                     productCart = {item} \r\n//                                     handleDeleteProductCart={handleDeleteProductCart} \r\n//                                     handleAddNumberProductCart = {(index,productid,n)=>handleAddNumberProductCartt(index,productid,n)}\r\n//                                     index={index} />\r\n//                             ) \r\n//                         })\r\n//                     }\r\n                  \r\n//                 </div>\r\n\r\n//                <div className=\"row-hh total-price-bill\">\r\n//                     <div className=\"bill-border\">\r\n//                         <span className=\"bill-title\">Tổng : </span>\r\n//                         <span className=\"bill-price\"><NumberFormat value={totalPriceCart} displayType={'text'} thousandSeparator={true} /> VND</span>\r\n//                     </div>\r\n//                </div>\r\n\r\n//                <div className=\"row-hh btn\">\r\n//                    <div className=\"btn-item btn-sale\">\r\n//                         <Button01 linkTo=\"/sale\" >Tiếp tục mua hàng</Button01>\r\n//                    </div>\r\n                    \r\n//                    <div className=\"btn-item btn-buy\">\r\n//                         <Button01 linkTo=\"/buy\">Đặt Hàng</Button01>\r\n//                    </div>\r\n//                </div>\r\n\r\n\r\n//             </div>\r\n//             <BreakSpace h= \"30px\"/>\r\n//         </div>\r\n//         : <div className=\"cart-empty\">Cart empty</div>\r\n//     );\r\n// }","import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { createOrderAsync } from \"../../../redux/actions/orderAction\";\r\n//import { Warning } from \"./Notification\";\r\n\r\nexport default function PayPal(props){\r\n  const [value, setValue] = useState(1);\r\n  const [loaded, setLoaded] = useState(false);\r\n  let payPalRef = useRef();\r\n\r\n  const product = {\r\n    price: \"2.00\",\r\n    description: \"Test Product\",\r\n  };\r\n  let dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src =\r\n      \"https://www.paypal.com/sdk/js?client-id=AaW0pewOwOv55WYRL4r77P_SxgtIOtxK4Cx1D9Ey4oyXrGzUfqz7ckGZK7ZH0JwkLo6CQSNIwGAOYmKl\";\r\n    script.addEventListener(\"load\", () => setLoaded(true));\r\n    document.body.appendChild(script);\r\n\r\n    if (loaded) {\r\n      setTimeout(() => {\r\n        window.paypal\r\n          .Buttons({\r\n            createOrder: (data, actions) => {\r\n              return actions.order.create({\r\n                purchase_units: [\r\n                  {\r\n                    description: \"Cool looking table\",\r\n                    amount: {\r\n                      value: props.total,\r\n                    },\r\n                  },\r\n                ],\r\n              });\r\n            },\r\n            onApprove:async function(data, actions) {\r\n              const order = await actions.order.capture();\r\n              //console.log();\r\n              const article = {\r\n                deposit: props.total\r\n              };\r\n              dispatch(createOrderAsync(props.d))\r\n              .then(\r\n                history.push(\"/\")\r\n            )\r\n\r\n            //   await axios\r\n            //     .put(\"http://localhost:8084/api/booking-cards/deposit\", article)\r\n            //     .then((response) => {\r\n            //       props.deposit(props.payAmount);\r\n            //       console.log(order);\r\n            //     })\r\n            //     .catch(function (error) {\r\n            //       console.log(error.response.data.errorCode);\r\n            //     });\r\n\r\n            //   await axios\r\n            //     .put(\"http://localhost:8084/api/booking-cards\")\r\n            //     .then((response) => {})\r\n            //     .catch(function (error) {\r\n            //       console.log(error.response.data.errorCode);\r\n            //       //Warning(\"Failed\", error.response.data.errorCode);\r\n            //     });\r\n            },\r\n          })\r\n          .render(payPalRef);\r\n      });\r\n    }\r\n  }, [loaded, product.price, product.description]);\r\n  return (\r\n    <div>\r\n      <div className=\"paypal-container\" ref={(v) => (payPalRef = v)} />\r\n    </div>\r\n  );\r\n};\r\n\r\n","import Cookies from 'js-cookie';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useEffect, useState } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from \"react-router\";\r\nimport HeaderBar from \"../../../components/Guest/HeaderBar\";\r\nimport BreakSpace from \"../../../components/share/BreakSpace\";\r\nimport HeaderImage from \"../../../components/share/HeaderImage\";\r\nimport ProductItemBuy from \"../../../components/share/ProductItemBuy\";\r\nimport { getCartAsync } from \"../../../redux/actions/cartAction\";\r\nimport { getCustomerByEmailAsync } from \"../../../redux/actions/customerAction\";\r\nimport { createOrderAsync } from \"../../../redux/actions/orderAction\";\r\nimport PayPal from \"./paypal\";\r\n//import ItemProductBuy from \"../../components/ItemProductBuy\";\r\nimport \"./style.scss\";\r\nimport { returnUrl } from '../../../helpers';\r\n\r\n\r\n\r\nexport default function Buy() {\r\n    //San Pham\r\n    //let listProductCart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    const listProductCart = useSelector((state) => state.cart.cartCustomer);\r\n    const [totalPriceCart, setTotalPriceCart] = useState(calcTotalPriceCart(listProductCart));\r\n    const [totalPriceBill, setTotalPriceBill] = useState(0);\r\n    const [showPaypal, setShowPaypal] = useState(false);\r\n\r\n    let dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getCartAsync());\r\n    }, [])\r\n\r\n    function calcTotalPriceCart(list) {\r\n        let t = 0;\r\n        if (list) {\r\n            list.map(function (item, index) {\r\n                t = t + item.product.price * item.number\r\n            })\r\n            //console.log(t)\r\n        }\r\n        return t;\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getCartAsync());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (listProductCart) {\r\n            setTotalPriceCart(calcTotalPriceCart(listProductCart))\r\n        }\r\n    }, [listProductCart])\r\n\r\n    const shipBill = 0;\r\n    useEffect(() => {\r\n        setTotalPriceBill(totalPriceCart + shipBill)\r\n    }, [totalPriceCart])\r\n\r\n\r\n    //Nguoi Dat\r\n    const userCurrent = useSelector((state) => state.customers.customerSingle);\r\n    //const infoUserOder = {...userCurrent};\r\n    const [infoUserOder, setInfoUserOder] = useState({ name: '', phone: '', address: '', note: '' });\r\n    //console.log(\"gggggg\", userCurrent)\r\n    const decoded = jwt_decode(Cookies.get('X-Auth-Token'));\r\n    useEffect(() => {\r\n        dispatch(getCustomerByEmailAsync(decoded.sub))\r\n    }, [])\r\n\r\n    // useEffect(()=>{\r\n    //     if(userCurrent){\r\n    //         setInfoUserOder({...infoUserOder,\r\n    //             name: userCurrent.name,\r\n    //             phone: userCurrent.phone,\r\n    //             address: userCurrent.address,\r\n    //             note: \"\"\r\n    //         })\r\n    //     }\r\n    //   },[userCurrent])\r\n\r\n    // const [formData, setFormData] = useState({\r\n    //     name: infoUserOder.name,\r\n    //     phone: infoUserOder.phone,\r\n    //     address: infoUserOder.address,\r\n    //     note: \"\"\r\n    // })\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        phone: '',\r\n        address: '',\r\n        note: \"\"\r\n    })\r\n    useEffect(() => {\r\n        if (userCurrent) {\r\n            setFormData({\r\n                ...formData,\r\n                name: userCurrent.name,\r\n                phone: userCurrent.phone,\r\n                address: userCurrent.address,\r\n                note: userCurrent.note\r\n            })\r\n        }\r\n    }, [userCurrent])\r\n\r\n    const [formValidError, setFomValidError] = useState({\r\n        name: '',\r\n        phone: '',\r\n        address: '',\r\n        note: ''\r\n    })\r\n    const [isValidForm, setIsValidForm] = useState(false);\r\n\r\n    function handleChangeFormData(key) {\r\n        return (evt) => {\r\n            setFormData({\r\n                ...formData,\r\n                [key]: evt.target.value\r\n            })\r\n            //console.log(\"kkk: \",formData); //note\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //console.log(\"kkk22: \",formData); //note\r\n        setFomValidError(checkValidateInput(formData));\r\n    }, [formData]);\r\n\r\n    function checkValidateInput(formD) {\r\n        let err = {}\r\n        if (!formD.name) {\r\n            err.name = \"Bạn chưa điền tên người nhận hàng!\"\r\n        }\r\n        if (!formD.phone) {\r\n            err.phone = \"Bạn chưa điền số điện thoại!\"\r\n        } else if (formD.phone.length < 10) {\r\n            err.phone = \"Số điện thoại chưa hợp lệ.\"\r\n        }\r\n        if (!formD.address) {\r\n            err.address = \"Bạn chưa điền địa chỉ!\"\r\n        }\r\n        //console.log(\"error form: \",err)\r\n\r\n        if (err.name || err.phone || err.address) {\r\n            setIsValidForm(false)\r\n\r\n        } else {\r\n            setIsValidForm(true)\r\n            //err.isValidForm = true;\r\n\r\n        }\r\n\r\n        return err;\r\n    }\r\n    ////end form\r\n\r\n    //dat hang\r\n    let history = useHistory();\r\n    const handleDatHangOnline = () => {\r\n\r\n\r\n\r\n        if (!isValidForm) return;\r\n\r\n\r\n        // console.log(\"product choose: \", listProductCart);\r\n\r\n\r\n        setShowPaypal(!showPaypal);\r\n        // dispatch(createOrderAsync({\r\n        //     nameCustomer: formData.name,\r\n        //     address: formData.address,\r\n        //     phoneNumber: formData.phone,\r\n        //     isPaid: 1\r\n        // }))\r\n        // .then(\r\n        //     history.push(\"/\")\r\n        // )\r\n\r\n    }\r\n\r\n    const handleDatHangOnlinePaypal = () => {\r\n        dispatch(createOrderAsync({\r\n            nameCustomer: formData.name,\r\n            address: formData.address,\r\n            phoneNumber: formData.phone,\r\n            ispaid: 1\r\n        }))\r\n        .then(\r\n            history.push(\"/\")\r\n        )\r\n\r\n    }\r\n\r\n    const handleDatHangOffline = () => {\r\n\r\n        if (!isValidForm) return;\r\n\r\n\r\n        // console.log(\"product choose: \", listProductCart);\r\n\r\n\r\n        dispatch(createOrderAsync({\r\n            nameCustomer: formData.name,\r\n            address: formData.address,\r\n            phoneNumber: formData.phone,\r\n            ispaid: 0\r\n        }))\r\n            .then(\r\n                history.push(\"/\")\r\n            )\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"buy-container\">\r\n            <HeaderBar />\r\n            <HeaderImage img={returnUrl(\"/assets/images/HeaderImage.jpg\")} title=\"Buy\" />\r\n            <BreakSpace h=\"30px\" />\r\n            <div className=\"row-hh wrap\">\r\n                <div className=\"container-left col-7\">\r\n                    <div className=\"row-hh title-col\">\r\n                        <div className=\"col-5 name-col\">\r\n                            <h3>Sản Phẩm</h3>\r\n                        </div>\r\n\r\n                        <div className=\"col-2 price-col\">\r\n                            <h3>Giá</h3>\r\n                        </div>\r\n\r\n                        <div className=\"col-2 quantity-col\">\r\n                            <h3>Số Lượng</h3>\r\n                        </div>\r\n\r\n                        <div className=\"col-2 price-total-col\">\r\n                            <h3>Tổng Giá</h3>\r\n                        </div>\r\n\r\n                        <div className=\"col-1 button-col\">\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"list-product-cart\">\r\n                        {listProductCart &&\r\n                            listProductCart.map(function (item, index) {\r\n                                return (\r\n                                    <ProductItemBuy\r\n                                        img={process.env.REACT_APP_API_IMG + item.product.images[0].path}\r\n                                        name={item.product.name}\r\n                                        price={item.product.price}\r\n                                        quantity={item.number}\r\n                                        priceTotal={item.price * item.number}\r\n                                        capacity={item.product.capacity}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"row-hh total-price-bill\">\r\n                        <div className=\"bill-border\">\r\n                            <span className=\"bill-title\">Tổng :  </span>\r\n                            <span className=\"bill-price\"><NumberFormat value={totalPriceBill} displayType={'text'} thousandSeparator={true} /> VND</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"row btn\">\r\n                   <div className=\"btn-item\">\r\n                        <Button nameButton=\"Tiếp tục mua hàng\"/>\r\n                   </div>\r\n                    \r\n                   <div className=\"btn-item\">\r\n                        <Button nameButton=\"Đặt Hàng\"/>\r\n                   </div>\r\n               </div> */}\r\n                </div>\r\n\r\n                <div className=\"container-right col-5\">\r\n                    <h3 className=\"title-cr\">Địa chỉ giao hàng</h3>\r\n                    <form className=\"form-buy-info\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"label\">Tên người nhận hàng<span className=\"icon-s\">*</span></label>\r\n                            <input id=\"name\" type=\"text\" className=\"form-control bac\" placeholder=\"\"\r\n                                value={formData.name}\r\n                                onChange={handleChangeFormData('name')}\r\n                            />\r\n                            {formValidError.name && <label className=\"label-error\">{formValidError.name}</label>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"label\">Địa chỉ nhận hàng<span className=\"icon-s\">*</span></label>\r\n                            <input id=\"name\" type=\"text\" className=\"form-control bac\" placeholder=\"\"\r\n                                value={formData.address}\r\n                                onChange={handleChangeFormData('address')}\r\n                            />\r\n                            {formValidError.address && <label className=\"label-error\">{formValidError.address}</label>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"label\">Số điện thoại liên lạc<span className=\"icon-s\">*</span></label>\r\n                            <input id=\"name\" type=\"text\" className=\"form-control bac\" placeholder=\"\"\r\n                                value={formData.phone}\r\n                                onChange={handleChangeFormData('phone')}\r\n                            />\r\n                            {formValidError.phone && <label className=\"label-error\">{formValidError.phone}</label>}\r\n                        </div>\r\n                        {/* <div className=\"form-group\">\r\n                        <label className=\"label\">Lưu ý với người bán</label>\r\n                        <input id=\"name\" type=\"text\" className=\"form-control bac\" placeholder=\"\"\r\n                            value={formData.note} \r\n                            onChange={handleChangeFormData('note')}\r\n                        />   \r\n                        \r\n                    </div> */}\r\n                    </form>\r\n                    <h3 className=\"title-cr\">Thông tin đơn hàng</h3>\r\n                    <div className=\"row-hh\">\r\n                        <div className=\"col-6 type\">Phí giao hàng: </div>\r\n                        <div className=\"col-6 number\"><NumberFormat value={shipBill} displayType={'text'} thousandSeparator={true} /> VND</div>\r\n                    </div>\r\n                    <div className=\"row-hh\">\r\n                        <div className=\"col-6 type\">Tổng tiền hàng: </div>\r\n                        <div className=\"col-6 number\"><NumberFormat value={totalPriceBill} displayType={'text'} thousandSeparator={true} /> VND</div>\r\n                    </div>\r\n                    <div className=\"row-hh total-bill\">\r\n                        <div className=\"col-6 type\">Tổng cộng: </div>\r\n                        <div className=\"col-6 number\"><NumberFormat value={totalPriceBill} displayType={'text'} thousandSeparator={true} /> VND</div>\r\n                    </div>\r\n\r\n                    {\r\n                        showPaypal && <PayPal total={totalPriceBill} d={{\r\n                            nameCustomer: formData.name,\r\n                            address: formData.address,\r\n                            phoneNumber: formData.phone,\r\n                            ispaid: 1\r\n                        }} ></PayPal>\r\n                             \r\n                    }\r\n\r\n                    <div className=\"row-hh btn-dat-hang\">\r\n                        {\r\n                            showPaypal ? <div onClick={() => handleDatHangOnline()} className=\"button-dathang\">CLOSE</div>\r\n                            : <div onClick={() => handleDatHangOnline()} className=\"button-dathang\">THANH TOÁN ONLINE</div>\r\n                        }\r\n                            \r\n                    </div>\r\n                    <div className=\"row-hh btn-dat-hang\">\r\n                        <div onClick={() => handleDatHangOffline()} className=\"button-dathang\">THANH TOÁN OFLINE</div>\r\n                        {/* <Button  nameButton=\"Đặt Hàng\"/> */}\r\n                    </div>\r\n                </div >\r\n\r\n            </div>\r\n\r\n            <BreakSpace h=\"30px\" />\r\n        </div>\r\n    );\r\n}","\r\nimport NumberFormat from 'react-number-format';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useParams } from \"react-router\";\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//import { getOrdersByUserIdAsync } from '../../../redux/actions/orderAction';\r\nimport './style.scss'\r\nimport { getOrdersCustomerAsync } from '../../../../redux/actions/orderAction';\r\n\r\n\r\n\r\nexport default function GuestOrders(){\r\n    const demo = {\r\n        code : \"DH0001\",\r\n        createdAt: \"2021-09-07T10:23:45.937+00:00\",\r\n        ship: 30000,\r\n        price_total: 300000,\r\n        status: \"CHo\",\r\n    }\r\n    const OrdersGustItem = (item) => {\r\n        return(\r\n            <div className=\"order-gust-item-container\">\r\n                <div className=\"row-hh \">\r\n                    <div className=\"col-1 item-ogit\">{item.idorder} </div>\r\n                    <div className=\"col-2 item-ogit\">{item.nameCustomer} </div>\r\n                    <div className=\"col-2 item-ogit\">{item.createdate} </div>\r\n                    {/* <div className=\"col item-ogit\">{(new Date(item.createdAt)).toISOString().slice(0,10)} </div> */}\r\n                    {/* <div className=\"col item-ogit\"><NumberFormat value={item.ship}  displayType={'text'} thousandSeparator={true} /> VND </div>\r\n                    <div className=\"col item-ogit\"><NumberFormat value={item.price_total}  displayType={'text'} thousandSeparator={true} /> VND </div> */}\r\n                    <div className=\"col-2 item-ogit\"><NumberFormat value={item.totalprice}  displayType={'text'} thousandSeparator={true} /> VND</div>\r\n                    <div className=\"col-2 item-ogit\"><span className=\"\">{item.ispaid === 1 ? \"Đã thanh toán\" : \"Chưa thanh toán\"}</span></div>\r\n                    <div className=\"col-2 item-ogit\"><span className=\"done\">{item.status === 1 ? \"Chưa xác nhận\" : item.status === 2 ? \"Đã xác nhận\" : item.status === 3 ?\"Đang giao\": item.status === 4? \"Thành công\": \"Đã Xóa\"}</span></div>\r\n                    <div className=\"col-1 item-ogit last\" onClick={()=>handleEdit(item.idorder)}><span><i className='bx bx-link-external iconEdit'></i></span></div>   \r\n                       \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let history = useHistory();\r\n    const handleEdit = (id) => {\r\n\r\n        history.push(`/orders-/${id}`);\r\n    }\r\n\r\n    /////////////\r\n    const ordersOfUser = useSelector((state) => state.orders.ordersOfUser);\r\n    let {customerId} = useParams();\r\n    let dispatch = useDispatch();\r\n    useEffect(()=> {\r\n        dispatch(getOrdersCustomerAsync(customerId));\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"gust-orders-container\">\r\n            <h3 className=\"title\">Danh sách đơn hàng</h3>\r\n            <div className=\"row-hh header-row\">\r\n                <div className=\"col-1\">Mã ĐH</div>\r\n                <div className=\"col-2\">Tên Người Nhận</div>\r\n                <div className=\"col-2\">Ngày Đặt</div>\r\n                {/* <div className=\"col\">Phí Giao Hàng</div> */}\r\n                <div className=\"col-2\">Tổng Tiền hàng</div>\r\n                {/* <div className=\"col\">Tổng Hóa Đơn</div> */}\r\n                <div className=\"col-2\">TT Thanh toán</div>\r\n                <div className=\"col-2\">Trạng Thái</div>\r\n                <div className=\"col-1\"></div>\r\n                {/* <div className=\"col\" onClick={()=>handleEdit(item._id)}><span><i className='bx bx-edit-alt iconEdit'> </i></span></div>            */}\r\n            </div>\r\n\r\n            <div className=\"orders-list-container\">\r\n                {\r\n                    ordersOfUser ? ordersOfUser.map((item,index) =>\r\n                        OrdersGustItem(item)\r\n                    )\r\n                    : <div></div>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport './style.scss'\r\nimport vari from '../../../../assets/scss/vari.module.scss';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport { getSingleOrderAsync, updateOrderStatusAsync } from '../../../../redux/actions/orderAction'\r\nimport ProductItemBuy from '../../../../components/share/ProductItemBuy';\r\n\r\nimport StepProgressBar from 'react-step-progress';\r\n// import the stylesheet\r\nimport 'react-step-progress/dist/index.css';\r\n\r\nconst customStylesSelect = {\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        //borderBottom: '1px dotted pink',\r\n        //color: state.isSelected ? 'red' : 'blue',s\r\n        //backgroundColor: state.isSelected ? 'red' : 'white',\r\n\r\n        backgroundColor: state.isDisabled\r\n            ? undefined\r\n            : state.isSelected\r\n                ? vari.selectItemChoosed\r\n                : state.isFocused\r\n                    ? vari.selectItemHover\r\n                    : undefined,\r\n    }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition, fontSize: \"20px\" };\r\n    }\r\n}\r\n\r\nexport function detailItem(detail) {\r\n    return <div className=\"detail-item\">\r\n        <div>\r\n            <span>{detail.id.productid}vvvv{detail.number}vvvv{detail.price}vvv{detail.product.name}</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst shipBill = 0;\r\n\r\nfunction GuestOrderDetail() {\r\n    //const roleList = useSelector((state) => state.roles.roleList);\r\n    const orderSingle = useSelector((state) => state.orders.orderSingle)\r\n    //const orderDetail = useSelector((state) => state.orders.orderSingleDetail)\r\n\r\n    const [formData, setFormData] = useState({\r\n        importId: '',\r\n        createday: '',\r\n        nameEmployee: '',\r\n        totalprice: null,\r\n        status: null,\r\n    })\r\n    const [formValidError, setFomValidError] = useState({\r\n        importId: '',\r\n        createday: '',\r\n        nameEmployee: '',\r\n        totalprice: '',\r\n        status: '',\r\n\r\n    })\r\n    const [isValidForm, setIsValidForm] = useState(false);\r\n    const [startStep, setStartStep] = useState(null);\r\n\r\n    //const[roleOptions, setRoleOptions] = useState(null)\r\n    let dispatch = useDispatch();\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n        dispatch(getSingleOrderAsync(id))\r\n        .then(res =>{\r\n            if(res.ok == true){\r\n                setStartStep(res.status)\r\n                setStatusNow(res.status)\r\n            }\r\n        }\r\n        )\r\n\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (orderSingle) {\r\n            setFormData({\r\n                //importId: importNoteSingle.importId,\r\n                createday: orderSingle.createday,\r\n                nameEmployee: orderSingle.nameEmployee,\r\n                nameManufacture: orderSingle.nameManufacture,\r\n                totalprice: orderSingle.totalprice,\r\n                //status: statusOptions.find(obj => obj.value === orderSingle.status),\r\n                status: orderSingle.status,\r\n\r\n            })\r\n        }\r\n    }, [orderSingle]);\r\n\r\n\r\n\r\n    function handleChangeFormData(key) {\r\n        if (key === 'role') {\r\n            return (value) => {\r\n                setFormData({\r\n                    ...formData,\r\n                    [key]: value\r\n                })\r\n            }\r\n        }\r\n\r\n        // return (evt) => {\r\n        //     setFormData({\r\n        //         ...formData,\r\n        //         [key]: evt.target.value\r\n        //     })\r\n        //     console.log(\"kkk: \", formData); //note\r\n        // }\r\n    }\r\n\r\n\r\n    //procces bar\r\n    //setup the step content\r\n    // const step1Content = <h1>Step 1 Content</h1>;\r\n    // const step2Content = <h1>Step 2 Content</h1>;\r\n    // const step3Content = <h1>Step 3 Content</h1>;\r\n\r\n    const [statusNow, setStatusNow] = useState(null); \r\n\r\n    // setup step validators, will be called before proceeding to the next step\r\n    function step2Validator() {\r\n        // return a boolean\r\n        //setStatusNow(2)\r\n\r\n        dispatch(updateOrderStatusAsync(id,2))\r\n        .then(res => {\r\n            // console.log(\"ok: \",res.ok )\r\n            if (res.ok) {\r\n                setStatusNow(2);\r\n               \r\n            } else {\r\n              // Thất bại\r\n              //console.log(\"status\",status)\r\n            }\r\n        });\r\n        return true\r\n    }\r\n    \r\n    function step3Validator() {\r\n        // return a boolean\r\n        //setStatusNow(3)\r\n\r\n        dispatch(updateOrderStatusAsync(id,3))\r\n        .then(res => {\r\n            // console.log(\"ok: \",res.ok )\r\n            if (res.ok) {\r\n                setStatusNow(3);\r\n               \r\n            } else {\r\n              // Thất bại\r\n              //console.log(\"status\",status)\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n    function step4Validator() {\r\n        // return a boolean\r\n        //setStatusNow(4)\r\n\r\n        dispatch(updateOrderStatusAsync(id,4))\r\n        .then(res => {\r\n            // console.log(\"ok: \",res.ok )\r\n            if (res.ok) {\r\n                setStatusNow(4);\r\n               \r\n            } else {\r\n              // Thất bại\r\n              //console.log(\"status\",status)\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n    \r\n    function onFormSubmit() {\r\n        // handle the submit logic here\r\n        // This function will be executed at the last step\r\n        // when the submit button (next button in the previous steps) is pressed4\r\n\r\n\r\n    }\r\n\r\n    function handleCancelOrder(){\r\n        //console.log(\"step5Validator\")\r\n        dispatch(updateOrderStatusAsync(id,0))\r\n        .then(res => {\r\n            // console.log(\"ok: \",res.ok )\r\n            if (res.ok) {\r\n                setStatusNow(0);\r\n               \r\n            } else {\r\n              // Thất bại\r\n              //console.log(\"status\",status)\r\n            }\r\n        });\r\n    }\r\n\r\n    const steps=[\r\n        {\r\n        label: 'Chưa xác nhận',\r\n        //subtitle: '10%',\r\n        name: 'step 1',\r\n        //content: step1Content,\r\n        in: 1\r\n        },\r\n        {\r\n        label: 'Đã xác nhận',\r\n        //subtitle: '50%',\r\n        name: 'step 2',\r\n        //content: step2Content,\r\n        validator: step2Validator,\r\n        in: 2\r\n        },\r\n        {\r\n        label: 'Đang giao',\r\n        //subtitle: '100%',\r\n        name: 'step 3',\r\n        //content: step3Content,\r\n        validator: step3Validator,\r\n        in:3\r\n        },\r\n        {\r\n            label: 'Thành công',\r\n            //subtitle: '100%',\r\n            name: 'step 4',\r\n            //content: step3Content,\r\n            validator: step4Validator,\r\n            in:4\r\n            },\r\n        {\r\n            label: 'Cancel',\r\n            //subtitle: '100%',\r\n            name: 'step 0',\r\n            //content: step3Content,\r\n            //validator: step4Validator\r\n        }\r\n    ]\r\n    ////////////////////end procces bar\r\n\r\n    // let dispatch = useDispatch();\r\n    // const errResponse = useSelector((state) => state.users.errResponse);\r\n    // const status = useSelector((state) => state.users.status);\r\n    //const status = \"oops something wrong\";\r\n    function handleSaveUser(evt) {\r\n        // evt.preventDefault();\r\n       \r\n        //     dispatch(updateOrderStatusAsync({\r\n        //         id: id,\r\n        //         status: statusNow\r\n        //     }))\r\n        //     .then(res => {\r\n        //         if (res.ok) {\r\n        //           // Thành công\r\n        //             // console.log(\"errResponse\",errResponse)\r\n\r\n        //         } else {\r\n        //           // Thất bại\r\n        //           //console.log(\"status\",status)\r\n        //         }\r\n        //     });\r\n    }\r\n\r\n    let history = useHistory();\r\n    const handleCancel = () => {\r\n        history.push(\"/sale\");\r\n    }\r\n\r\n    const [currIndexStart, setCurrIndexStart] = useState(0);\r\n\r\n    const userTableHead = [\r\n        <th style={{ width: \"15%\" }}>Image Product</th>,\r\n        <th style={{ width: \"15%\" }}>ID Product</th>,\r\n        <th style={{ width: \"21%\" }}>Name Product</th>,\r\n        <th style={{ width: \"12%\" }}>Number</th>,\r\n        <th style={{ width: \"15%\" }}>Price</th>,\r\n        <th style={{ width: \"18%\" }}>Cost</th>,\r\n        // <th style={{width: \"12%\"}}>Action</th>,\r\n    ]\r\n    const renderHead = (item, index) => item;\r\n\r\n    //<span>{detail.id.productid}vvvv{detail.number}vvvv{detail.price}vvv{detail.product.name}</span>\r\n    const renderBody = (item, index) => (\r\n        <tr key={index}>\r\n            <td>{currIndexStart + index + 1}</td>\r\n            {console.log(\"image: \", process.env.REACT_APP_API_IMG, item.image)}\r\n            <td>\r\n                <div className=\"img-product\">\r\n                    {\r\n                        item.product.images &&\r\n                            (item.product.images.length > 0) ? <img src={process.env.REACT_APP_API_IMG + item.product.images[0].path} alt=\"\"></img> :\r\n                            <img src=\"/assets/images/avatarDefault.png\" alt=\"\"></img>\r\n                    }\r\n                </div>\r\n            </td>\r\n            <td>{item.id.productid}</td>\r\n            <td>{item.product.name}</td>\r\n            <td><NumberFormat value={item.number} displayType={'text'} thousandSeparator={true} /></td>\r\n            <td><NumberFormat value={item.price} displayType={'text'} thousandSeparator={true} /> VND</td>\r\n            <td><NumberFormat value={item.product.cost} displayType={'text'} thousandSeparator={true} /> VND</td>\r\n            {/* <td>\r\n                <span onClick={()=>handleEdit(item.importId)}> <i className='bx bx-edit-alt iconEdit'> </i></span>\r\n                <span onClick={()=>handleDelete(item.importId)}> <i className='bx bx-trash iconDelete no'></i></span>\r\n            </td> */}\r\n        </tr>\r\n    )\r\n\r\n\r\n    return (\r\n        orderSingle && (statusNow || statusNow === 0) && \r\n        <div>\r\n            <div className=\"customer-order-detail-container\">\r\n                <h2 className=\"title\">\r\n                    <span><i className='bx bx-right-arrow icon'></i></span>\r\n                    <span>CHI TIẾT ĐƠN HÀNG</span>\r\n                </h2>\r\n                <div>\r\n                    <form className=\"register-form\" onSubmit={handleSaveUser}>\r\n                        {\r\n                            orderSingle.status == 0? '' : orderSingle.ispaid == 1 ? <div className=\"ispaid-true\"><span>ĐÃ THANH TOÁN</span></div>\r\n                            : <div className=\"ispaid-false\"><span>CHƯA THANH TOÁN</span></div>\r\n                        }\r\n\r\n                        {\r\n                            orderSingle.status ==  0?\r\n                            <div className=\"order-cancel ispaid-false\"><span>ĐƠN HÀNG ĐÃ HỦY</span></div> :\r\n                            <div className=\"process-b-c\">                         \r\n                                <StepProgressBar\r\n                                    wrapperClass='normal-process-edit'\r\n                                    buttonWrapperClass={statusNow == 4 ? 'btn-process-step-bar no' : 'btn-process-step-bar'}\r\n                                    nextBtnName=\"NEXT\"\r\n                                    startingStep={orderSingle.status}\r\n                                    onSubmit={onFormSubmit}\r\n                                    steps={steps}\r\n                                /> \r\n                            \r\n                                {\r\n                                    statusNow < 3 ?\r\n                                    <div className=\"container-btn-cancel\" onClick={handleCancelOrder}><div className=\"btn-cancel\">CANCEL</div></div> : ''\r\n                                }         \r\n                                \r\n                            </div>\r\n                        }\r\n\r\n                       \r\n\r\n                        <div className=\"row-hh\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">ID Order</label>\r\n                                    <input id=\"name\" type=\"text\" className=\"form-control\" placeholder=\" \" readonly\r\n                                        value={orderSingle.idorder}\r\n                                    //onChange={handleChangeFormData('name')}\r\n                                    />\r\n                                    {/* {formValidError.name && <label className=\"label-error\">{formValidError.name}</label>} */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">CreateDay</label>\r\n                                    <input id=\"email\" type=\"text\" className=\"form-control\" placeholder=\" \" readonly\r\n                                        value={orderSingle.createdate}\r\n                                    //onChange={handleChangeFormData('email')}\r\n                                    />\r\n                                    {/* {formValidError.email && <label className=\"label-error\">{formValidError.email}</label>} */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"row-hh\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Total Price</label>\r\n                                    <input id=\"name\" type=\"text\" className=\"form-control\" placeholder=\" \" readonly\r\n                                        value={orderSingle.totalprice}\r\n                                    //onChange={handleChangeFormData('name')}\r\n                                    />\r\n                                    {/* <NumberFormat value={formData.totalprice} displayType={'text'} thousandSeparator={true} /> VND */}\r\n                                    {/* {formValidError.name && <label className=\"label-error\">{formValidError.name}</label>} */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"label\">Paid</label>\r\n                                    <input id=\"name\" type=\"text\" className=\"form-control\" placeholder=\" \" readonly\r\n                                        value={orderSingle.ispaid == 0 ? \"Chưa thanh toán\" : \"Đã thanh toán\"}\r\n                                        //onChange={handleChangeFormData('name')}\r\n                                    />\r\n                                    {/* <Select options={genderOptions}\r\n                                        className=\"select-hh\"\r\n                                        defaultValue={genderOptions[0]}\r\n                                        placeholder=\"gender...\"\r\n                                        menuColor=\"red\"\r\n                                        styles={customStylesSelect}\r\n                                        value={formData.gender} \r\n                                        onChange={handleChangeFormData('gender')} \r\n                                    /> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   \r\n                        <div className=\"buy-container\">\r\n                            <span>List Detail</span>\r\n                            <div className=\"row-hh wrap\">\r\n                                <div className=\"container-left col-7\">\r\n                                    <div className=\"row-hh title-col\">\r\n                                        <div className=\"col-5 name-col\">\r\n                                            <h3>Sản Phẩm</h3>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-2 price-col\">\r\n                                            <h3>Giá</h3>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-2 quantity-col\">\r\n                                            <h3>Số Lượng</h3>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-2 price-total-col\">\r\n                                            <h3>Tổng Giá</h3>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-1 button-col\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"list-product-cart\">\r\n                                        {orderSingle && orderSingle.product &&\r\n                                            orderSingle.product.map(function (item, index) {\r\n                                                return (\r\n                                                    <ProductItemBuy\r\n                                                        img={process.env.REACT_APP_API_IMG + item.listimages[0].path}\r\n                                                        name={item.productName}\r\n                                                        price={item.price}\r\n                                                        quantity={item.number}\r\n                                                        priceTotal={item.price * item.number}\r\n                                                    //capacity ={item.product.capacity}\r\n                                                    />\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div className=\"row-hh total-price-bill\">\r\n                                        <div className=\"bill-border\">\r\n                                            <span className=\"bill-title\">Tổng :  </span>\r\n                                            <span className=\"bill-price\"><NumberFormat value={orderSingle.totalprice} displayType={'text'} thousandSeparator={true} /> VND</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"container-right col-5\">\r\n                                    <h3 className=\"title-cr\">Địa chỉ giao hàng</h3>\r\n                                    <form className=\"form-buy-info\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\">Tên người nhận hàng<span className=\"icon-s\">*</span></label>\r\n                                            <input id=\"name\" type=\"text\" className=\"form-control bac\" placeholder=\"\"\r\n                                                value={orderSingle.nameCustomer}\r\n                                                onChange={handleChangeFormData('name')}\r\n                                            />\r\n                                            {formValidError.name && <label className=\"label-error\">{formValidError.name}</label>}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\">Địa chỉ nhận hàng<span className=\"icon-s\">*</span></label>\r\n                                            <input id=\"name\" type=\"text\" className=\"form-control bac\" placeholder=\"\"\r\n                                                value={orderSingle.address}\r\n                                                onChange={handleChangeFormData('address')}\r\n                                            />\r\n                                            {formValidError.address && <label className=\"label-error\">{formValidError.address}</label>}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\">Số điện thoại liên lạc<span className=\"icon-s\">*</span></label>\r\n                                            <input id=\"name\" type=\"text\" className=\"form-control bac\" placeholder=\"\"\r\n                                                value={orderSingle.phone}\r\n                                                onChange={handleChangeFormData('phone')}\r\n                                            />\r\n                                            {formValidError.phone && <label className=\"label-error\">{formValidError.phone}</label>}\r\n                                        </div>\r\n                                        {/* <div className=\"form-group\">\r\n                                        <label className=\"label\">Lưu ý với người bán</label>\r\n                                        <input id=\"name\" type=\"text\" className=\"form-control bac\" placeholder=\"\"\r\n                                            value={formData.note} \r\n                                            onChange={handleChangeFormData('note')}\r\n                                        />   \r\n                                        \r\n                                    </div> */}\r\n                                    </form>\r\n                                    <h3 className=\"title-cr\">Thông tin đơn hàng</h3>\r\n                                    <div className=\"row-hh\">\r\n                                        <div className=\"col-6 type\">Phí giao hàng: </div>\r\n                                        <div className=\"col-6 number\"><NumberFormat value={shipBill} displayType={'text'} thousandSeparator={true} /> VND</div>\r\n                                    </div>\r\n                                    <div className=\"row-hh\">\r\n                                        <div className=\"col-6 type\">Tổng tiền hàng: </div>\r\n                                        <div className=\"col-6 number\"><NumberFormat value={orderSingle.totalprice} displayType={'text'} thousandSeparator={true} /> VND</div>\r\n                                    </div>\r\n                                    <div className=\"row-hh total-bill\">\r\n                                        <div className=\"col-6 type\">Tổng cộng: </div>\r\n                                        <div className=\"col-6 number\"><NumberFormat value={orderSingle.totalprice + shipBill} displayType={'text'} thousandSeparator={true} /> VND</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row-hh btn-dat-hang\">\r\n                                        {/* <div onClick={()=>handleDatHang()} className=\"button-dathang\">XÁC NHẬN ĐẶT HÀNG</div> */}\r\n                                        {/* <Button  nameButton=\"Đặt Hàng\"/> */}\r\n                                    </div>\r\n                                </div >\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group last\">\r\n                            {/* <div className=\"btn-left\"><span onClick={() => handleCancel()}>Cancel</span></div> */}\r\n                            <span className=\"btn-right\"><button onClick={() => handleCancel()} className=\"form-control btn\">Cancel</button></span>\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GuestOrderDetail;\r\n","import './assets/scss/reset-css.scss';\r\nimport './assets/scss/style-class.scss';\r\nimport './assets/scss/grid.scss';\r\nimport './assets/scss/variables.scss';\r\nimport './assets/boxicons-2.0.7/css/boxicons.min.css';\r\nimport './App.css';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport{\r\n  BrowserRouter as Router,\r\n  Route,\r\n  // Link,\r\n  Switch\r\n} from 'react-router-dom'\r\n\r\nimport HeaderBar from './components/Guest/HeaderBar';\r\nimport Footer from './components/Guest/Footer';\r\nimport Home from './pages/Guest/Home';\r\nimport Login from './pages/Guest/Login';\r\nimport About from './pages/Guest/About';\r\nimport Blog from './pages/Guest/Blog';\r\nimport Contact from './pages/Guest/Contact';\r\nimport Register from './pages/Guest/Register';\r\n//import LogResBgPage from './components/share/LogResBgPage';\r\nimport Sale from './pages/Guest/Sale';\r\n\r\nimport AdminHome from './pages/Admin/AdminHome';\r\nimport DetailProduct from './pages/Guest/DetailProduct';\r\nimport Cart from './pages/Guest/Cart';\r\nimport Buy from './pages/Guest/Buy';\r\nimport GuestOrders from './pages/Guest/Order/GuestOrders';\r\nimport GuestOrderDetail from './pages/Guest/Order/GuestOrderDetail/GuestOrderDetail';\r\nimport {useSelector } from 'react-redux';\r\n\r\nimport Cookies from 'js-cookie';\r\nimport { useEffect } from 'react';\r\n//import jwt_decode from \"jwt-decode\";\r\n//import { loginCheckLocalAsync } from './redux/actions/authAction';\r\n\r\nfunction App() {\r\n  const basename = process.env.REACT_APP_BASENAME || \"/\";\r\n\r\n  const isLogin = useSelector((state) => state.auth.isLogin);\r\n  const userCurrent = useSelector(state => state.auth.currentUser); \r\n  //let dispatch = useDispatch();\r\n  useEffect(()=>{   \r\n      if(Cookies.get('X-Auth-Token')){\r\n          //const decoded = jwt_decode(Cookies.get('X-Auth-Token'));\r\n          //dispatch(loginCheckLocalAsync())\r\n          //dispatch(loginCheckLocalAsync(localStorage.getItem(\"userCurrentId\")))\r\n      }\r\n  },[])\r\n\r\n\r\n  return (\r\n    <Router basename={basename}>\r\n        <Switch>\r\n            {/* {\r\n              userCurrent ?\r\n              (userCurrent.roles[0] === \"Admin\" || userCurrent.roles[0] === \"Saler\") && isLogin === true ?\r\n              <Route path=\"/admin\" component={AdminHome}/> : ''\r\n              : ''\r\n            } */}\r\n            {/* <Route path=\"/admin\" component={AdminHome}/> */}\r\n\r\n            <div className=\"App\">\r\n              <HeaderBar/>\r\n              <Route exact path=\"/\" component={Home}/>\r\n              <Route path=\"/login\" component={Login}/>\r\n              <Route path=\"/register\" component={Register}/>\r\n              <Route path=\"/about\" component={About}/>\r\n              <Route path=\"/blog\" component={Blog}/> \r\n              <Route path=\"/contact\" component={Contact}/>\r\n              <Route path=\"/sale\" component={Sale}/>\r\n              <Route path=\"/product-detail/:id\" component={DetailProduct}/>\r\n              <Route path=\"/product-detail/\" component={DetailProduct}/>\r\n              <Route path=\"/buy\" component={Buy}/>\r\n              \r\n              {\r\n                isLogin ?  <Route path=\"/cart\" component={Cart}/>: ''\r\n              }\r\n\r\n              {\r\n                isLogin ?  <Route path=\"/orders/:customerId\" component={GuestOrders}/>: ''\r\n              }\r\n              {\r\n                isLogin ? <Route path=\"/orders-/:id\" component={GuestOrderDetail}/> : ''\r\n              }\r\n              \r\n            \r\n              <ToastContainer\r\n                position=\"bottom-right\"\r\n                autoClose={1500}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n              />\r\n\r\n              <Footer/>\r\n            </div>\r\n        </Switch>\r\n    </Router>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import *  as actionTypes from '../constants/authConstant';\r\n\r\nconst initialState = {\r\n    // currentUser: {\r\n    //     name: \" \",\r\n    //     image: \" \",    \r\n    // },\r\n    // isLogin: false,\r\n    isLoading: true,\r\n    errorMessage: null,\r\n\r\n    isLogin: false,\r\n    token: '',\r\n    currentUser: null\r\n}\r\n\r\nfunction authReducers(state = initialState, action) {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_LOGIN:\r\n            return{\r\n                ...state,\r\n                currentUser: action.payload,\r\n                isLogin: true,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return{\r\n                ...state,\r\n                currentUser: action.payload,\r\n                isLogin: false,\r\n                isLoading: false,\r\n            }\r\n           \r\n        case actionTypes.AUTH_CHECK_LOGIN_RELOAD:\r\n            return{\r\n                ...state,\r\n                currentUser: action.payload,\r\n                isLogin: true,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.AUTH_REGISTER:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n            \r\n            case actionTypes.AUTH_GET_CURRENT_USER:\r\n                return{\r\n                    ...state,\r\n                    currentUser: action.payload.currentUser,\r\n                    isLoading: false\r\n                }\r\n            \r\n            case actionTypes.AUTH_SET_TOKEN:\r\n                return{\r\n                    ...state,\r\n                    token: action.payload,\r\n                    isLoading: false\r\n                }\r\n      \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducers;","import *  as actionTypes from '../constants/cartConstant';\r\n\r\nconst initialState = {\r\n    cartCustomer: null,\r\n    isLoading: true\r\n}\r\n\r\nfunction cartReducers(state = initialState, action) {\r\n    switch(action.type){\r\n        case actionTypes.CART_GET_CART:\r\n            return{\r\n                ...state,\r\n                cartCustomer : action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.CART_ADD_PRODUCT:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.CART_DELETE_PRODUCT:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.CART_EDIT_NUMBER_PRODUCT:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducers;","import *  as actionTypes from '../constants/categoryConstant';\r\n\r\nconst initialState = {\r\n    categoryList: null,\r\n    categorySingle: null,\r\n    //categoryListName: null,\r\n    isLoading: true,\r\n    errorMessage: null\r\n}\r\n\r\nfunction categoryReducers(state = initialState, action) {\r\n    switch(action.type){\r\n        case actionTypes.CATEGORY_GET_LIST:\r\n            return{\r\n                ...state,\r\n                categoryList: action.payload,\r\n                isLoading: false,\r\n            }\r\n        // case actionTypes.CATEGORY_GET_LIST_NAME:\r\n        //     return{\r\n        //         ...state,\r\n        //         categoryListName: action.payload,\r\n        //         isLoading: false,\r\n        //     }\r\n        case actionTypes.CATEGORY_DELETE_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.CATEGORY_CREATE_NEW:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.CATEGORY_GET_SINGLE:\r\n            return{\r\n                ...state,\r\n                categorySingle: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.CATEGORY_EDIT_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default categoryReducers;","import *  as actionTypes from '../constants/customerConstant';\r\n\r\nconst initialState = {\r\n    customerList: null,\r\n    customerSingle: null,\r\n    //customerListName: null,\r\n    isLoading: true,\r\n    errorMessage: null,\r\n    //images: null\r\n}\r\n\r\nfunction customerReducers(state = initialState, action) {\r\n    switch(action.type){\r\n        case actionTypes.CUSTOMER_GET_LIST:\r\n            return{\r\n                ...state,\r\n                customerList: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.CUSTOMER_DELETE_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.CUSTOMER_CREATE_NEW:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.CUSTOMER_GET_SINGLE:\r\n            return{\r\n                ...state,\r\n                customerSingle: action.payload,\r\n                isLoading: false,\r\n            }\r\n            case actionTypes.CUSTOMER_GET_BY_EMAIL:\r\n                return{\r\n                    ...state,\r\n                    customerSingle: action.payload,\r\n                    isLoading: false,\r\n                }\r\n        case actionTypes.CUSTOMER_EDIT_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n            case actionTypes.CUSTOMER_EDIT_ROLE_BY_ID:\r\n                return{\r\n                    ...state,\r\n                    isLoading: false,\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default customerReducers;","import *  as actionTypes from '../constants/employeeConstant';\r\n\r\nconst initialState = {\r\n    employeeList: null,\r\n    employeeSingle: null,\r\n    //employeeListName: null,\r\n    isLoading: true,\r\n    errorMessage: null,\r\n    //images: null\r\n}\r\n\r\nfunction employeeReducers(state = initialState, action) {\r\n    switch(action.type){\r\n        case actionTypes.EMPLOYEE_GET_LIST:\r\n            return{\r\n                ...state,\r\n                employeeList: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.EMPLOYEE_DELETE_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.EMPLOYEE_CREATE_NEW:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.EMPLOYEE_GET_SINGLE:\r\n            return{\r\n                ...state,\r\n                employeeSingle: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.EMPLOYEE_EDIT_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n            case actionTypes.EMPLOYEE_EDIT_ROLE_BY_ID:\r\n                return{\r\n                    ...state,\r\n                    isLoading: false,\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default employeeReducers;","import *  as actionTypes from '../constants/fragranceConstant';\r\n\r\nconst initialState = {\r\n    fragranceList: null,\r\n    fragranceSingle: null,\r\n    //fragranceListName: null,\r\n    isLoading: true,\r\n    errorMessage: null\r\n}\r\n\r\nfunction fragranceReducers(state = initialState, action) {\r\n    switch(action.type){\r\n        case actionTypes.FRAGRANCE_GET_LIST:\r\n            return{\r\n                ...state,\r\n                fragranceList: action.payload,\r\n                isLoading: false,\r\n            }\r\n        // case actionTypes.FRAGRANCE_GET_LIST_NAME:\r\n        //     return{\r\n        //         ...state,\r\n        //         fragranceListName: action.payload,\r\n        //         isLoading: false,\r\n        //     }\r\n        case actionTypes.FRAGRANCE_DELETE_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.FRAGRANCE_CREATE_NEW:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.FRAGRANCE_GET_SINGLE:\r\n            return{\r\n                ...state,\r\n                fragranceSingle: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.FRAGRANCE_EDIT_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default fragranceReducers;","import *  as actionTypes from '../constants/importNoteConstant';\r\n\r\nconst initialState = {\r\n    importNoteList: null,\r\n    importNoteSingle: null,\r\n    importNoteSingleDetail: null,\r\n    //importNoteListName: null,\r\n    isLoading: true,\r\n    errorMessage: null\r\n}\r\n\r\nfunction importNoteReducers(state = initialState, action) {\r\n    switch(action.type){\r\n        case actionTypes.IMPORT_NOTE_GET_LIST:\r\n            return{\r\n                ...state,\r\n                importNoteList: action.payload,\r\n                isLoading: false,\r\n            }\r\n        \r\n        case actionTypes.IMPORT_NOTE_CREATE_NEW:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.IMPORT_NOTE_GET_SINGLE:\r\n            return{\r\n                ...state,\r\n                importNoteSingle: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.IMPORT_NOTE_GET_SINGLE_DETAIL:\r\n            return{\r\n                ...state,\r\n                importNoteSingleDetail: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.IMPORT_NOTE_UPDATE_STATUS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n            case actionTypes.IMPORT_NOTE_UPDATE_STATUS_DELETE:\r\n                return{\r\n                    ...state,\r\n                    isLoading: false,\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default importNoteReducers;","import *  as actionTypes from '../constants/manufactureConstant';\r\n\r\nconst initialState = {\r\n    manufactureList: null,\r\n    manufactureSingle: null,\r\n    //manufactureListName: null,\r\n    isLoading: true,\r\n    errorMessage: null\r\n}\r\n\r\nfunction manufactureReducers(state = initialState, action) {\r\n    switch(action.type){\r\n        case actionTypes.MANUFACTURE_GET_LIST:\r\n            return{\r\n                ...state,\r\n                manufactureList: action.payload,\r\n                isLoading: false,\r\n            }\r\n        // case actionTypes.MANUFACTURE_GET_LIST_NAME:\r\n        //     return{\r\n        //         ...state,\r\n        //         manufactureListName: action.payload,\r\n        //         isLoading: false,\r\n        //     }\r\n        case actionTypes.MANUFACTURE_DELETE_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.MANUFACTURE_CREATE_NEW:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.MANUFACTURE_GET_SINGLE:\r\n            return{\r\n                ...state,\r\n                manufactureSingle: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.MANUFACTURE_EDIT_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default manufactureReducers;","import *  as actionTypes from '../constants/orderConstant';\r\n\r\nconst initialState = {\r\n    orderList: null,\r\n    orderSingle: null,\r\n    isLoading: true,\r\n    errorMessage: null,\r\n    ordersOfUser: null\r\n}\r\n\r\nfunction orderReducers(state = initialState, action) {\r\n    switch(action.type){\r\n        case actionTypes.ORDER_GET_LIST:\r\n            return{\r\n                ...state,\r\n                orderList: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.ORDER_GET_BY_ID_CUSTOMER:\r\n            return{\r\n                ...state,\r\n                ordersOfUser: action.payload,\r\n                isLoading: false,\r\n            }\r\n        \r\n        case actionTypes.ORDER_CREATE_NEW:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.ORDER_GET_SINGLE:\r\n            return{\r\n                ...state,\r\n                orderSingle: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.ORDER_UPDATE_STATUS:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default orderReducers;","import *  as actionTypes from '../constants/productConstant';\r\n\r\nconst initialState = {\r\n    productList: null,\r\n    productSingle: null,\r\n    //productListName: null,\r\n    isLoading: true,\r\n    errorMessage: null,\r\n    productFilterByCategory: null,\r\n    productListB:null\r\n    //images: null\r\n}\r\n\r\nfunction productReducers(state = initialState, action) {\r\n    switch(action.type){\r\n        case actionTypes.PRODUCT_GET_LIST:\r\n            return{\r\n                ...state,\r\n                productList: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.PRODUCT_GET_LIST_B:\r\n                return{\r\n                    ...state,\r\n                    productListB: action.payload,\r\n                    isLoading: false,\r\n                }\r\n        case actionTypes.PRODUCT_GET_LIST_BY_MANUFACTURE_ID:\r\n            return{\r\n                ...state,\r\n                productList: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.PRODUCT_GET_LIST_BY_CATEGORY:\r\n                return{\r\n                    ...state,\r\n                    productList: action.payload,\r\n                    isLoading: false,\r\n                }\r\n        case actionTypes.PRODUCT_DELETE_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.PRODUCT_CREATE_NEW:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.PRODUCT_GET_SINGLE:\r\n            return{\r\n                ...state,\r\n                productSingle: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.PRODUCT_EDIT_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.PRODUCT_GET_IMAGES:\r\n            return{\r\n                ...state,\r\n                images: action.payload,\r\n                isLoading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default productReducers;","import *  as actionTypes from '../constants/roleConstant';\r\n\r\nconst initialState = {\r\n    roleList: null,\r\n    roleSingle: null,\r\n    isLoading: true,\r\n    errorMessage: null\r\n}\r\n\r\nfunction roleReducers(state = initialState, action) {\r\n    switch(action.type){\r\n        case actionTypes.ROLE_GET_LIST:\r\n            return{\r\n                ...state,\r\n                roleList: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.ROLE_DELETE_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.ROLE_CREATE_NEW:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.ROLE_GET_SINGLE:\r\n            return{\r\n                ...state,\r\n                roleSingle: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case actionTypes.ROLE_EDIT_BY_ID:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default roleReducers;","import { combineReducers } from 'redux';\r\nimport authReducers from './authReducer';\r\nimport cartReducers from './cartReducer';\r\n\r\nimport categoryReducers from './categoryReducer';\r\nimport customerReducers from './customerReducer';\r\nimport employeeReducers from './employeeReducer';\r\nimport fragranceReducers from './fragranceReducer';\r\nimport importNoteReducers from './importNoteReducer';\r\nimport manufactureReducers from './manufactureReducer';\r\nimport orderReducers from './orderReducer';\r\nimport productReducers from './productReducer';\r\nimport roleReducers from './roleReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    // users: userReducers,\r\n    auth: authReducers,\r\n    categories: categoryReducers,\r\n    fragrances: fragranceReducers,\r\n    manufactures: manufactureReducers,\r\n    products: productReducers,\r\n    employees: employeeReducers,\r\n    customers: customerReducers, \r\n    roles: roleReducers,\r\n    importNote: importNoteReducers,\r\n    cart: cartReducers,\r\n    orders: orderReducers\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n//import {compose} from 'redux'\r\n//import { createLogger } from 'redux-logger';\r\n\r\n// const middleware = [thunk];\r\n\r\n// if(process.env.NODE_ENV != \"production\") {\r\n//     middleware.push(createLogger());\r\n// }\r\n\r\n// export const store = createStore(\r\n//     reducers,\r\n//     applyMiddleware(...middleware)\r\n// )\r\n\r\n// const configureStore = () => {\r\n//     const middlewares = [thunk]\r\n//     const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n//     const enhancers = composeEnhancers(applyMiddleware(...middlewares));\r\n//     const store = createStore(reducers(), enhancers);\r\n\r\n//     return store;\r\n// }\r\n\r\n// export default configureStore;\r\n\r\nconst middleware = [thunk]\r\nif (process.env.NODE_ENV === \"development\"){\r\n    middleware.push(logger);\r\n}\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store';\r\n\r\nimport { CookiesProvider } from 'react-cookie';\r\n// import './assets/scss/reset-css.scss';\r\n// import './assets/scss/grid.scss';\r\n// import './assets/scss/variables.scss';\r\n// import './assets/boxicons-2.0.7/css/boxicons.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CookiesProvider>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>\r\n    </CookiesProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}